[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "STATS 787: Data Visualisation lab assignments",
    "section": "",
    "text": "This Quarto website is home to assignment lab answers in the course STATS 787: Data Visualisation at UoA (University of Auckland) held by the author of the grid package Paul Murrell.\n\n\n\n Back to top"
  },
  {
    "objectID": "labs/lab10_answer.html",
    "href": "labs/lab10_answer.html",
    "title": "lab 10 - Highest Attained Education in Denmark",
    "section": "",
    "text": "The data set is a csv file, dk_highest_education.csv, extracted from table HFUDD16 (note that you can choose “English” in the upper right corner) as part of Highest Education Attained on statistikbanken. This is a publicly available data base of data sets generated by Danmarks Statistik, which is the central authority of Danish statistics, who collects, processes and publishes statistics about the Danish society.\nThe data has counts of the highest attained education of Danish residents based on a number of factors. We can read the csv into R and quickly give it some meaningful column names.\n\nhighed &lt;- read.csv(\"dk_highest_education.csv\", header = FALSE)[, -(1:2)]\ncolnames(highed) &lt;- c(\n  \"sex\", \"socioeconomic_status\", \"highest_education\", \"age\", 2009:2022\n)\nhead(highed)\n\n  sex  socioeconomic_status     highest_education         age   2009   2010\n1 Men Enrolled in education H10 Primary education 15-19 years 140633 146660\n2 Men Enrolled in education H10 Primary education 20-24 years  21355  24397\n3 Men Enrolled in education H10 Primary education 25-29 years   4150   4708\n4 Men Enrolled in education H10 Primary education 30-34 years   1830   1853\n5 Men Enrolled in education H10 Primary education 35-39 years    976    957\n6 Men Enrolled in education H10 Primary education 40-44 years    650    620\n    2011   2012   2013   2014   2015   2016   2017   2018   2019   2020   2021\n1 149409 150766 149242 147672 145439 144336 144044 144411 142423 145685 145535\n2  25725  26379  26752  25828  24709  23457  22675  22082  21695  23137  22183\n3   5317   6010   6464   6992   6444   5930   5606   5606   5554   5633   5685\n4   1919   2072   2300   2380   2372   2372   2291   2181   2169   2133   2232\n5   1049   1099   1110   1075   1001   1063    995   1016   1030   1048   1078\n6    616    619    703    594    624    576    507    496    498    547    638\n    2022\n1 144946\n2  19279\n3   4931\n4   2126\n5   1050\n6    594\n\n\nEach row contains a count of Danish residents in years 2009-2022 based on sex, socioeconomic status, highest attained education and age groups of 5 years from 15-19 to 65-69. We deselect the first 2 columns as they contain the same value for all observations.\n\n\nWe create a long version of data, where years are in a single column and the counts are in another column.\n\nlibrary(tidyverse)\n\nhighed_long &lt;- highed %&gt;% \n  pivot_longer(\n    cols = as.character(2009:2022),\n    names_to = \"year\",\n    values_to = \"count\"\n  ) %&gt;% \n  mutate(year = as.numeric(year))",
    "crumbs": [
      "Lab assignments",
      "lab 10 - Highest Attained Education in Denmark"
    ]
  },
  {
    "objectID": "labs/lab10_answer.html#the-data-set",
    "href": "labs/lab10_answer.html#the-data-set",
    "title": "lab 10 - Highest Attained Education in Denmark",
    "section": "",
    "text": "The data set is a csv file, dk_highest_education.csv, extracted from table HFUDD16 (note that you can choose “English” in the upper right corner) as part of Highest Education Attained on statistikbanken. This is a publicly available data base of data sets generated by Danmarks Statistik, which is the central authority of Danish statistics, who collects, processes and publishes statistics about the Danish society.\nThe data has counts of the highest attained education of Danish residents based on a number of factors. We can read the csv into R and quickly give it some meaningful column names.\n\nhighed &lt;- read.csv(\"dk_highest_education.csv\", header = FALSE)[, -(1:2)]\ncolnames(highed) &lt;- c(\n  \"sex\", \"socioeconomic_status\", \"highest_education\", \"age\", 2009:2022\n)\nhead(highed)\n\n  sex  socioeconomic_status     highest_education         age   2009   2010\n1 Men Enrolled in education H10 Primary education 15-19 years 140633 146660\n2 Men Enrolled in education H10 Primary education 20-24 years  21355  24397\n3 Men Enrolled in education H10 Primary education 25-29 years   4150   4708\n4 Men Enrolled in education H10 Primary education 30-34 years   1830   1853\n5 Men Enrolled in education H10 Primary education 35-39 years    976    957\n6 Men Enrolled in education H10 Primary education 40-44 years    650    620\n    2011   2012   2013   2014   2015   2016   2017   2018   2019   2020   2021\n1 149409 150766 149242 147672 145439 144336 144044 144411 142423 145685 145535\n2  25725  26379  26752  25828  24709  23457  22675  22082  21695  23137  22183\n3   5317   6010   6464   6992   6444   5930   5606   5606   5554   5633   5685\n4   1919   2072   2300   2380   2372   2372   2291   2181   2169   2133   2232\n5   1049   1099   1110   1075   1001   1063    995   1016   1030   1048   1078\n6    616    619    703    594    624    576    507    496    498    547    638\n    2022\n1 144946\n2  19279\n3   4931\n4   2126\n5   1050\n6    594\n\n\nEach row contains a count of Danish residents in years 2009-2022 based on sex, socioeconomic status, highest attained education and age groups of 5 years from 15-19 to 65-69. We deselect the first 2 columns as they contain the same value for all observations.\n\n\nWe create a long version of data, where years are in a single column and the counts are in another column.\n\nlibrary(tidyverse)\n\nhighed_long &lt;- highed %&gt;% \n  pivot_longer(\n    cols = as.character(2009:2022),\n    names_to = \"year\",\n    values_to = \"count\"\n  ) %&gt;% \n  mutate(year = as.numeric(year))",
    "crumbs": [
      "Lab assignments",
      "lab 10 - Highest Attained Education in Denmark"
    ]
  },
  {
    "objectID": "labs/lab10_answer.html#questions-of-interest",
    "href": "labs/lab10_answer.html#questions-of-interest",
    "title": "lab 10 - Highest Attained Education in Denmark",
    "section": "Questions of Interest",
    "text": "Questions of Interest\nWe wish to investigate\n\nThe proportion/distribution of men and women in different groups of highest attained education\nThe distribution of highest attained education across age groups (mostly with focus on people from age 25 and up since 15-24 year olds are quite restricted in what they “have had time to achieve” in regards to education)\nThe distribution of socioeconomic status\n\nacross time (stratified by highest attained education)\nacross different age groups",
    "crumbs": [
      "Lab assignments",
      "lab 10 - Highest Attained Education in Denmark"
    ]
  },
  {
    "objectID": "labs/lab10_answer.html#distribution-of-men-and-women-in-highest-attained-education",
    "href": "labs/lab10_answer.html#distribution-of-men-and-women-in-highest-attained-education",
    "title": "lab 10 - Highest Attained Education in Denmark",
    "section": "Distribution of men and women in highest attained education",
    "text": "Distribution of men and women in highest attained education\nWe start by making creating a summarised data set\n\nsexHighedSum &lt;- highed_long %&gt;% \n  summarise(n = sum(count), .by = c(\"sex\", \"highest_education\"))\n\n\nSimple bar plot of gender proportion\nTo investigate the distribution of men and women for each group of highest attained education, we create a simple bar plot.\nWe choose a bar plot because the use of position/length/area are effective visual channels according to Kieran Healy as mentioned in section 1.5 of Data Visualization: A Practical Introduction.\nAccording to Wilke in section 20.2 of Fundamentals of Data Visualization, we should design figures without legends whenever possible, so we use the ggtext package to color our title with HTML. We first create some helper function to enable us to do so. Specifically, we create a function get_default_colors which will set a default color scheme if no colors are specified. We also create a function color_html_label to color a single word with HTML and a function color_html_label_instring to color and wrap and entire string with line breaks.\n\nget_default_colors &lt;- function(data, colvar, colors = NULL) {\n  colvarVals &lt;- unique(data[[colvar]])\n  if (is.null(colors)) {\n    colors &lt;- setNames(scales::pal_hue()(length(colvarVals)), colvarVals)\n  } else if (is.null(names(colors))) {\n    colors &lt;- setNames(colors, colvarVals)\n  }\n  return(colors)\n}\ncolor_html_label &lt;- function(color, label) {\n    paste0(\n    \"&lt;span style = 'color:\", color, \";'&gt;\", label, \"&lt;/span&gt;\"\n  )\n}\nescape_parentheses &lt;- function(string) {\n  gsub(\n      \"\\\\(\", \"\\\\\\\\(\",\n      gsub(\"\\\\)\", \"\\\\\\\\)\", string)\n      )\n}\ncolor_html_label_instring &lt;- function(\n    string,\n    colors,\n    width = 50\n) {\n  string_wrap &lt;- stringr::str_wrap(\n    string,\n    width = width\n  ) %&gt;% \n    stringr::str_replace_all(\n      pattern = \"\\\\n\",\n      replacement = \"&lt;br&gt;\"\n    )\n  color_catch &lt;- gsub(\n    \" \", \"( |&lt;br&gt;)\",\n    escape_parentheses(names(colors)),\n    fixed = TRUE)\n  color_names_wrapped &lt;- escape_parentheses(\n    stringr::str_match(string_wrap, color_catch)[, 1]\n    )\n  names(colors) &lt;- color_names_wrapped\n  colors_html &lt;- setNames(color_html_label(colors, names(colors)),\n             names(colors))\n  string_wrap_color &lt;- stringr::str_replace_all(\n    string_wrap,\n    colors_html\n  )\n  return(string_wrap_color)\n}\n\nWe then create the bar plot on our summarised data using geom_col, using position = \"fill\" as we are interested in the proportion of men and women and not the absolute counts. We use coord_flip() to flip the axes, so we can read the labels more easily. We also use scale_y_continuous(expand = expansion(mult = c(0, .05))) to remove some space from the bars to the axis labels. Using the description in the title, we can also remove the axis titles. Finally, we superimpose a line at 50% to make it easier to see whether there is an overrepresentation of men or women.\n\nsexBar &lt;- function(data = sexHighedSum, colors = NULL) {\n  \n  colors &lt;- get_default_colors(data = data, colvar = \"sex\", colors = colors)\n  title &lt;- \"Proportion of Men and Women with Highest Attained Education\"\n  colored_title &lt;- color_html_label_instring(\n    title,\n    colors,\n    width = 35\n  )\n  \n  ggplot(data, aes(x = highest_education, y = n, fill = sex)) +\n    geom_col(position = \"fill\") +\n    coord_flip() +\n    geom_hline(yintercept = 0.5, color = \"grey20\") +\n    scale_y_continuous(expand = expansion(mult = c(0, .01))) +\n    scale_fill_manual(values = colors) +\n    labs(title = colored_title) +\n    theme(\n      plot.title = ggtext::element_markdown(\n        size = 20,\n      ),\n      plot.background=element_rect(colour=NA, fill=\"white\"),\n    panel.background=element_rect(colour=NA,\n                                  fill=\"white\"),\n      axis.title = element_blank(),\n      axis.ticks.y = element_blank(),\n      legend.position = \"none\"\n    )\n}\n\nsexBar()\n\n\n\n\n\n\n\n\n\nAnswering questions of interest\nThe plot clearly shows for which groups there are more men and for which there are more women.\nIt is however a bit hard to see by how much the proportions differ from 50%.\n\n\n\nBar plot with annotated labels\nTo create a plot with annotated labels, we use a low-level solution of creating the plot exactly how we want it with grid. We also use gridtext to ensure that if a user includes values in the title that is a value in data for the colored variable, the word is colored accordingly in the title.\n\nlibrary(grid)\nlibrary(gridtext)\n\nWe create a function that creates a grob with a bar and label.\n\nbarRatioGrob &lt;- function(\n    data,\n    colvar = \"sex\",\n    colors = NULL,\n    label.digits = 1,\n    bar.height = unit(1, \"cm\"),\n    include_colvar_label = TRUE) {\n  \n  colors &lt;- get_default_colors(data = data, colvar = colvar, colors = colors)\n  data &lt;- data %&gt;% \n    dplyr::mutate(\n      label = paste0(\n        case_when(\n          include_colvar_label ~ paste0(get(colvar), \" \"),\n          TRUE ~ \"\"),\n        format(\n          round(rate * 100, digits = label.digits),\n          nsmall = label.digits\n          ),\n        \"%\"\n        ),\n      sumrate = cumsum(rate),\n      label_pos = sumrate - rate\n    )\n  \n  colVals &lt;- unique(data[[colvar]])\n  \n  barText &lt;- function(i) {\n    colData &lt;- data %&gt;% \n    dplyr::filter(get(colvar) == colVals[i])\n    \n    bar &lt;- rectGrob(x = unit(colData$label_pos, \"npc\"),\n                   hjust = 0,\n                   width = unit(colData$rate, \"npc\"),\n                   height = bar.height,\n                   gp = gpar(col = colors[colVals[i]], fill = colors[colVals[i]]))\n    text &lt;- textGrob(x = unit(colData$label_pos, \"npc\") + unit(1, \"mm\"),\n                    label = colData$label,\n                    hjust = 0,\n                    gp = gpar(fontface = \"bold\"))\n    grobTree(bar, text)\n  }\n  \n  barsTexts &lt;- do.call(grobTree, lapply(1:length(colVals), barText))\n  return(barsTexts)\n}\n\nUsing this function, we then create a function that creates bars and labels within each group defined by facetvar. We use grid.layout to create a layout with the number of rows equal to the number of unique values in facetvar. We then create a grob for each group and draw it in the correct position. We also add the facet labels and a title.\n\nbar_ratios &lt;- function(\n    data = highed_long,\n    colvar = \"sex\",\n    facetvar = \"highest_education\",\n    countvar = \"count\",\n    colors = NULL,\n    title = \"Proportion of Men and Women with Highest Attained Education\",\n    title.size = 20,\n    title.width = 45,\n    title.space = unit(0.14, \"npc\"),\n    facetlabel.size = 11,\n    ratelabel.digits = 2,\n    bar.height.ratio = 0.8,\n    plot.margin = unit(1, \"cm\"),\n    include_colvar_label = TRUE\n) {\n  \n  data &lt;- data %&gt;% \n    summarise(n = sum(get(countvar)), .by = all_of(c(colvar, facetvar))) %&gt;% \n    mutate(tot = sum(n), rate = n / tot, .by = all_of(facetvar))\n  \n  uniq &lt;- unique(data[[facetvar]])\n  n_facets &lt;- length(uniq)\n  \n  longest_char &lt;- uniq[which.max(stringr::str_length(uniq))]\n  text.space &lt;- grobWidth(textGrob(longest_char))\n  \n  grid.newpage()\n  pushViewport(\n    viewport(\n      layout = grid.layout(nrow = n_facets),\n      width = unit(1, \"npc\") - text.space - 2 * plot.margin,\n      x = text.space + plot.margin,\n      height = unit(1, \"npc\") - title.space - 2 * plot.margin,\n      y = plot.margin,\n      just = c(\"left\", \"bottom\")\n    )\n  )\n  \n  # bars\n  for (i in 1:n_facets) {\n    data_group_i &lt;- data %&gt;%\n      dplyr::filter(get(facetvar) == uniq[i])\n    bar_height_npc &lt;- bar.height.ratio * 1/n_facets\n    bar &lt;- barRatioGrob(\n      data = data_group_i,\n      bar.height = convertHeight(unit(bar_height_npc, \"npc\"), \"inches\"),\n      colvar = colvar,\n      colors = colors,\n      include_colvar_label = include_colvar_label,\n      label.digits = ratelabel.digits\n    )\n    pushViewport(\n      viewport(\n        layout.pos.col=1, layout.pos.row=i\n      )\n    )\n    grid.draw(bar)\n    upViewport()\n  }\n  popViewport(0)\n  \n  # text labels\n  pushViewport(\n    viewport(\n      layout = grid.layout(nrow = n_facets),\n      width = text.space,\n      x = text.space + plot.margin - unit(1, \"mm\"),\n      height = unit(1, \"npc\") - title.space - 2 * plot.margin,\n      y = plot.margin,\n      just = c(\"right\", \"bottom\")\n    )\n  )\n  for (i in 1:n_facets) {\n    label &lt;- data %&gt;%\n      dplyr::filter(get(facetvar) == uniq[i]) %&gt;% \n      dplyr::pull(facetvar) %&gt;% \n      unique()\n    pushViewport(viewport(layout.pos.col=1, layout.pos.row=i))\n    grid.text(label, x = 1, hjust = 1,\n              gp = gpar(fontsize = facetlabel.size))\n    upViewport()\n  }\n  popViewport(0)\n  \n  # white box to avoid text continuing across page\n  pushViewport(\n    viewport(\n      width = plot.margin,\n      x = unit(1, \"npc\"),\n      just = c(\"right\")\n    )\n  )\n  grid.rect(gp = gpar(fill = \"white\", col = NA))\n  popViewport(0)\n  \n  # title\n  pushViewport(\n    viewport(\n      width = unit(1, \"npc\") - text.space - 2 * plot.margin,\n      x = text.space + plot.margin,\n      height = title.space - plot.margin,\n      y = unit(1, \"npc\") - plot.margin,\n      just = c(\"left\", \"top\")\n    )\n  )\n  colors &lt;- get_default_colors(data = data, colvar = colvar, colors = colors)\n  colored_title &lt;- color_html_label_instring(\n    string = title,\n    colors = colors,\n    width = title.width\n)\n  grid.draw(\n    gridtext::richtext_grob(colored_title, x = 0, hjust = 0,\n                            gp = gpar(fontsize = title.size))\n  )\n  popViewport(0)\n}\n\n\nbar_ratios()\n\n\n\n\n\n\n\n\n\n\nSmall multiples line plot across years\nTo investigate the distribution of men and women within different groups of highest attrained education across years, we create a small multiples line plot. Small multiples as described by Wilke is a good way to use the strong visual channel of position to show subsets of data.\nWe continue to color the title according to the guidance by Wilke to avoid legends when possible.\nWe create class_to_scalefun, which is used to scale the x-axis no matter the class of it. We scale the x-axis to ensure we have no expansion on the left-hand side to ensure closer proximity between the axis text and the data.\n\nclass_to_scalefun &lt;- function(class) {\n  switch(class,\n         numeric = scale_x_continuous,\n         integer = scale_x_continuous,\n         character = scale_x_discrete,\n         factor = scale_x_discrete,\n         Date = scale_x_date,\n         POSIXct = scale_x_datetime)\n}\n\nsummarise_yvar &lt;- function(\n    data = highed_long,\n    yvar = \"count\",\n    xvar = \"year\",\n    groupvars = c(\"sex\", \"highest_education\")) {\n  if (grepl(\"^diff_\", yvar)) {\n    yvar &lt;- gsub(\"^diff_\", \"\", yvar)\n    yvar_diff &lt;- TRUE\n  } else {\n    yvar_diff &lt;- FALSE\n  }\n  \n  out &lt;- data %&gt;% \n    summarise({{yvar}} := sum(get(yvar)), .by = all_of(c(xvar, groupvars)))\n  if (yvar_diff) {\n    out &lt;- out %&gt;%\n      mutate({{yvar}} := get(yvar) - get(yvar)[1], .by = all_of(groupvars))\n  }\n  return(out)\n}\n\nfacet_line &lt;- function(\n    xvar = \"year\",\n    yvar = \"count\",\n    colvar = \"sex\",\n    facetvar = \"highest_education\",\n    data = highed_long,\n    colors = NULL,\n    fontfamily = NULL,\n    linewidth = 1.1,\n    title.size = 24,\n    title.width = 40,\n    subtitle = \"By highest attained education and year\",\n    subtitle.size = 18,\n    ...) {\n  \n  data &lt;- summarise_yvar(\n    data = data,\n    yvar = yvar,\n    xvar = xvar,\n    groupvars = c(colvar, facetvar))\n  \n  colors &lt;- get_default_colors(data = data, colvar = colvar, colors = colors)\n  ncol &lt;- length(colors)\n  title &lt;- paste0(\n      ifelse(grepl(\"^diff_\", yvar),\n             \"Difference in number of \",\n             \"Number of \"\n      ),\n      paste(names(colors)[1:(ncol-1)], collapse = \", \"),\n      \" and \",\n      names(colors)[ncol]\n    )\n  colored_title &lt;- color_html_label_instring(\n    title,\n    colors,\n    width = title.width\n  )\n  \n  scalefun &lt;- class_to_scalefun(class(data[[xvar]]))\n  yvar &lt;- gsub(\"^diff_\", \"\", yvar)\n  \n  p &lt;- ggplot(\n    data,\n    aes(x = .data[[xvar]],\n        y = .data[[yvar]],\n        colour = .data[[colvar]],\n        fill = .data[[colvar]],\n        group = .data[[colvar]])) + \n    geom_line(linewidth = linewidth) + \n    scalefun(expand = expansion()) +\n    scale_color_manual(values = colors) +\n    scale_fill_manual(values = colors) +\n    labs(title = colored_title) +\n    theme(\n      legend.position = \"none\",\n      plot.title = ggtext::element_markdown(\n        family = fontfamily,\n        size = title.size,\n        padding = unit(c(0, 0, 6, 0), \"mm\")\n      ),\n      axis.title=element_blank(),\n      axis.ticks=element_blank(),\n      axis.text=element_text(\n        family = fontfamily),\n      panel.spacing.x = grid::unit(1.5, \"lines\"),\n      panel.spacing.y = grid::unit(1, \"lines\"),\n      plot.margin=unit(c(1,1,1,1), \"cm\")) +\n    coord_cartesian(clip = \"off\")\n  \n  if (subtitle != \"\") {\n    p &lt;- p + labs(subtitle = subtitle) +\n      theme(\n      plot.subtitle = element_text(\n        size = subtitle.size,\n        margin = unit(c(0, 0, 6, 0), \"mm\")\n      ))\n  }\n  \n  if (!is.null(facetvar)) {\n    extra_args &lt;- list(...)\n    if (is.null(extra_args$nrow) && is.null(extra_args$ncol)) {\n      extra_args$nrow &lt;- 2\n    }\n    p &lt;- p + do.call(facet_wrap, c(list(facets = facetvar), extra_args))\n  }\n  \n  return(p)\n}\n\n\nfacet_line()\n\n\n\n\n\n\n\n\nWe can see from the plot that there is a downward trend in number of people with “Primary education” as their highest attained education, especially for women. The same is true for category H30. On the other hand, especially people with a Masters seems to have risen quite a bit, with women overtaking men.\nIt is however a bit hard to judge how much of a difference is present, and for some of the less populated groups it is hard to see what the trend is.\n\nShowing a difference\nAs we would like to try and satisfy the The principle of proportional ink as described by Wilke, we take his advice to not use scales = \"free_y\" and instead plot the difference in response. We can do this by subtracting the first value of each group from all values in that group.\nI implemented us being able to show a difference in a variable by simply adding diff_ to the beginning of the variable name.\n\nfacet_line(yvar = \"diff_count\")\n\n\n\n\n\n\n\n\nThis plot makes is easier to see that there has actually been a visible increase in both H20 and H50 in addition to H70. The decrease in H10 and H30 is also more visible.\nThe plot also much clearer showcases that many more women than men have obtained H50 and H70 as their highest education.\n\nWe can, however, still not see the difference very well for the low-frequent groups H40, H60 and H80. We try to solve this below:\n\n\nImbedding “scales free” lines in background\nThough showing the difference in response as above helped see trends over time better than showing absolute values, some groups are still so low-frequent that it’s hard to see differences.\nFor this reason, we use gggrid::grid_panel to embed a line plot for each panel that shows the data on a scale native to the range of that subset of data. To ensure it is clear that this is not the “real” data, we make sure to make the lines less wide, we make them slightly transparent, and we desaturate the colors a bit.\n\ndata_scales_free &lt;- function(data, coords, desaturate.amount = 0.4, alpha = 0.4) {\n  yrange &lt;- range(data$y)\n  xrange &lt;- range(data$x)\n  \n  vp &lt;- viewport(xscale = xrange, yscale = yrange)\n  data_groups &lt;- group_split(data, group)\n  lines &lt;- lapply(data_groups, function(data_group) {\n    group_color &lt;- colorspace::desaturate(unique(data_group$colour), desaturate.amount)\n    linesGrob(x = unit(data_group$x, \"native\"), y = unit(data_group$y, \"native\"),\n              gp = gpar(col = group_color, alpha = alpha))\n  })\n  do.call(grobTree, c(lines, list(vp = vp)))\n}\n\nfacet_line(yvar = \"diff_count\") +\n  gggrid::grid_panel(data_scales_free)\n\n\n\n\n\n\n\n\nFrom this plot, we can now see that as for H50 and H70, more women than men have gotten H60 as their highest attained education since 2009. The reverse is not visible for H40 and H80, where the increase has been greater for men than women.\n\n\n\nAdding direct labelling and more contrast\nThe CRAP design principles described in “The Non-Designer’s Design Book” by Robin Williams proposes some design principles to follow when creating visualizations.\nHere we use especially contrast and repetition when creating a plot with an all black background, where we color groups to create a pre-attentive popout effect that is even greater than usual by having a stark contrast to the black. We also use repetition by coloring everything else in the plot with the same grey nuance and using the same font across all text. We also use alignment by aligning the title and the text in the facet labels to the left.\nWe use the gggrid package to create direct labelling within facets.\n\nHelper functions\nWe\n\nCreate an add_label function to add the facet labels to the plot using gggrid::grid_panel when creating the ggplot.\n\nCreate direct_facet_labels which uses add_label to add the labels to the plot and remove the default strips from facet_wrap completely.\n\nCreate a theme_black() function to create a black background with no grid lines and make all text the same color.\n\n\nadd_label &lt;- function(data, coords,\n                         fontfamily = NULL,\n                         strip.label.vjust = grid::unit(4, \"mm\"),\n                         strip.label.fontsize = 9,\n                      strip.label.width = 30,\n                      color = \"grey50\") {\n  y1_coord &lt;- max(slice_head(coords, by = \"group\")$y)\n  label &lt;- stringr::str_wrap(data$facet,\n                             width = strip.label.width)\n  facetLabel &lt;- grid::textGrob(\n    label,\n    x = 0,\n    y = grid::unit(y1_coord, \"npc\") + strip.label.vjust,\n    just = c(0, 0),\n    gp = grid::gpar(\n      col = color,\n      fontsize = strip.label.fontsize,\n      fontfamily = fontfamily\n    )\n  )\n  line &lt;- grid::linesGrob(\n    x = c(0, 1),\n    y = c(0, 0),\n    gp = grid::gpar(col = color)\n  )\n  \n  grid::grobTree(facetLabel, line)\n}\ndirect_facet_labels &lt;- function(fontfamily = NULL,\n                         strip.label.vjust = grid::unit(4, \"mm\"),\n                         strip.label.fontsize = 9,\n                      color = \"grey50\",\n                      facetvar = \"highest_education\") {\n  list(\n    gggrid::grid_panel(\n    function(data, coords) {\n      add_label(\n        data = data, coords = coords,\n        fontfamily = fontfamily,\n        strip.label.vjust = strip.label.vjust,\n        strip.label.fontsize = strip.label.fontsize,\n        color = color)\n    } ,\n    aes(facet = .data[[facetvar]])\n  ),\n  theme(strip.background = element_blank(),\n        strip.text = element_blank())\n  )\n}\n\ntheme_black &lt;- function(text.color = \"grey50\") {\n  theme(\n    plot.background=element_rect(colour=NA, fill=rgb(.1,.1,.1)),\n    panel.background=element_rect(colour=NA,\n                                  fill=rgb(.1,.1,.1)),\n    panel.grid.major=element_blank(),\n    panel.grid.minor=element_blank(),\n    plot.title = ggtext::element_markdown(\n         colour = text.color\n      ),\n    plot.subtitle = element_text(\n      colour = text.color\n    ),\n    axis.text = element_text(\n      colour = text.color\n    )\n  )\n}\n\n\n\nCreating a CRAP plot\nWe create the plot using our new helper functions.\n\nfacet_line(yvar = \"diff_count\") +\n  direct_facet_labels(strip.label.vjust = unit(15, \"mm\")) +\n  theme_black() +\n  gggrid::grid_panel(data_scales_free)\n\n\n\n\n\n\n\n\nAs mentioned above, this plot has a better contrast, making for a more powerful preattentive popout effect, and the direct labelling ensures closer proximity between facet groups labels and the data.\nThough it does not directly give us any new information that is not visible from the previous plot, but I do think this plot makes the differences appear clearer.",
    "crumbs": [
      "Lab assignments",
      "lab 10 - Highest Attained Education in Denmark"
    ]
  },
  {
    "objectID": "labs/lab10_answer.html#distribution-of-socioeconomic-status-across-time",
    "href": "labs/lab10_answer.html#distribution-of-socioeconomic-status-across-time",
    "title": "lab 10 - Highest Attained Education in Denmark",
    "section": "Distribution of socioeconomic status across time",
    "text": "Distribution of socioeconomic status across time\nWe create a line plot showing the change of people in each group of socioeconomic status across time. We create the line plot simply by specifying relevant arguments to the facet_line function we made earlier.\n\nfacet_line(colvar = \"socioeconomic_status\",\n           facetvar = NULL,\n           subtitle = \"\",\n           yvar = \"diff_count\") +\n  theme_black() +\n  geom_hline(yintercept = 0, color = \"grey50\")\n\n\n\n\n\n\n\n\nThe plot shows an increase in people “enrolled in education” and “employed” from 2009 to 2022, while both “outside the labour force” and “unemplpyed” has decreased across the period.\nWe do however see quite a decline in number emplyed from year 2009 until about 2012, where it begins to rise again, reaching about the same level as in 2009 in 2015.\nWe would like to highlight the groups “employed” and “unemployed” in the plot to create a preattentive popout effect.\n\nHighlighting (un)employment\nWe want to highlight these categories both by desaturating the colors of the other categories as well as making the lines thicker for the highlighted categories.\nFind summarised data with only categories that we want to highlight.\n\nhighlight_cats &lt;- unique(grep(\"[Ee]mployed\", highed_long$socioeconomic_status, value = TRUE))\nhighed_employ &lt;- highed_long %&gt;% \n  filter(socioeconomic_status %in% highlight_cats)\nhighed_employ_sum &lt;- summarise_yvar(highed_employ, yvar = \"diff_count\", xvar = \"year\", groupvars = c(\"socioeconomic_status\"))\n\nCreate a color scheme for the socioeconomic status variable, where we desaturate the colors of the categories that we do not want to highlight.\n\ncols &lt;- get_default_colors(\n  highed_long,\n  colvar = \"socioeconomic_status\",\n  c(\"dodgerblue2\", \"darkorange1\", \"forestgreen\", \"purple\")\n  )\ncols[!names(cols) %in% highlight_cats] &lt;- colorspace::desaturate(\n  cols[!names(cols) %in% highlight_cats],\n  0.5\n)\n\nCreate the plot\n\nplot_socstat &lt;- function(colors = NULL, title.size = 24) {\n  facet_line(colvar = \"socioeconomic_status\",\n           facetvar = NULL,\n           subtitle = \"\",\n           yvar = \"diff_count\",\n           colors = colors,\n           title.size = title.size) +\n  theme_black() +\n  geom_hline(yintercept = 0, color = \"grey50\") + \n  geom_line(data = highed_employ_sum, lwd = 2)\n}\n\nplot_socstat(colors = cols)\n\n\n\n\n\n\n\n\nThe plot clearly highlights the categories “employed” and “unemployed”, ensuring that readers will see these categories first.\nNote that I created a manual color scheme for the socioeconomic status variable using a sample of favorite R colors that are nicely placed on the color wheel to play nicely together. Thus, now I want to investigate the effect of this on people with color blindness.\n\nColor blindness\nBelow we try to use the colorspace::deutan() function to see what the plot would look like for a person with deutan color blindness using the color palette that I defined, and using the default from ggplot.\n\nNote that we assume a severity of deutan color blindness of 0.6\n\n\ncols_default &lt;- get_default_colors(\n  highed_long,\n  colvar = \"socioeconomic_status\",\n  scales::pal_hue()(4)\n  )\ncols_default[!names(cols_default) %in% highlight_cats] &lt;- colorspace::desaturate(\n  cols_default[!names(cols_default) %in% highlight_cats],\n  0.5\n)\n\nlibrary(patchwork)\nmanual_cvd &lt;- plot_socstat(colors = colorspace::deutan(cols, severity = 0.6), title.size = 16) +\n  ggtitle(\"*Manual* color scheme\\n**with** CVD\")\nmanual &lt;- plot_socstat(colors = cols, title.size = 16) +\n  ggtitle(\"*Manual* color scheme **without** CVD\")\ndefault_cvd &lt;- plot_socstat(colors = colorspace::deutan(cols_default, severity = 0.6), title.size = 16) +\n  ggtitle(\"*Default* color scheme **with** CVD\")\ndefault &lt;- plot_socstat(colors = cols_default, title.size = 16) +\n  ggtitle(\"*Default* color scheme **without** CVD\")\n  \n(manual | manual_cvd) /\n  (default | default_cvd)\n\n\n\n\n\n\n\n\nWe see that though the colors are not quite as distinguishable for a person with deutan color blindness, the plots using both color schemes are reasonably readable for a person with CVD.\n\n\nAnimation\nIn addition to desaturating colors and creating thicker lines for the highlighted categories, we can use animation to create an even more effective preattentive popout effect.\nTo do so, we use gganimate, where we make sure to rename the x variable in the subset of data with the highlighted categories. In this way, we can use gganimate::transition_reveal on this new variable, and in this way keep a static image that the animation “plays on top of”.\n\nlibrary(gganimate)\n\nhighed_employ_sum_rename &lt;- highed_employ_sum %&gt;% \n                  rename(year_new = year)\nfacet_line(colvar = \"socioeconomic_status\",\n           facetvar = NULL,\n           subtitle = \"\",\n           yvar = \"diff_count\",\n           colors = cols,\n           title.size = 20) +\n  theme_black() +\n  geom_hline(yintercept = 0, color = \"grey50\") + \n  geom_line(aes(x = year_new),\n                data = highed_employ_sum_rename,\n                lwd = 2) +\n  geom_point(aes(x = year_new),\n                data = highed_employ_sum_rename,\n             size = 4) +\n  gganimate::transition_reveal(year_new)\n\n\n\n\n\n\n\n\n\n\n\nStratified by highest education\nWe can investigate the distribution of socioeconomic status across time stratified by highest attained education by simply specifying a facetvar in the facet_line function.\nAs before, we want to highlight (un)employment, so we create a new summarised data set with only the categories we want to highlight.\n\nhighed_employ_sum2 &lt;- summarise_yvar(\n  highed_employ,\n  yvar = \"diff_count\",\n  xvar = \"year\",\n  groupvars = c(\"socioeconomic_status\", \"highest_education\")\n  )\n\nWe then create the facetted plot.\n\nfacet_line(colvar = \"socioeconomic_status\",\n           facetvar = \"highest_education\",\n           yvar = \"diff_count\",\n           colors = cols) +\n  direct_facet_labels(strip.label.vjust = unit(8, \"mm\")) +\n  theme_black() +\n  geom_line(data = highed_employ_sum2, lwd = 1.3)\n\n\n\n\n\n\n\n\nWe see that for all other categories than H10 and H30, the difference in number of “Employed” has been consistently greater than the difference of “unemployed”.",
    "crumbs": [
      "Lab assignments",
      "lab 10 - Highest Attained Education in Denmark"
    ]
  },
  {
    "objectID": "labs/lab10_answer.html#distribution-of-socioeconomic-status-across-age-groups",
    "href": "labs/lab10_answer.html#distribution-of-socioeconomic-status-across-age-groups",
    "title": "lab 10 - Highest Attained Education in Denmark",
    "section": "Distribution of socioeconomic status across age groups",
    "text": "Distribution of socioeconomic status across age groups\nWe can quickly also take a look at socioeconomic status across age groups by using the function bar_ratios that was created earlier when we wanted to look at the proportion of men and women in different groups of highest attained education.\n\nsocioeconomic_statuses &lt;- paste(unique(highed_long$socioeconomic_status), collapse = \", \")\ncols_nodesat &lt;- get_default_colors(\n  highed_long,\n  colvar = \"socioeconomic_status\",\n  c(\"dodgerblue\", \"darkorange1\", \"forestgreen\", \"purple\")\n  )\nbar_ratios(facetvar = \"age\",\n          colvar = \"socioeconomic_status\",\n          title = paste0(\"Proportion of \",\n                         socioeconomic_statuses,\n                         \" by age\"\n          ),\n          include_colvar_label = FALSE,\n          title.width = 55,\n          title.size = 26,\n          ratelabel.digits = 1,\n          colors = cols_nodesat)\n\n\n\n\n\n\n\n\nNot surprisingly, the number of “Enrolled in education” is monotonically decreasing with age. The reverse relationship might have been expected for “Outside the labour force”, however, this is not entirely true as groups 20-24, 25-29 and 30-34 all have a larger proportion of people “Outside the labour force” than age groups 35-39, 40-44 and 45-49. Onwards from there, we do however see a drastic monotonic increase as we near retirement age (which was recently upped to 70 years in Denmark).\nLooking at (un)employment, we see that rates become increasingly favorable when increasing the age group from 25-29 all the way up to 45-49. The age groups 50-54 and 55-59 still have very low unemployment rates, while the employment rate is starting to go down due to the increasing amount of people “Outside the labour force”. The same can be said about the 2 last age groups, just in more dramatic fashion.",
    "crumbs": [
      "Lab assignments",
      "lab 10 - Highest Attained Education in Denmark"
    ]
  },
  {
    "objectID": "labs/lab10_answer.html#distribution-of-highest-attained-education-across-age-groups",
    "href": "labs/lab10_answer.html#distribution-of-highest-attained-education-across-age-groups",
    "title": "lab 10 - Highest Attained Education in Denmark",
    "section": "Distribution of highest attained education across age groups",
    "text": "Distribution of highest attained education across age groups\nWe create a data set that is filtered by only having age groups starting from age 25.\n\nhighed_agef &lt;- highed_long %&gt;% \n  mutate(age.lower = stringr::str_extract(age, \"^\\\\d{2}\")) %&gt;% \n  filter(age.lower &gt;= 25)\n\nWe can create plots using the functions facet_line and bar_ratios that were already created for answering other questions.\nWe note, however, that using a qualitative color scheme with too many categories makes it difficult to decode the categories efficiently. Here we have 8 categories, which can be argued to be too many. At least according to Wilke who notes in section 19.1 of his Data visualization book that “As a rule of thumb, qualitative color scales work best when there are three to five different categories that need to be colored. Once we reach eight to ten different categories or more, the task of matching colors to categories becomes too burdensome to be useful, even if the colors remain sufficiently different to be distinguishable in principle.”.\nHowever, there are ways to alleviate these problems.\n\nUsing an “ordering” of colors.\nAn “ordering” of colors can help alleviate the problem. This is natural in the bar plot we create by having the colors in the same order of positions in the title and in the plot.\nWe extract the categories to create the title and color it like we did for socioeconomic status.\n\nhighest_educations &lt;- paste(unique(highed_agef$highest_education), collapse = \", \")\ncols_nodesat2 &lt;- get_default_colors(\n  highed_agef,\n  colvar = \"highest_education\"\n  )\n# c(\"dodgerblue\", \"yellow\", \"purple\", \"forestgreen\", \"red\", \"darkblue\", \"darkorange2\", \"purple\")\nbar_ratios(data = highed_agef,\n           facetvar = \"age\",\n          colvar = \"highest_education\",\n          title = paste0(\"Proportion of \",\n                         highest_educations,\n                         \" by age\"\n          ),\n          include_colvar_label = FALSE,\n          title.width = 65,\n          title.size = 18,\n          ratelabel.digits = 1,\n          colors = cols_nodesat2)\n\n\n\n\n\n\n\n\n\n\nUsing interactivity\nIn a line plot, there is not natural “ordering” by colors; the order is determined by the response values in data. Thus, having 8 colored categories in such a plot can make it difficult to decode data values.\nA way to alleviate this is by adding interactivity. We do so by using the ggplotly() function in the plotly package. To create a readable line plot for the user, we\n\nuse the age.lower variable as the x-axis variable to not crowd labels on the x-axis\nrename variables to make them more meaningful in the hovering tooltips created by ggplotly() and select specific aesthetics to show in the tooltips\n\ndouble the hoverdistance by adding hoverdistance = 40 in the plotly::layout() function\n\nadd a legend to enable interactive filtering of groups\n\n\nhighed_agef_rename &lt;- highed_agef %&gt;% \n  rename(\"Age lower limit\" = age.lower,\n         \"Difference from age group 25-29\" = count,\n         \"Highest attained education\" = highest_education)\np &lt;- facet_line(data = highed_agef_rename,\n                colvar = \"Highest attained education\",\n                facetvar = NULL,\n                xvar = \"Age lower limit\",\n                yvar = \"diff_Difference from age group 25-29\",\n                ncol = 2,\n                title.width = 70) +\n  theme_black() +\n  theme(\n    legend.position = \"bottom\",\n    legend.background = element_rect(fill = NA),\n    legend.text = element_text(colour = \"grey50\")) +\n  labs(colour = \"\", title = \"Difference in number with Highest Attained Education\")\nplotly::ggplotly(p, tooltip = c(\"x\", \"y\", \"colour\")) %&gt;% \n  plotly::layout(\n    title = list(\n      subtitle = list(\n        text = \"By lower limit of age groups\"\n      )\n    ),\n    hoverdistance = 40\n  )\n\n\n\n\n\n\n\nAnswering questions of interest\nBesides the group 25-29 years, “H10 Primary education” is steadily increasing with age, suggesting that newer generations have an increasing level of education. The most dramatic reverse relationship is for “H70 Masters programs”, which is steadily decreasing with age. In general we see the relationship that groups become smaller with increased age for all educations from level H40 to H80 (except age group 25-29 who are still in process of finishing degrees) as well as for “H20 Upper secondary education”. This means that younger people’s highest attained education generally has a higher level than older groups, whereas older groups consists of a majority of non-academic skilled educations.",
    "crumbs": [
      "Lab assignments",
      "lab 10 - Highest Attained Education in Denmark"
    ]
  },
  {
    "objectID": "labs/lab10_answer.html#distribution-of-men-and-women-across-highest-attained-education",
    "href": "labs/lab10_answer.html#distribution-of-men-and-women-across-highest-attained-education",
    "title": "lab 10 - Highest Attained Education in Denmark",
    "section": "Distribution of men and women across highest attained education",
    "text": "Distribution of men and women across highest attained education\nTo investigate the proportion of men and women within each group of highest attained education, we create bar plots. We can quite easily create such a plot with ggplot2, but we make use of the grid package to create a plot with direct labelling giving the exact percentages.\nWe note that men are a majority of those with “H10 Primary education”, “H30 Vocational education and training (VET)” and “H40 Short cycle higher education”, while more women have highest attained educations of “H50 Vocational bachelors educations” and “H60 Bachelors programs”. For “H70 Masters programs”, the proportion of men and women is almost exactly 50/50, but for “H80 PhD programs” almost 60% are men.\n\nAcross time\nTo investigate the distribution from years 2009-2022 we create a small multiples line plot. To better be able to see the time trend while still fulfilling the principle of proportional ink we look at the response as the difference from year 2009. To further enhance the visibility of differences for low-frequent groups, we add a line plot to each facet with the data plotted on a scale native to the range of that subset of data. Finally, we create a dark themed plot with CRAP design principles in mind with direct labelling for the groups to ensure a greater contrast between the background and the colors in the plot and thus a greater preattentive popout effect. The direct labelling ensures repitition by using the same font and color as well as alignment and proximity by labelling subsets of data close to the lines visualising that subset.\nWe see that a big decrease in the group of “H10 Primary education” for both men and women, though most drastic for women. The same is true for “H30 Vocational education and training (VET)”, while all other groups have seen increases. Women have had a bigger increase than men in both “H50 Vocational bachelors educations”, “H60 Bachelors programs” and “H70 Masters programs”, while also having almost the same increase as men for “H80 PhD programs”.",
    "crumbs": [
      "Lab assignments",
      "lab 10 - Highest Attained Education in Denmark"
    ]
  },
  {
    "objectID": "labs/lab10_answer.html#distribution-of-socioeconomic-status",
    "href": "labs/lab10_answer.html#distribution-of-socioeconomic-status",
    "title": "lab 10 - Highest Attained Education in Denmark",
    "section": "Distribution of socioeconomic status",
    "text": "Distribution of socioeconomic status\n\nAcross time\nTo showcase this, we create a simple line plot using the functions we created for answering questions and gender distributions.\nThe plot shows an increase in people “enrolled in education” and “employed” from 2009 to 2022, while both “outside the labour force” and “unemplpyed” has decreased across the period. We do however see quite a decline in number employed from year 2009 until about 2012, where it begins to rise again, reaching about the same level as in 2009 in 2015.\nWe wish to highlight this fact and do so by highlighting the lines of “Employed” and “Unemployed” by increasing the linewidth and desaturating the colors of other categories. To further highlight these categories, we create an animation that draws the lines for the highlighted categories. Since socioeconomic status has 4 levels and we only make use of colour as an aesthetic mapping/visual channel (i.e. we do not make use of redundant coding), we check if someone with color-vision-deficiency would be able to read the plot.\n\nStratified by highest attained education\nWe create a facetted version of the same line plot, facetted by highest attained education. Most notably, we see that for all other categories than “H10 Primary education” and “H30 Vocational education and training (VET)”, the number of “Employed” has been on a steady increase.\n\n\n\nAcross age groups\nExpectedly, the proportion of people enrolled in education declines steadily with age, while those outside the labor force show a less predictable pattern; rising in early adulthood, dipping in mid-life, then increasing sharply approaching retirement. (Un)employment rates improve from ages 25 to 49. Older groups maintain low unemployment while employment rates drop as more exit the labor force.",
    "crumbs": [
      "Lab assignments",
      "lab 10 - Highest Attained Education in Denmark"
    ]
  },
  {
    "objectID": "labs/lab10_answer.html#distribution-of-highest-attained-education-across-age-groups-1",
    "href": "labs/lab10_answer.html#distribution-of-highest-attained-education-across-age-groups-1",
    "title": "lab 10 - Highest Attained Education in Denmark",
    "section": "Distribution of highest attained education across age groups",
    "text": "Distribution of highest attained education across age groups\nInvestigating this, we have many categories of highest attained education as well as age groups, which means a lot of information should be embedded in a single plot. We choose to color by highest attained education and alleviate the potential problem of using many colors by using an “ordering” of colors in a bar plot, where the colors are in the same order in the title and in the plot. We also create a line plot, where we add interactivity to ensure that you can hover over the lines to see the values of each group as well as filter by group using the legend.\nEducational attainment generally increases in younger age groups, with more individuals completing higher education levels like master’s programs. In contrast, older age groups tend to have lower educational levels, primarily non-academic or vocational training. The 25–29 age group is an exception, as many are still completing their studies.",
    "crumbs": [
      "Lab assignments",
      "lab 10 - Highest Attained Education in Denmark"
    ]
  },
  {
    "objectID": "labs/lab5_answer.html",
    "href": "labs/lab5_answer.html",
    "title": "Lab5 - Graphic Design",
    "section": "",
    "text": "See the assignment description and model answer (for the source .Rmd model answer, just change “html” to “Rmd” in the link).\nLoading packages.\nlibrary(tidyverse)\nlibrary(grid)\nlibrary(ggtext)",
    "crumbs": [
      "Lab assignments",
      "Lab5 - Graphic Design"
    ]
  },
  {
    "objectID": "labs/lab5_answer.html#questions-of-interest",
    "href": "labs/lab5_answer.html#questions-of-interest",
    "title": "Lab5 - Graphic Design",
    "section": "Questions of interest",
    "text": "Questions of interest\nFocus on gender differences. Specifically\n\nAre the trends in the number of incidents over time the same for Male and Female offenders?\nAre the trends over time the same for Male and Female offenders for different types of crime?",
    "crumbs": [
      "Lab assignments",
      "Lab5 - Graphic Design"
    ]
  },
  {
    "objectID": "labs/lab5_answer.html#question-1",
    "href": "labs/lab5_answer.html#question-1",
    "title": "Lab5 - Graphic Design",
    "section": "Question 1",
    "text": "Question 1\nThis data visualisation is what we get from a “default” line plot using ggplot2.\n\nggplot(crimeSex, aes(x = Month, y = Freq, colour = Sex)) +\n  geom_line() +\n  labs(title = \"Number of Incidents\")\n\n\n\n\n\n\n\n\n\nQuestions of interest\nSince this plot does not stratify by crime type, we can only comment on the first question of interest. The trend does seem to be similar for men and women, with an overall downward trend for both genders. The graph have natural spikes at the same places, and both for men and women there seems to be an increase since 2022.\n\n\nCRAP design guidelines\n\nContrast: The only real contrast in the plot is the colors of the lines used to specify Male/Female. There is also a bit of contrast between the white of the outer bound of the figure and the grey of the plotting area background, which is then also present in the legend. However, this makes the contrast between the lines and the background less noticable.\nRepetition: The same font is used for all text in the plot.\nAlignment: The title is left-aligned with the plotting region.\nProximity: The axis break labels and axis ticks are very close together, indicating that the value displayed is at the tick mark. Also, the legend title and legend keys are close together, indicating the legend as a “single unit” though the elements are not fx. enclosed.",
    "crumbs": [
      "Lab assignments",
      "Lab5 - Graphic Design"
    ]
  },
  {
    "objectID": "labs/lab5_answer.html#question-2",
    "href": "labs/lab5_answer.html#question-2",
    "title": "Lab5 - Graphic Design",
    "section": "Question 2",
    "text": "Question 2\n\nContrast: We change the title to be much bigger, be a different color, have a different font family and a bold font face compared to the other text in the picture. Due to white background, I would argue the contrast between the background and the colored lines make the lines more visible.\n\nDoes not necessarily make the questions of interest easier to answer, but the title more easily catches the viewers eye, making sure they get an idea what the plot is about.\n\nRepetition: We create a plot where all text except the contrast-filled title has the same color grey60, which is again the same color as the grid lines.\n\nThe lines jump out a bit more due to the use of grey for the text and grid lines, and the consistency of color might make it a bit easier to decode the data values. In regards to answering a question about a time trend, it might not be much, but if a viewer would like to try and decode values more precisely, this might help.\n\nAlignment: We move the legend to the top of the plot and align it with the plotting region. Furthermore, we remove the expansion on both axes, meaning the start and end of both lines are aligned with the edges of the plotting region.\n\nThe alignment of the lines in the plotting region makes it easier to decode the data values. The alignment of the legend just makes it look nicer. Not directly helping with answering questions of interest. Same points as above.\n\nProximity: By moving the legend to the top, it’s much closer to the title, making it more clear that “Number of Incidents” related to men and women.\n\nBy moving the legend closer to the title, the story of what the plot wants to show is more apparent, and it’s easier for the viewer to understand the information we try to convey and answer questions of interest.\n\n\n\nggplot(crimeSex, aes(x = Month, y = Freq, colour = Sex)) +\n  geom_line() +\n  labs(title = \"Number of Incidents\", colour = \"\") +\n  scale_y_continuous(breaks = seq(1000, 10000, 1000), expand = c(0, 0)) +\n  scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y\", expand = c(0, 0)) +\n  theme_minimal() +\n  theme(plot.title = element_text(\n    size = 42, face = \"bold\", family = \"serif\", colour = \"black\"\n  ),\n  panel.grid.major = element_line(\n    colour = \"grey60\",\n    linewidth = 0.2\n  ),\n  panel.grid.minor = element_blank(),\n  text = element_text(\n    colour = \"grey60\"\n  ),\n  axis.text = element_text(\n    colour = \"grey60\"\n  ),\n  legend.position = \"top\",\n  legend.justification = -0.013\n  )",
    "crumbs": [
      "Lab assignments",
      "Lab5 - Graphic Design"
    ]
  },
  {
    "objectID": "labs/lab5_answer.html#question-3",
    "href": "labs/lab5_answer.html#question-3",
    "title": "Lab5 - Graphic Design",
    "section": "Question 3",
    "text": "Question 3\n\nCode with “manual” gggrid coding to color words in title\nTo create the plot, I do the following:\n\nTo create the dark theme: plot.background=element_rect(colour=NA, fill=rgb(.1,.1,.1)) and panel.background=element_rect(colour=NA, fill=rgb(.1,.1,.1)) to make background all black.\nRemove strips from facetting and include the labels directly in the plot with gggrid::grid_panel.\n\nUse coord_cartesian(clip = \"off\") to ensure the text labels we add are not clipped and adjust plot.margin accordingly in the theme.\nWe write the text 7 mm above the first value in the panel.\n\nAdd the title as a grobTree of grobs with colorings according to groups\n\nFor the first panel in the figure, we create a title (using and IF statement of if (unique(data$PANEL) == 1)) by writing the text up until the colored words we want, then we take the width with grid::grobWidth and use that as our x-position when then creating a new grob with only the colored word. We then create the entire title by putting all the grobs together in a grobTree.\n\n\nCreate the function to be used in gggrid::grid_panel.\n\naddCrimeType &lt;- function(data, coords,\n                         fontfamily = NULL,\n                         add_title = TRUE,\n                         title.vjust.cm = 2, title.fontsize = 18,\n                         strip.label.vjust = grid::unit(4, \"mm\"),\n                         strip.label.fontsize = 9) {\n  y1_coord &lt;- max(slice_head(coords, by = \"group\")$y)\n  typeLabel &lt;- grid::textGrob(\n    data$type,\n    x = 0,\n    y = grid::unit(y1_coord, \"npc\") + strip.label.vjust,\n    just = c(0, 0),\n    gp = grid::gpar(\n      col = \"grey50\",\n      fontsize = strip.label.fontsize,\n      fontfamily = fontfamily\n    )\n  )\n  line &lt;- grid::linesGrob(\n    x = c(0, 1),\n    y = c(0, 0),\n    gp = grid::gpar(col = \"grey50\")\n  )\n  if (add_title && unique(data$PANEL) == 1) {\n    y_pos &lt;- grid::unit(y1_coord, \"npc\") +\n      grid::unit(7, \"mm\") +\n      grid::unit(title.vjust.cm, \"cm\")\n    \n    init_title_male &lt;- grid::textGrob(\n      \"Number of incidents for \",\n      y = y_pos,\n      x = 0,\n      just = c(0, 1),\n      gp = grid::gpar(\n        col = \"grey50\",\n        fontsize = title.fontsize,\n        fontfamily = fontfamily)\n    )\n    width_male &lt;- grid::grobWidth(init_title_male)\n    \n    male_color &lt;- unique(data[data$sex == \"Male\", ]$colour)\n    males_grob &lt;- grid::textGrob(\n      \"Males\",\n      y = y_pos,\n      x = width_male,\n      just = c(0, 1),\n      gp = grid::gpar(\n        col = male_color,\n        fontsize = title.fontsize,\n        fontfamily = fontfamily)\n    )\n    \n    init_title_female &lt;- grid::textGrob(\n      \"Number of incidents for Males and \",\n      y = y_pos,\n      x = 0,\n      just = c(0, 1),\n      gp = grid::gpar(\n        col = \"grey50\",\n        fontsize = title.fontsize,\n        fontfamily = fontfamily)\n    )\n    width_female &lt;- grid::grobWidth(init_title_female)\n    \n    female_color &lt;- unique(data[data$sex == \"Female\", ]$colour)\n    females_grob &lt;- grid::textGrob(\n      \"Females\",\n      y = y_pos,\n      x = width_female,\n      just = c(0, 1),\n      gp = grid::gpar(\n        col = female_color,\n        fontsize = title.fontsize,\n        fontfamily = fontfamily)\n    )\n    \n    title &lt;- grid::grobTree(init_title_female, males_grob, females_grob)\n    \n    return(grid::grobTree(typeLabel, line, title))\n  }\n  grid::grobTree(typeLabel, line)\n}\n\nDefine a function to create the plot.\n\ndarkplot &lt;- function(title.vjust.cm = 2, ...) {\n  ggplot(crimeTypeSex, aes(x = Month, y = Count, colour = Sex)) + \n    geom_line(show.legend = FALSE) +\n    facet_wrap(~ Type) +\n    gggrid::grid_panel(function(data, coords) \n      addCrimeType(data = data, coords = coords, ...),\n                       aes(type = Type,\n                           sex = Sex)) +\n    scale_x_date(expand = expansion()) +\n    scale_y_continuous(expand = expansion(mult = c(0, 0.05))) +\n    theme(plot.background=element_rect(colour=NA, fill=rgb(.1,.1,.1)),\n          panel.background=element_rect(colour=NA, \n                                        fill=rgb(.1,.1,.1)),\n          panel.grid.major=element_blank(),\n          panel.grid.minor=element_blank(),\n          axis.title=element_blank(),\n          axis.ticks=element_blank(),\n          axis.text=element_text(colour = \"grey50\"),\n          strip.background = element_blank(),\n          strip.text = element_blank(),\n          panel.spacing.x = grid::unit(1, \"lines\"),\n          panel.spacing.y = grid::unit(3, \"lines\"),\n          plot.margin=unit(c(title.vjust.cm + 1,1,1,1), \"cm\")) +\n    coord_cartesian(clip = \"off\")\n}\n\nCall function to create the plot.\n\ndarkplot()\n\n\n\n\n\n\n\n\n\n\nEasier way of coloring title with ggtext\nRather than adding our own title as a textGrob within the 1st panel and increasing the plot margin to contain the title, we use ggtext to color the “default ggplot title”.\nTo do this, we specify the title as a character string with HTML to color the words and then specify the plot.title argument in ggplot2::theme() using the function ggtext::element_markdown().\n\ndarkplot2 &lt;- function(colors = NULL, fontfamily = NULL, ...) {\n  if (is.null(colors)) {\n    colors &lt;- setNames(scales::pal_hue()(2), c(\"Female\", \"Male\"))\n  }\n  ggplot(crimeTypeSex, aes(x = Month, y = Count, colour = Sex)) + \n    geom_line(show.legend = FALSE) +\n    facet_wrap(~ Type) +\n    gggrid::grid_panel(function(data, coords) \n      addCrimeType(\n        data = data, coords = coords,\n        add_title = FALSE,\n        fontfamily = fontfamily,\n        ...),\n      aes(type = Type,\n          sex = Sex)) +\n    scale_x_date(expand = expansion()) +\n    scale_y_continuous(\n      breaks = seq(0, 900, 300),\n      expand = expansion(add = c(0, 100))) +\n    scale_color_manual(values = colors) +\n    labs(title = paste0(\n      \"Number of incidents for &lt;span style = 'color:\",\n      colors[\"Male\"],\n      \";'&gt;Males&lt;/span&gt; and &lt;span style = 'color:\",\n      colors[\"Female\"],\n      \";'&gt;Females&lt;/span&gt;\"\n    )\n    )+\n    theme(\n      plot.title = ggtext::element_markdown(\n        family = fontfamily,\n        size = 18, colour = \"grey50\",\n        padding = unit(c(0, 0, 1.5, 0), \"cm\")\n      ),\n      plot.background=element_rect(colour=NA, fill=rgb(.1,.1,.1)),\n      panel.background=element_rect(colour=NA, \n                                    fill=rgb(.1,.1,.1)),\n      panel.grid.major=element_blank(),\n      panel.grid.minor=element_blank(),\n      axis.title=element_blank(),\n      axis.ticks=element_blank(),\n      axis.text=element_text(\n        colour = \"grey50\",\n        family = fontfamily),\n      strip.background = element_blank(),\n      strip.text = element_blank(),\n      panel.spacing.x = grid::unit(1, \"lines\"),\n      panel.spacing.y = grid::unit(3, \"lines\"),\n      plot.margin=unit(c(1,1,1,1), \"cm\")) +\n    coord_cartesian(clip = \"off\")\n}\n\nCreate the plot using ggtext.\n\ndarkplot2()\n\n\n\n\n\n\n\n\n\n\nQuestions of interest\nThis plot lets us investigate the time trend of men vs. women for different crime types. However, there is a limitation that for some crime types, the frequency is too low for us to identify any trends on this plot with a common scale for all multiples.\nThe trend seems to be the same overall. We identified in question 1 that the overall trend is downward but with a slight increase since 2022. This is true for both men and women for the 4 most common crime types, though with a slighly more drastic decrease for men than women for “Public Order Offences”. For this crime type, we only see the increase from 2022 and onward for men and not women.\n\n\nCRAP design principles\n\nContrast: The blue and red colors used to color the lines and words in the title are very vibrant due to the contrast with the black and quite dark grey.\nRepetition: The same grey color is used for all text, axis breaks, line at 0 and in the title.\nAlignment: The text of crime types is left-aligned with the plotting area of each facet as well as bottom-aligned just above the height of the blue line at the first data point. Also the title is left-aligned with the overall plotting region.\nProximity: Using direct-labelling of the crime types rather than in the default strip boxes produced by facet_wrap, we ensure that the text is, as mentioned above, placed directly above the blue line in each facet. The text being in close proximity to the lines means the viewer knows what lines represent what crime type.",
    "crumbs": [
      "Lab assignments",
      "Lab5 - Graphic Design"
    ]
  },
  {
    "objectID": "labs/lab5_answer.html#challenge",
    "href": "labs/lab5_answer.html#challenge",
    "title": "Lab5 - Graphic Design",
    "section": "Challenge",
    "text": "Challenge\nDownload the font online, extract the ZIP file locally, and use the Windows interface to install the font. Then, using Cairo graphics, I can refer to the name of the font on my system to use it.\n\nHere we just use a standard font to avoid issues with running in CI.\n\n\ndarkplot2(fontfamily = \"Times New Roman\")",
    "crumbs": [
      "Lab assignments",
      "Lab5 - Graphic Design"
    ]
  },
  {
    "objectID": "labs/lab6_answer.html",
    "href": "labs/lab6_answer.html",
    "title": "Lab6 - Animation",
    "section": "",
    "text": "See the assignment description and model answer (for the source .Rmd model answer, just change “html” to “Rmd” in the link).\nLoading packages.\nlibrary(tidyverse)\nlibrary(grid)\nlibrary(magick)\nlibrary(gganimate)",
    "crumbs": [
      "Lab assignments",
      "Lab6 - Animation"
    ]
  },
  {
    "objectID": "labs/lab6_answer.html#questions-of-interest",
    "href": "labs/lab6_answer.html#questions-of-interest",
    "title": "Lab6 - Animation",
    "section": "Questions of interest",
    "text": "Questions of interest\n\nHow does the proportion of male versus female crimes change over time? (Questions 1 and 2)\nHow does the number of incidents for each type of crime change over time? (Question 3 and 4)\nHow does the number of incidents for each age group and each type of crime change over time? (Questions 5 and 6)",
    "crumbs": [
      "Lab assignments",
      "Lab6 - Animation"
    ]
  },
  {
    "objectID": "labs/lab6_answer.html#question-1",
    "href": "labs/lab6_answer.html#question-1",
    "title": "Lab6 - Animation",
    "section": "Question 1",
    "text": "Question 1\nWe first create some data with the information needed to create the plot.\n\nyouthSexMonth &lt;- t(apply(table(youth$Month, youth$SEX), 1, \n                         function(x) x/sum(x)))\n\nyouthSexMonthDfrm &lt;- as.data.frame(youthSexMonth) %&gt;% \n  mutate(Month = rownames(youthSexMonth))\n\nWe then create a function that can create each bar needed for the animation.\n\nbarRatio_grobTree &lt;- function(\n    data = youthSexMonthDfrm[1, ],\n    bar_height = unit(1, \"cm\"),\n    cols = c(female = \"#E46C0A\", male = \"#0070C0\")) {\n  \n  frate &lt;- data[\"Female\"]\n  mrate &lt;- data[\"Male\"]\n  flabel = paste0(\"Female \", round(frate * 100), \"%\")\n  mlabel = paste0(\"Male \", round(mrate * 100), \"%\")\n  \n  fbar &lt;- rectGrob(x = 0,\n                   hjust = 0,\n                   width = unit(frate, \"npc\"),\n                   height = bar_height,\n                   gp = gpar(col = cols[\"female\"], fill = cols[\"female\"]))\n  mbar &lt;- rectGrob(x = 1,\n                   hjust = 1,\n                   width = unit(mrate, \"npc\"),\n                   height = bar_height,\n                   gp = gpar(col = cols[\"male\"], fill = cols[\"male\"]))\n  \n  ftext &lt;- textGrob(x = unit(2, \"mm\"),\n                    label = flabel,\n                    hjust = 0,\n                    gp = gpar(fontface = \"bold\"))\n  mtext &lt;- textGrob(x = unit(1, \"npc\") - unit(2, \"mm\"),\n                    label = mlabel,\n                    hjust = 1,\n                    gp = gpar(fontface = \"bold\"))\n  \n  grobTree(fbar, mbar, ftext, mtext)\n}\n\nWe then create a function that will create a bar together with the date above it.\n\nratiowtitle &lt;- function(\n    data = youthSexMonthDfrm[1, ],\n    bar_height = unit(1, \"cm\"),\n    cols = c(female = \"#E46C0A\", male = \"#0070C0\")) {\n  args &lt;- as.list(environment())\n  bar &lt;- do.call(barRatio_grobTree, args)\n  \n  grid.newpage()\n  pushViewport(\n    viewport(\n      layout = grid.layout(nrow = 2),\n      height = 2 * bar_height\n      )\n  )\n  \n  pushViewport(\n    viewport(\n      layout.pos.col = 1,\n      layout.pos.row = 1\n    )\n  )\n  grid.text(data$Month)\n  upViewport()\n  \n  pushViewport(\n    viewport(\n      layout.pos.col = 1,\n      layout.pos.row = 2\n    )\n  )\n  grid.draw(bar)\n  upViewport()\n}\n\nLastly create a function that will loop through all months and create the animation.\n\nratiowtitle_anim &lt;- function(\n    data = youthSexMonthDfrm,\n    bar_height = unit(1, \"cm\"),\n    cols = c(female = \"#E46C0A\", male = \"#0070C0\"),\n    ...\n    ) {\n  resolution &lt;- 96\n  sq_pr_cm &lt;- resolution / 2.54\n  fig_height &lt;- as.numeric(bar_height) * 2\n  pixel_height &lt;- fig_height * sq_pr_cm\n  \n  bars &lt;- image_graph(\n  width = 400,\n  height = pixel_height,\n  res = resolution\n)\nfor (i in 1:nrow(data)) {\n  ratiowtitle(data = data[i, ], bar_height = bar_height, cols = cols)\n}\ndev.off()\n\nimage_animate(bars, ...)\n}\n\nratiowtitle_anim(optimize = TRUE)\n\n\n\n\n\n\n\n\n\nQuestions of interest\nWe can see that the proportion of female offenders goes down over time, but this visualisation makes it very hard to notice exactly what is happening through time, as we can see the proportion increasing and decreasing repeatedly, but it’s not possible to identify the individual changes.",
    "crumbs": [
      "Lab assignments",
      "Lab6 - Animation"
    ]
  },
  {
    "objectID": "labs/lab6_answer.html#question-2",
    "href": "labs/lab6_answer.html#question-2",
    "title": "Lab6 - Animation",
    "section": "Question 2",
    "text": "Question 2\nWe create data in long format to be able to color by Sex as an aesthetic.\n\nlongYouthSexMonth &lt;- youthSexMonthDfrm %&gt;% \n  tidyr::pivot_longer(cols = c(\"Female\", \"Male\"),\n                      names_to = \"Sex\",\n                      values_to = \"Prop\")\n\nWe create the plot by using gganimate::transition_states with states specified as Month. To avoid any pause at any of the states, we specify state_length = 0.\n\nggplot(longYouthSexMonth, aes(x = 1, y = Prop, fill = Sex)) +\n  geom_col() +\n  coord_flip() +\n  ggtitle(\"{closest_state}\") +\n  gganimate::transition_states(Month, state_length = 0)",
    "crumbs": [
      "Lab assignments",
      "Lab6 - Animation"
    ]
  },
  {
    "objectID": "labs/lab6_answer.html#question-3",
    "href": "labs/lab6_answer.html#question-3",
    "title": "Lab6 - Animation",
    "section": "Question 3",
    "text": "Question 3\nWe create a bar plot and make it an animation with transition_states, making them fade between frames with enter/exit_fade, ensuring that we specify the group aesthetic explicitly to make it work.\n\nggplot(crime, aes(x = Type, group = Year)) +\n  geom_bar() +\n  coord_flip() +\n  labs(title = \"{closest_state}\", x = \"\", y = \"\") +\n  gganimate::transition_states(Year) +\n  gganimate::enter_fade() +\n  gganimate::exit_fade()\n\n\n\n\n\n\n\n\nRegarding the question of interest with regard to number of incidents for crime types over time, seeing the trend for each crime type, this can take a while, as you have to focus on one crime type at a time through a loop (or possibly more) of the gif. It is possible to see from this animation that the overall trend is downward.",
    "crumbs": [
      "Lab assignments",
      "Lab6 - Animation"
    ]
  },
  {
    "objectID": "labs/lab6_answer.html#question-4",
    "href": "labs/lab6_answer.html#question-4",
    "title": "Lab6 - Animation",
    "section": "Question 4",
    "text": "Question 4\nCreate data set of counts.\n\ncrimeYearType &lt;- as.data.frame(table(crime$Year, crime$ANZSOC.Division))\ncrimeYearType$Year &lt;- as.numeric(as.character(crimeYearType$Var1))\ncrimeYearType$Type &lt;- crimeYearType$Var2\nlastCount &lt;- subset(crimeYearType, Year == 2022)\n\nCreate function that creates a static line plot with an optional specification of categories to highlight with thicker lines and a point at the end for chosen years.\n\ntypeLabel &lt;- function(data, coords) {\n  textGrob(\n    data$label,\n    x = unit(coords$x, \"npc\") + unit(1, \"mm\"),\n    y = coords$y,\n    just = c(0, .5),\n    gp = gpar(col = data$colour)\n  )\n}\n\nlinePlot &lt;- function(\n    highlightYear = NULL,\n    highlightCats = unique(\n      grep(\"^(Public|Dangerous)\",\n           data$Type,\n           value = TRUE\n      )\n    ),\n    data = crimeYearType,\n    colors = NULL) {\n  if (is.null(colors)) {\n    n_cats &lt;- length(unique(data$Type))\n    colors &lt;- colorspace::desaturate(scales::pal_hue()(n_cats), 0.5)\n  }\n  \n  lastCount &lt;- subset(data, Year == 2022)\n  \n  highlighted &lt;- data %&gt;% \n    filter(Type %in% highlightCats)\n  toHighlightYear &lt;- subset(highlighted, Year &lt;= highlightYear)\n  onlyHighlightYear &lt;- subset(highlighted, Year == highlightYear)\n  \n  p &lt;- ggplot(data, aes(x = Year, y = Freq, color = Type, group = Type)) +\n    geom_line() +\n    scale_x_continuous(expand = expansion(add = c(0, 9), mult = c(.05, 0))) +\n    scale_color_manual(values = colors) +\n    gggrid::grid_group(\n      typeLabel,\n      aes(label = Type),\n      data = lastCount\n    ) +\n    theme(legend.position = \"none\")\n  \n  if (!is.null(highlightYear)) {\n    p &lt;- p +\n      geom_point(data = onlyHighlightYear, size = 3)\n    \n    if (highlightYear != 2015) {\n      p &lt;- p +\n        geom_line(data = toHighlightYear, linewidth = 1.3)\n    }\n  }\n  return(p)\n}\n\n\nCreating the animation with Magick\nCreate function that loops over the function above, highlighting one year ahead at a time.\n\nline_anim &lt;- function(\n    highlightYears = 2015:2022,\n    highlightCats = unique(\n      grep(\"^(Public|Dangerous)\",\n           data$Type,\n           value = TRUE\n      )\n    ),\n    data = crimeYearType,\n    ...) {\n  \n  lines &lt;- magick::image_graph(\n    800,\n    472\n  )\n  for (i in highlightYears) {\n    p &lt;- linePlot(highlightYear = i, highlightCats = highlightCats, data = data)\n    print(p)\n  }\n  dev.off()\n  \n  magick::image_animate(lines, ...)\n}\n\nline_anim(optimize = TRUE, fps = 1)\n\n\n\n\n\n\n\n\n\n\nCreating the animation with gganimate\nWe create the animation superimposed onto a static image by making sure that the variable we give to gganimate::transition_reveal is different than the one used as an aesthetic for the part of the plot we want to keep static.\nTo avoid a message when creating the geoms, we need to duplicate the first row of data.\n\nTried a few different things, I have no idea why the lines are so jagged.\n\n\nhighlightCats &lt;- unique(grep(\"^(Public|Dangerous)\", crimeYearType$Type, value = TRUE))\nhigh &lt;- crimeYearType %&gt;%\n              filter(Type %in% highlightCats) %&gt;% \n  rename(Year_new = Year)\nhigh &lt;- rbind(high[1, ], high)\n\nlinePlot() +\n  geom_line(aes(x = Year_new), linewidth = 2, data = high) +\n  geom_point(aes(x = Year_new), size = 4, data = high) +\n  gganimate::transition_reveal(Year_new)\n\n\n\n\n\n\n\n\n\n\nQuestions of interest\nWe see that the overall trend for all crime types is downward, though it’s much more visible by this plot than the previous that some crime types have short upward trends throughout the years of the data. The animation does a good job of highlighting the 2 categories which show 2 different trajectories - one with a monotonically decreasing trend that is quite steep and one that actually starts on an upward trend that then turns downward from 2019.",
    "crumbs": [
      "Lab assignments",
      "Lab6 - Animation"
    ]
  },
  {
    "objectID": "labs/lab6_answer.html#question-5",
    "href": "labs/lab6_answer.html#question-5",
    "title": "Lab6 - Animation",
    "section": "Question 5",
    "text": "Question 5\nWe create this plot by making a bar plot with facet_grid to stratify by both year and crime type. We specify angle = 0 for strip.text.y in theme to ensure labels are readable.\n\nggplot(crime, aes(x = Age.Lower, fill = Type)) +\n  geom_bar(show.legend = FALSE) +\n  facet_grid(Type ~ Year, scales = \"free_y\") +\n  labs(y = \"\") +\n  theme(strip.text.y = element_text(angle = 0, hjust = 0),\n        text = element_text(size = 9),\n        axis.text.x = element_blank(),\n        axis.ticks.x = element_blank(),\n        panel.grid = element_blank()\n        )\n\n\n\n\n\n\n\n\nThis visualisation makes it hard to answer the question of whether the number of incidents for each age group and crime type changes over time. We can, however, see some distribution becoming bimodal in time. Fx. “Theft and Related Offences” an “Unlawful Entry with Intent/Burglary, Break and Enter” transform from being a distribution with a single mode at around age 20 to having a mode a both 20 and around 40. For “Fraud, Deception and Related Offences” the distribution does not become bimodal, but the mode simply shifts, again from about 20 to about 40.",
    "crumbs": [
      "Lab assignments",
      "Lab6 - Animation"
    ]
  },
  {
    "objectID": "labs/lab6_answer.html#question-6",
    "href": "labs/lab6_answer.html#question-6",
    "title": "Lab6 - Animation",
    "section": "Question 6",
    "text": "Question 6\nWe create a bar plot and make it an animation with transition_states, making them fade between frames with enter/exit_fade, ensuring that we specify the group aesthetic explicitly to make it work.\n\nggplot(crime, aes(x = Age.Lower, fill = Type, group = Year)) +\n  geom_bar(colour = \"black\", show.legend = FALSE) +\n  facet_grid(rows = vars(Type), scales = \"free_y\") +\n  theme(strip.text.y = element_text(angle = 0, hjust = 0,\n                                    margin = margin(l = .5, r = 1, unit = \"cm\")),\n        panel.spacing.y = unit(0, \"cm\"),\n        panel.grid = element_blank(),\n        aspect.ratio = 1/4,\n        text = element_text(size = 9),\n        plot.title = element_text(size = 12)) +\n  labs(title = \"Year = {closest_state}\", y = \"\") +\n  gganimate::transition_states(Year) + \n  gganimate::enter_fade() +\n  gganimate::exit_fade()\n\n\n\n\n\n\n\n\nThis animation does not show new information in regards to answering the question as we did above in the previous question. However, it is much easier to identify the changes in this animation by being presented information bit by bit. It is also easier to judge the relative difference when the change happens in the same “location”.",
    "crumbs": [
      "Lab assignments",
      "Lab6 - Animation"
    ]
  },
  {
    "objectID": "labs/lab6_answer.html#challenge",
    "href": "labs/lab6_answer.html#challenge",
    "title": "Lab6 - Animation",
    "section": "Challenge",
    "text": "Challenge\nI create a quite simple animation that will cycle through all crime types, shwoing data from each crime type one at a time with the specification in the subtitle of the plot.\n\nFor some reason, the subtitle writing the crime type and the plot are not synced when changing. I tried changing transition_length and state_length arguments in transition_states, but nothing seemed to fix the issue.\n\n\ncrimeAgeType &lt;- function(data = crime, colors = NULL, animate = TRUE) {\n  if (is.null(colors)) {\n    colors &lt;- setNames(scales::pal_hue()(2), c(\"Female\", \"Male\"))\n  }\n  \n  p &lt;- ggplot(data, aes(x = Month, fill = SEX)) +\n    geom_bar(position = \"fill\", show.legend = FALSE) +\n    scale_fill_manual(values = colors) +\n    labs(x = \"Time\", y = \"\",\n         title = paste0(\n           \"Ratio of &lt;span style = 'color:\",\n           colors[\"Male\"],\n           \";'&gt;Male&lt;/span&gt; and &lt;span style = 'color:\",\n           colors[\"Female\"],\n           \";'&gt;Female&lt;/span&gt; offences in years 2015-2022\"\n         )\n    ) + \n    labs(subtitle = \"Crime type: {closest_state}\") +\n    theme(\n      plot.title = ggtext::element_markdown(size = 18, margin = margin(0,0,20,0)),\n      plot.subtitle = element_text(size = 12, margin = margin(0,0,5,0)),\n      axis.text = element_blank(),\n      axis.ticks = element_blank(),\n      aspect.ratio = 1) +\n    facet_wrap(~ Age.Lower, nrow = 1)\n  \n  if (animate)\n    p &lt;- p + \n      labs(subtitle = \"Crime type: {closest_state}\") +\n      gganimate::transition_states(Type)\n  \n  return(p)\n}\n\nchal &lt;- crimeAgeType()\n\ngganimate::animate(chal, fps = 1)",
    "crumbs": [
      "Lab assignments",
      "Lab6 - Animation"
    ]
  },
  {
    "objectID": "labs/lab4_answer.html",
    "href": "labs/lab4_answer.html",
    "title": "Lab4 - Visual Perception",
    "section": "",
    "text": "See the assignment description and model answer (for the source .Rmd model answer, just change “html” to “Rmd” in the link).\nLoading packages.\nlibrary(tidyverse)\nlegend_text_size &lt;- 6",
    "crumbs": [
      "Lab assignments",
      "Lab4 - Visual Perception"
    ]
  },
  {
    "objectID": "labs/lab4_answer.html#questions-of-interest",
    "href": "labs/lab4_answer.html#questions-of-interest",
    "title": "Lab4 - Visual Perception",
    "section": "Questions of interest",
    "text": "Questions of interest\nFor the data set of youth crimes (having filtered data to include only those ages 15-19), we want to investigate:\n\nWhat is the most and least common types of crimes?\nHow do the three most common types of crime compare?\nCompare “Public Order Offences” and “Dangerous or Negligent Acts Endangering Persons” crime types",
    "crumbs": [
      "Lab assignments",
      "Lab4 - Visual Perception"
    ]
  },
  {
    "objectID": "labs/lab4_answer.html#question-1",
    "href": "labs/lab4_answer.html#question-1",
    "title": "Lab4 - Visual Perception",
    "section": "Question 1",
    "text": "Question 1\nWe create the plot using geom_col combined with coord_polar.\n\nggplot(youthType, aes(x = \"\", y = Freq, fill = Var1)) +\n  geom_col() +\n  coord_polar(theta = \"y\") +\n  labs(x = \"\", y = \"\", fill = \"ANZSOC.Divison\", title = \"Overall Number of Incidents\") +\n  theme(legend.text = element_text(size = legend_text_size))\n\n\n\n\n\n\n\n\n\nQuestions of interest\nIt’s clear that “Theft and related offences” is the most common type of crime. We see that “Homicide and related offences” is the least common type of crime, but mostly we deduce that from the label, as it is hard to see on the pie chart.\nIt looks like the most common crime type “Theft and related offences” is slightly more common than “Acts intended to cause injury”, which is only very slightly more common than “Traffic and vehicle regulatory offences”.\n“Public Order Offences” and “Dangerous or Negligent Acts Endangering Persons” are not differentiable from the pie chart, only due to the label. We cannot comment on time trend between these crime types.\n\n\nVisual channels and perception\nAngle is used as a channel to represent the data value (frequency of crime). The area can also be used to identify the data value, making it a channel as well. Colour is used as a channel for the crime types.\nThe plot presents an issue that is unavoidable with pie charts. Healy writes that “… our visual system is trying to construct a representation of what it is looking at based more on relative differences…”. For pie charts, judging the angle and area in a pie chart, differences are almost always judged smaller than they actually are. In the plot, it’s not obvious that the frequency of “Theft and related offences” is almost 50% more than “Acts intended to cause injury”.\nWe create a new plot with white lines between the areas.\n\nggplot(youthType, aes(x = \"\", y = Freq, fill = Var1)) +\n  geom_col(color = \"white\") +\n  coord_polar(theta = \"y\") +\n  labs(x = \"\", y = \"\", fill = \"ANZSOC.Divison\", title = \"Overall Number of Incidents\") +\n  theme(legend.text = element_text(size = legend_text_size))\n\n\n\n\n\n\n\n\nPersonlly, I think the difference between the most common and 2nd most common crime type looks bigger in this plot than the previous. So it does help a bit, but not as much as using length as a channel ranger than area and angle.",
    "crumbs": [
      "Lab assignments",
      "Lab4 - Visual Perception"
    ]
  },
  {
    "objectID": "labs/lab4_answer.html#question-2",
    "href": "labs/lab4_answer.html#question-2",
    "title": "Lab4 - Visual Perception",
    "section": "Question 2",
    "text": "Question 2\n\nBetter\nAs noted at the end of the previous section, a bar plot would do a better job of showing the data values, using length as a channel. Wilke notes that “… if a data value is encoded entirely as a distance, as is the case with the length of a bar, we perceive it more accurately than when the data value is encoded through a combination of two or more distances that jointly create an area.”.\n\nggplot(youthType, aes(x = Var1, y = Freq, fill = Var1)) +\n  geom_col() + \n  labs(fill = \"ANZSOC.Divison\", title = \"Overall Number of Incidents\") +\n  theme(axis.ticks.x = element_blank(),\n        axis.title.x = element_blank(),\n        axis.text.x = element_blank(),\n        legend.text = element_text(size = legend_text_size))\n\n\n\n\n\n\n\n\n\n\nWorse\nA channel that can be used beside area or length is position on unaligned scales, which in this case combined with small multiples gives a plot that should rather just be a table, as the visual representation gives us no relative differences in terms of anything other than numbers on the y-axis.\n\nggplot(youthType, aes(x = Var1, y = Freq, color = Var1)) +\n  geom_point() +\n  facet_wrap(~ Var1, scales = \"free\") +\n  labs(y = \"\", color = \"ANZSOC.Divison\", title = \"Overall Number of Incidents\") +\n  theme(axis.ticks.x = element_blank(),\n        axis.title.x = element_blank(),\n        axis.text.x = element_blank())",
    "crumbs": [
      "Lab assignments",
      "Lab4 - Visual Perception"
    ]
  },
  {
    "objectID": "labs/lab4_answer.html#question-3",
    "href": "labs/lab4_answer.html#question-3",
    "title": "Lab4 - Visual Perception",
    "section": "Question 3",
    "text": "Question 3\nTo re-create the plot, I create a data set only containing the crime types that we want to draw a white line for. We then create the white line using geom_line with this filtered data as the data as well as run geom_line again to make sure that the white and colored line of highlighted categories are layered on top of the other lines.\n\nobsWithCat &lt;- grepl(\"^(Public|Dangerous)\", youthMonthType$Var2)\nyouthMonthType$highlightCat &lt;- ifelse(obsWithCat, 1, 0)\nyouthMonthTypeHighlightCat &lt;- youthMonthType %&gt;% \n  dplyr::filter(highlightCat == 1)\n\nggplot(youthMonthType, aes(x = Month, y = Freq, color = Var2, group = Var2)) +\n  geom_line() +\n  geom_line(data = youthMonthTypeHighlightCat, color = \"white\", lwd = 4) +\n  geom_line(data = youthMonthTypeHighlightCat) +\n  labs(x = \"\", y = \"\", title = \"Number of Incidents per Month\", color = \"ANZSOC.Division\") +\n  theme(legend.text = element_text(size = legend_text_size))\n\n\n\n\n\n\n\n\n\nQuestions of interest\nFrom this line plot, we can see that same regarding most and least common crime types. “Theft and related offences” is clearly the most common (atleast until about 2020), and the least common is hard to see, but we can judge by the legend. Here it becomes easier to see, however, that the difference between the third most common crime types diminishes with time. In 2014 “Theft and related offences” is almost double as frequent as the 2nd most common “Acts intended to cause injury”, but at around 2020, the 3 most common crime types are about the same frequency.\nRegarding the categories “Public Order Offences” and “Dangerous or Negligent Acts Endangering Persons”, we see that the latter is on an increasing trend, whereas all other crime types seem to be on a downward trend. It increased from a frequency of just under 100 per month in 2014 to almost 150 per month in 2022. Comparing this to “Public Order Offences”, this is the crime type with the biggest decrease, going from a frequency above 200 in 2014 to a frequency just above 50 in 2022.\n\n\nPreattentive pop out and Gestalt Rules\nWhat “pops out” immediately is the coloring of the lines according to crime types as well as the highlighted lines with a white background\nGestalt rules\n\nConnection: The lines are coloured within each crime type, making a connection between the data points that make out each line\nFigure and Ground: We use the fact that our plot is layered to have a grey background and then use the contrast of white to highlight our colored lines\nCommon fate: Almost all of the lines are moving downward (except the one we commented on above), meaning we quickly associate the same trend to almost all crime types\nProximity: When the lines are close, we know immediately that the frequencies of crimes are similar",
    "crumbs": [
      "Lab assignments",
      "Lab4 - Visual Perception"
    ]
  },
  {
    "objectID": "labs/lab4_answer.html#question-4",
    "href": "labs/lab4_answer.html#question-4",
    "title": "Lab4 - Visual Perception",
    "section": "Question 4",
    "text": "Question 4\nDefault colour palette used in ggplot2 is generated by scales::pal_hue(). To desaturate the colors for some of the categories, we can use colorspace::desaturate.\nWe create the plot by mapping aesthetics of color and linewidth to the crime type variable Var2 and then scaling colors and linewidths such that our highlighted groups are not saturated and have a bigger linewidth. Note we do a separate call to geom_line with a subset of data with only the highlighted categories to make them go “on top”.\n\nmonthLabels &lt;- levels(youthMonthType$Var2)\nhighlightCats &lt;- grepl(\"^(Public|Dangerous)\", monthLabels)\ncolors &lt;- scales::pal_hue()(length(monthLabels))\ncolors[!highlightCats] &lt;- sapply(\n  colors[!highlightCats], colorspace::desaturate, amount = 0.8\n)\n\nlwds &lt;- setNames(rep(0.6, length(monthLabels)), monthLabels)\nlwds[highlightCats] &lt;- 1.2\n\nggplot(youthMonthType,\n       aes(x = Month, y = Freq, color = Var2, group = Var2, linewidth = Var2)) +\n  geom_line() +\n  geom_line(data = youthMonthTypeHighlightCat) +\n  scale_color_manual(name = \"ANZSOC.Division\", values = colors) +\n  scale_linewidth_manual(name = \"ANZSOC.Division\", values = lwds) +\n  labs(x = \"\", y = \"\", title = \"Number of Incidents per Month\") +\n  theme(legend.text = element_text(size = legend_text_size))\n\n\n\n\n\n\n\n\nHere we use the same visual channels as above by using color, but instead of drawing a background of white to highlight certain lines, we highlight the lines by making them thicker, thus also using a visual channel of thickness/area. We adjust the saturation (or chroma) of the other lines to not be as saturated as the highlighted lines, making the vibrant colors “pop out” more.\n\nAnother solution using a bit more “hidden” functionalities in ggplot2\nNot using linewidth as an aesthetic but fixing it in a geom, if the data contains the same column as is colored by, it will automatically include linewidth as a column.\n\nggplot(youthMonthType,\n       aes(x = Month, y = Freq, color = Var2, group = Var2)) +\n  geom_line() +\n  geom_line(data = youthMonthTypeHighlightCat, linewidth = 2) +\n  scale_color_manual(name = \"ANZSOC.Division\", values = colors) +\n  labs(x = \"\", y = \"\", title = \"Number of Incidents per Month\") +\n  theme(legend.text = element_text(size = legend_text_size))",
    "crumbs": [
      "Lab assignments",
      "Lab4 - Visual Perception"
    ]
  },
  {
    "objectID": "labs/lab4_answer.html#question-5",
    "href": "labs/lab4_answer.html#question-5",
    "title": "Lab4 - Visual Perception",
    "section": "Question 5",
    "text": "Question 5\nWe use the colorspace::deutan function to transform the colors to what a person with deuteranomaly would see and scale our colors to use this new palette.\n\ncolors_deutan &lt;- colorspace::deutan(\n  colors\n)\nggplot(youthMonthType,\n       aes(x = Month, y = Freq, color = Var2, group = Var2, linewidth = Var2)) +\n  geom_line() +\n  geom_line(data = youthMonthTypeHighlightCat) +\n  scale_color_manual(name = \"ANZSOC.Division\", values = colors_deutan) +\n  scale_linewidth_manual(name = \"ANZSOC.Division\", values = lwds) +\n  labs(x = \"\", y = \"\", title = \"Number of Incidents per Month\") +\n  theme(legend.text = element_text(size = legend_text_size))\n\n\n\n\n\n\n\n\nAlmost all colors look exactly alike. We see a blob of blue-ish lines close to the bottom, and then we have the yellow line that stands out. But otherwise, we just see a mess of grey-ish lines that are indistinguishable.",
    "crumbs": [
      "Lab assignments",
      "Lab4 - Visual Perception"
    ]
  },
  {
    "objectID": "labs/lab4_answer.html#question-6",
    "href": "labs/lab4_answer.html#question-6",
    "title": "Lab4 - Visual Perception",
    "section": "Question 6",
    "text": "Question 6\nTo add grey lines for highlighted categories on each facet, we add a call to geom_line using a subset of the data containing only the highlighted categories, where we make sure to rename the facetting variable to something else, so it appears on all facets. To customise the x-axis, we use scale_x_date with a label specification being a function to allow us to change the display to year without century for years that are not 2022.\n\nyouthMonthTypeHighlightCatRenamed &lt;- youthMonthTypeHighlightCat %&gt;% \n  dplyr::rename(crimeType = Var2)\n\nggplot(youthMonthType, aes(x = Month, y = Freq, group = Var2, color = Var2)) +\n  geom_line(aes(group = crimeType),\n            data = youthMonthTypeHighlightCatRenamed,\n            color = \"grey\") +\n  geom_line() +\n  facet_wrap(~ Var2) +\n  labs(x = \"\", y = \"\",\n       title = \"Number of Incidents per Month\",\n       colour = \"ANZSOC.Division\") +\n  theme(legend.text = element_text(size = legend_text_size),\n        strip.background = element_blank(),\n        strip.text = element_blank()) +\n  scale_x_date(labels = function(x)\n    strftime(x, ifelse(names(x) == 2022, \"%Y\", \"%y\"))\n  )\n\n\n\n\n\n\n\n\nWe can see that the most common type of crime is “Theft…”, and like the other plots, the least common is very hard to identify from the plots, but the label in the legend can help us identify this, though with no gauge of how big the difference is between the least common types of crime.\nIn general the drawing of the 2 highlighted crime types lets us more easily compare between panels. We see that the most common crime type is much more common than the 2nd most common at the start of the data range, but ends up being very similar around 2022. The 3rd most common starts out almost as common as the 2nd, but decreases very rapidly and end up being much less common than the 1st and 2nd.\nRegarding the highlighted categories, exactly the same comments as in Questions of interest in question 3 applies.\nThus, I think this plot actually does a pretty good job of letting us answer all the questions of interest.",
    "crumbs": [
      "Lab assignments",
      "Lab4 - Visual Perception"
    ]
  },
  {
    "objectID": "labs/lab9_answer.html",
    "href": "labs/lab9_answer.html",
    "title": "Lab 9 - SVG graphics",
    "section": "",
    "text": "Data shows rows of incidents handled by the Police.\n\ncrime &lt;- read.csv(\"nzpolice-proceedings.csv\")\n\nGenerate Month and Year columns.\n\ncrime$Month &lt;- as.Date(crime$Date)\ncrime$Year &lt;- as.POSIXlt(crime$Date)$year + 1900\n\nExclude year 2014 for which we only have partial data.\n\ncrime &lt;- subset(crime, Year &gt;= 2015)\n\nCreate data with proportion of men and women in total and stratified by police district.\n\nsexProp &lt;- count(crime, SEX) %&gt;%\n    mutate(prop = n/sum(n))\nsexProp\n\n     SEX      n      prop\n1 Female 216350 0.2853506\n2   Male 541840 0.7146494\n\nsexRegionProps &lt;- crime %&gt;% \n  group_by(Police.District, SEX) %&gt;% \n  summarise(n = n(), .groups = \"drop_last\") %&gt;%\n  mutate(prop = n/sum(n), .keep = \"unused\") %&gt;% \n  ungroup()\nsexRegionProps$Police.District &lt;- reorder(sexRegionProps$Police.District,\n                                          sexRegionProps$prop,\n                                          function(x) x[1])\nhead(sexRegionProps)\n\n# A tibble: 6 × 3\n  Police.District SEX     prop\n  &lt;fct&gt;           &lt;chr&gt;  &lt;dbl&gt;\n1 Auckland City   Female 0.260\n2 Auckland City   Male   0.740\n3 Bay Of Plenty   Female 0.291\n4 Bay Of Plenty   Male   0.709\n5 Canterbury      Female 0.291\n6 Canterbury      Male   0.709\n\n\nDefine colors\n\ncols &lt;- c(female = \"#E46C0A\", male = \"#0070C0\")\n\n\n\n\nIn this lab we are only looking at the proportion of male versus female offenders, either for all of New Zealand or broken into different Police Districts. The data covers offending from 2015 to 2022.",
    "crumbs": [
      "Lab assignments",
      "Lab 9 - SVG graphics"
    ]
  },
  {
    "objectID": "labs/lab9_answer.html#crime-data",
    "href": "labs/lab9_answer.html#crime-data",
    "title": "Lab 9 - SVG graphics",
    "section": "",
    "text": "Data shows rows of incidents handled by the Police.\n\ncrime &lt;- read.csv(\"nzpolice-proceedings.csv\")\n\nGenerate Month and Year columns.\n\ncrime$Month &lt;- as.Date(crime$Date)\ncrime$Year &lt;- as.POSIXlt(crime$Date)$year + 1900\n\nExclude year 2014 for which we only have partial data.\n\ncrime &lt;- subset(crime, Year &gt;= 2015)\n\nCreate data with proportion of men and women in total and stratified by police district.\n\nsexProp &lt;- count(crime, SEX) %&gt;%\n    mutate(prop = n/sum(n))\nsexProp\n\n     SEX      n      prop\n1 Female 216350 0.2853506\n2   Male 541840 0.7146494\n\nsexRegionProps &lt;- crime %&gt;% \n  group_by(Police.District, SEX) %&gt;% \n  summarise(n = n(), .groups = \"drop_last\") %&gt;%\n  mutate(prop = n/sum(n), .keep = \"unused\") %&gt;% \n  ungroup()\nsexRegionProps$Police.District &lt;- reorder(sexRegionProps$Police.District,\n                                          sexRegionProps$prop,\n                                          function(x) x[1])\nhead(sexRegionProps)\n\n# A tibble: 6 × 3\n  Police.District SEX     prop\n  &lt;fct&gt;           &lt;chr&gt;  &lt;dbl&gt;\n1 Auckland City   Female 0.260\n2 Auckland City   Male   0.740\n3 Bay Of Plenty   Female 0.291\n4 Bay Of Plenty   Male   0.709\n5 Canterbury      Female 0.291\n6 Canterbury      Male   0.709\n\n\nDefine colors\n\ncols &lt;- c(female = \"#E46C0A\", male = \"#0070C0\")",
    "crumbs": [
      "Lab assignments",
      "Lab 9 - SVG graphics"
    ]
  },
  {
    "objectID": "labs/lab9_answer.html#questions-of-interest",
    "href": "labs/lab9_answer.html#questions-of-interest",
    "title": "Lab 9 - SVG graphics",
    "section": "",
    "text": "In this lab we are only looking at the proportion of male versus female offenders, either for all of New Zealand or broken into different Police Districts. The data covers offending from 2015 to 2022.",
    "crumbs": [
      "Lab assignments",
      "Lab 9 - SVG graphics"
    ]
  },
  {
    "objectID": "labs/lab9_answer.html#question-1",
    "href": "labs/lab9_answer.html#question-1",
    "title": "Lab 9 - SVG graphics",
    "section": "Question 1",
    "text": "Question 1\nIn the SVG code, we create 2 separate &lt;svg&gt; elements to write the text and draw the boxes. The reason for doing so, is to be able to use a viewBox with a specification of 0 0 100 100 and making sure to specify preserveAspectRatio=\"none\". In this way, we create a viewport such that we can specify width of rectangles inside the viewBox as the percentage of the total width of the image. For the text, we use &lt;tspan&gt; to color some words.\n\nAdding hyperlinks\nWe use the href attribute within an &lt;a&gt; element wrapped around the text to create a hyperlink.\n\n\nAdding tooltips\nWe add a tooltip by simply adding a &lt;title&gt; elements as a child to whatever element we want to add the tooltip to, as described in the documentation. In this case, we add it as a child to the &lt;rect&gt; elements.\n\n\nAdding animation\nWe can add animations by using the &lt;animate&gt; element. We do so by adding them inside the &lt;rect&gt; elements. For the left bar, we can simply animate “along” the width of the bar. Since rectangles are always left-aligned in SVG, for the right bar that needs to “grow” to the left, we add an animation both for the width and the x position.\nWe use fill=\"freeze\" to ensure the rectangles stay in their end position.\n\n\n&lt;svg version=\"1.1\"\n     width=\"500\" height=\"100\"\n     xmlns=\"http://www.w3.org/2000/svg\"&gt;\n  &lt;a href=\"https://www.police.govt.nz/about-us/publications-statistics/data-and-statistics/policedatanz/proceedings-offender-demographics\"&gt;\n    &lt;text x=\"0\" y=\"45\"\n      font-size=\"28\"\n      font-family=\"sans-serif\"\n      text-anchor=\"start\"&gt;\n        Youth Crime:\n        &lt;tspan fill=\"#E46C0A\"&gt;Female&lt;/tspan&gt;\n        versus\n        &lt;tspan fill=\"#0070C0\"&gt;Male&lt;/tspan&gt;\n    &lt;/text&gt;\n  &lt;/a&gt;\n  &lt;svg y=\"50\" width=\"500\" height = \"50\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"none\"&gt;\n    &lt;rect width=\"0\" height=\"100\" fill=\"#E46C0A\"&gt;\n      &lt;animate\n        attributeName=\"width\"\n        from=\"0\"\n        to=\"28.53506\"\n        dur=\"1s\"\n        fill=\"freeze\" /&gt;\n        &lt;title&gt; 28,5% of crimes were committed by Females &lt;/title&gt;\n    &lt;/rect&gt;\n    &lt;rect x=\"100\" width=\"100\" height=\"100\" fill=\"#0070C0\"&gt;\n      &lt;animate\n        attributeName=\"width\"\n        from=\"0\"\n        to=\"71.46494\"\n        dur=\"1s\"\n        fill=\"freeze\" /&gt;\n      &lt;animate\n        attributeName=\"x\"\n        from=\"100\"\n        to=\"28.53506\"\n        dur=\"1s\"\n        fill=\"freeze\" /&gt;\n        &lt;title&gt; 72,5% of crimes were committed by Males &lt;/title&gt;\n    &lt;/rect&gt;\n  &lt;/svg&gt;\n&lt;/svg&gt;\n\n\n\n\n  Youth Crime: Female versus Male     \n\n28,5% of crimes were committed by Females\n\n   \n\n72,5% of crimes were committed by Males\n\n\n\n\n\n\n\nCreating a button to run the animation\nWe add id=\"q1\" to the &lt;div&gt; element wrapped around our SVG code and then include the following to produce a button:\n\n&lt;script type=\"text/javascript\"&gt;\nfunction runAnim() {\n    const div = document.getElementById(\"q1\");\n    const anims = div.getElementsByTagName(\"animate\");\n    for (const anim of anims) {\n        anim.beginElement();\n    }\n}\n&lt;/script&gt;\n&lt;button id=\"button\" onclick=\"runAnim()\"&gt;Play&lt;/button&gt;\n\n\n\n  Youth Crime: Female versus Male     \n\n28,5% of crimes were committed by Females\n\n   \n\n72,5% of crimes were committed by Males\n\n\n\n\n\n\n\nPlay animation",
    "crumbs": [
      "Lab assignments",
      "Lab 9 - SVG graphics"
    ]
  },
  {
    "objectID": "labs/lab9_answer.html#question-2",
    "href": "labs/lab9_answer.html#question-2",
    "title": "Lab 9 - SVG graphics",
    "section": "Question 2",
    "text": "Question 2\nWe create helper functions\n\nadd_text: adds left-aligned text as a child with font-family “sans-serif”.\nadd_barRatioSVG: Creates an &lt;svg&gt; object of specified size with a viewBox enabling us to plot the rate in data within the new native user coordinate system. It then summarises the rate of observations within groups of colvar and creates rectangles using those rates and specified colors.\nadd_text_and_bar: A function to combine add_text and add_barRatioSVG, allocating the top half to the text and the bottom half to the bar of ratios.\nadd_to_facets: A function that splits data by a facetvar, allocates space to the different facets accordingly and then creates an &lt;svg&gt; for each facet and uses a facet_fun inside each facet. As a default it uses add_text_and_bar.\nsvg_facet: A wrapper function that initialises an svg document by calling xml_new_root, and it then uses add_to_facets to create the visualisation.\n\n\nlibrary(xml2)\n\nadd_text &lt;- function(.x, label = \"Some label\",\n                     x = \"0\", y = \"45\",\n                     text.size = \"18\") {\n  xml_add_child(.x, \"text\", label,\n                x=x, y=y,\n                \"font-size\"=text.size, \"font-family\"=\"sans-serif\", \"text-anchor\"=\"start\")\n  \n  return(invisible())\n}\n\nadd_barRatioSVG &lt;- function(\n    .x,\n    data = crime,\n    label = \"Some label\",\n    ratevar = \"prop\",\n    colvar = \"SEX\",\n    cols = c(\"#E46C0A\", \"#0070C0\"),\n    x = \"0\",\n    y = \"50\",\n    width = \"500\",\n    height = \"50\",\n    animate = FALSE) {\n  # Create rectangle inside svg object with viewBox specification\n  svg_rect &lt;- xml_add_child(\n    .x, \"svg\",\n    x = x, y=y, width=width, height = height, viewBox=\"0 0 1 1\", preserveAspectRatio=\"none\"\n  )\n  \n  # Find rates from data\n  # data_list &lt;- data %&gt;% \n  #   group_split({{colvar}} := get(colvar))\n  # rates &lt;- sapply(data_list, function(x) x[[ratevar]])\n  data_sum &lt;- data %&gt;% \n    group_by(across(all_of(colvar))) %&gt;% \n    summarise(n = n(), .groups = \"drop_last\") %&gt;%\n    mutate(prop = n/sum(n), .keep = \"unused\")\n  \n  # Use the rates to determine box length and position\n  rect1 &lt;- xml_add_child(svg_rect, \"rect\",\n                width=as.character(data_sum$prop[1]),\n                height=\"1\",\n                fill=cols[1])\n  rect2 &lt;- xml_add_child(svg_rect, \"rect\",\n                x=as.character(data_sum$prop[1]),\n                width=as.character(data_sum$prop[2]),\n                height=\"1\",\n                fill=cols[2])\n  \n  if (animate) {\n    xml_add_child(rect1, \"animate\",\n                  attributeName=\"width\",\n        from=\"0\",\n        to=as.character(data_sum$prop[1]),\n        dur=\"1s\",\n        fill=\"freeze\")\n    xml_add_child(rect2, \"animate\",\n                  attributeName=\"width\",\n        from=\"0\",\n        to=as.character(data_sum$prop[2]),\n        dur=\"1s\",\n        fill=\"freeze\")\n    xml_add_child(rect2, \"animate\",\n                  attributeName=\"x\",\n        from=\"1\",\n        to=as.character(data_sum$prop[1]),\n        dur=\"1s\",\n        fill=\"freeze\")\n  }\n  \n  # Add tooltips\n  if (TRUE) {\n    xml_add_child(\n    rect1, \"title\",\n    paste0(format(round(data_sum$prop[1]*100, 1), nsmall = 1),\n           \"% of crimes were commited by \",\n           data_sum[[colvar]][1],\n           \"s in \",\n           unique(data$Police.District))\n  )\n  xml_add_child(\n    rect2, \"title\",\n    paste0(format(round(data_sum$prop[2]*100, 1), nsmall = 1),\n           \"% of crimes were commited by \",\n           data_sum[[colvar]][2],\n           \"s in \",\n           unique(data$Police.District))\n  )\n  }\n  \n  return(invisible())\n}\n\nadd_text_and_bar &lt;- function(\n    .x,\n    data = crime,\n    label = \"Some label\",\n    ratevar = \"prop\",\n    colvar = \"SEX\",\n    cols = c(\"#E46C0A\", \"#0070C0\"),\n    x = \"0\",\n    y = \"0\",\n    text.size = \"18\",\n    text.y.offset = \"5\",\n    width = \"500\",\n    height = \"100\",\n    animate = FALSE\n    ) {\n  args &lt;- as.list(environment())\n  \n  y_mid &lt;- as.character(as.numeric(y) + as.numeric(height) / 2)\n  y_text &lt;- as.character(as.numeric(y_mid) - as.numeric(text.y.offset))\n  add_text(.x, label, x = x, y = y_text)\n  \n  args$.x &lt;- .x\n  args$y &lt;- y_mid\n  args$height &lt;- as.character(as.numeric(args$height) / 2)\n  args_to_bar &lt;- args[names(formals(add_barRatioSVG))]\n  do.call(add_barRatioSVG, args_to_bar)\n  \n  return(invisible())\n}\n\nfacetlevels_by_ratevar &lt;- function(\n    data = crime,\n    ratevar = \"prop\",\n    colvar = \"SEX\",\n    facetvar = \"Police.District\"\n) {\n  \n  data_sum &lt;- data %&gt;% \n    group_by(across(all_of(c(facetvar, colvar)))) %&gt;% \n    summarise(n = n(), .groups = \"drop_last\") %&gt;%\n    mutate(ratevar := n/sum(n), .keep = \"unused\") %&gt;% \n    ungroup()\n  \n  levels(reorder(data_sum[[facetvar]], data_sum$ratevar, function(x) x[1]))\n}\n\nadd_to_facets &lt;- function(\n    .x,\n    facet_fun = add_text_and_bar,\n    ...,\n    data = crime,\n    ratevar = \"prop\",\n    colvar = \"SEX\",\n    facetvar = \"Police.District\",\n    x = \"0\",\n    width = \"500\",\n    height = \"600\") {\n  \n  args &lt;- c(as.list(environment()), list(...))\n  \n  data[[facetvar]] &lt;- factor(\n    data[[facetvar]],\n    levels = facetlevels_by_ratevar(\n      data = data, ratevar = ratevar, colvar = colvar, facetvar = facetvar\n    )\n  )\n  facet_data &lt;- data %&gt;% \n    group_split({{facetvar}} := get(facetvar))\n  n_facets &lt;- length(facet_data)\n  height_facet &lt;- as.character(as.numeric(height) / n_facets)\n  ys &lt;- as.numeric(height_facet) * 0:(n_facets-1)\n  \n  args_to_facet &lt;- args\n  args_to_facet$height &lt;- height_facet\n  \n  map2(1:n_facets, ys, function(i, y) {\n    svg_facet &lt;- xml_add_child(\n      .x, \"svg\",\n      x = x, y=y, width=width, height = height_facet\n    )\n    \n    args_to_facet$.x &lt;- svg_facet\n    args_to_facet$data &lt;- facet_data[[i]]\n    args_to_facet$label &lt;- as.character(unique(args_to_facet$data[[facetvar]]))\n    args_to_facet$y &lt;- 0\n    args_to_facet &lt;- compact(args_to_facet[names(formals(facet_fun))])\n    do.call(facet_fun, args_to_facet)\n  })\n}\n\nsvg_facet &lt;- function(\n    facet_fun = add_text_and_bar,\n    ...,\n    data = crime,\n    ratevar = \"prop\",\n    colvar = \"SEX\",\n    facetvar = \"Police.District\",\n    x = \"0\",\n    width = \"500\",\n    height = \"600\") {\n  \n  args &lt;- c(as.list(environment()), list(...))\n\n  svg &lt;- xml_new_root(\"svg\",\n                      version=\"1.1\",\n                      width=width, height=height,\n                      xmlns=\"http://www.w3.org/2000/svg\")\n  \n  do.call(add_to_facets, c(list(.x = svg), args))\n  \n  return(svg)\n}\n\nRun the function to save an svg file.\n\n# svg &lt;- svg_facet(facet_fun = add_barRatioSVG)\n# svg &lt;- svg_facet(facet_fun = add_text)\nsvg &lt;- svg_facet(animate = TRUE)\nwrite_xml(svg, \"q2_program.svg\")\n\n\n\n\n\nAuckland City\n\n26.0% of crimes were commited by Females in Auckland City\n\n\n\n74.0% of crimes were commited by Males in Auckland City\n\n\n\n\n\nTasman\n\n26.7% of crimes were commited by Females in Tasman\n\n\n\n73.3% of crimes were commited by Males in Tasman\n\n\n\n\n\nWaitemata\n\n27.0% of crimes were commited by Females in Waitemata\n\n\n\n73.0% of crimes were commited by Males in Waitemata\n\n\n\n\n\nWellington\n\n27.1% of crimes were commited by Females in Wellington\n\n\n\n72.9% of crimes were commited by Males in Wellington\n\n\n\n\n\nSouthern\n\n27.1% of crimes were commited by Females in Southern\n\n\n\n72.9% of crimes were commited by Males in Southern\n\n\n\n\n\nBay Of Plenty\n\n29.1% of crimes were commited by Females in Bay Of Plenty\n\n\n\n70.9% of crimes were commited by Males in Bay Of Plenty\n\n\n\n\n\nCanterbury\n\n29.1% of crimes were commited by Females in Canterbury\n\n\n\n70.9% of crimes were commited by Males in Canterbury\n\n\n\n\n\nNorthland\n\n29.2% of crimes were commited by Females in Northland\n\n\n\n70.8% of crimes were commited by Males in Northland\n\n\n\n\n\nWaikato\n\n29.3% of crimes were commited by Females in Waikato\n\n\n\n70.7% of crimes were commited by Males in Waikato\n\n\n\n\n\nCounties/Manukau\n\n29.4% of crimes were commited by Females in Counties/Manukau\n\n\n\n70.6% of crimes were commited by Males in Counties/Manukau\n\n\n\n\n\nCentral\n\n30.2% of crimes were commited by Females in Central\n\n\n\n69.8% of crimes were commited by Males in Central\n\n\n\n\n\nEastern\n\n31.3% of crimes were commited by Females in Eastern\n\n\n\n68.7% of crimes were commited by Males in Eastern\n\n\n\n\n\n\n\n\nPlay animation\n\n\nChallenge\nThe svg file produces by the function above is pasted at the end of the document. We use the following code to embed a selection menu, which determines which animation to run when the button is pressed:\n\n&lt;script type=\"text/javascript\"&gt;\nfunction runAnimSelected() {\n    const div = document.getElementById(\"c\");\n    const menu = document.getElementById(\"region\");\n    const region = menu.selectedOptions[0].value;\n    const allRects = div.querySelectorAll(\"svg svg rect\");\n    const rect1 = +region * 2 - 1\n    const rect2 = rect1 - 1;\n    const anim1 = allRects[rect1].querySelectorAll(\"animate\");\n    for (const anim of anim1) {\n        anim.beginElement();\n    }\n    const anim2 = allRects[rect2].querySelectorAll(\"animate\");\n    for (const anim of anim2) {\n        anim.beginElement();\n    }\n}\n&lt;/script&gt;\n&lt;select id=\"region\"&gt;\n  &lt;option value=\"1\"&gt;Auckland City&lt;/option&gt;\n  &lt;option value=\"2\"&gt;Tasman&lt;/option&gt;\n  &lt;option value=\"3\"&gt;Waitemata&lt;/option&gt;\n  &lt;option value=\"4\"&gt;Wellington&lt;/option&gt;\n  &lt;option value=\"5\"&gt;Southern&lt;/option&gt;\n  &lt;option value=\"6\"&gt;Bay Of Plenty&lt;/option&gt;\n  &lt;option value=\"7\"&gt;Canterbury&lt;/option&gt;\n  &lt;option value=\"8\"&gt;Northland&lt;/option&gt;\n  &lt;option value=\"9\"&gt;Waikato&lt;/option&gt;\n  &lt;option value=\"10\"&gt;Counties/Manukau&lt;/option&gt;\n  &lt;option value=\"11\"&gt;Central&lt;/option&gt;\n  &lt;option value=\"12\"&gt;Eastern&lt;/option&gt;\n&lt;/select&gt;\n&lt;button id=\"button\" onclick=\"runAnimSelected()\"&gt;Play&lt;/button&gt;\n\n\nNote that since we have nested &lt;svg&gt;s, we use the line const allRects = div.querySelectorAll(\"svg svg rect\"); to fetch all &lt;rect&gt; elements in the svg file.\n\nAfterwards we find the indices of the relevant &lt;rect&gt;s corresponding to the selection of region using const rect1 = +region * 2 - 1; const rect2 = rect1 - 1;. Then, we can fetch all the &lt;animation&gt; elements within a corresponding &lt;rect&gt; element with allRects[rectXX].querySelectorAll(\"animate\") and then run the elements with the beginElement method.\n\n\n\n\nAuckland City\n\n26.0% of crimes were commited by Females in Auckland City\n\n\n\n74.0% of crimes were commited by Males in Auckland City\n\n\n\n\n\nTasman\n\n26.7% of crimes were commited by Females in Tasman\n\n\n\n73.3% of crimes were commited by Males in Tasman\n\n\n\n\n\nWaitemata\n\n27.0% of crimes were commited by Females in Waitemata\n\n\n\n73.0% of crimes were commited by Males in Waitemata\n\n\n\n\n\nWellington\n\n27.1% of crimes were commited by Females in Wellington\n\n\n\n72.9% of crimes were commited by Males in Wellington\n\n\n\n\n\nSouthern\n\n27.1% of crimes were commited by Females in Southern\n\n\n\n72.9% of crimes were commited by Males in Southern\n\n\n\n\n\nBay Of Plenty\n\n29.1% of crimes were commited by Females in Bay Of Plenty\n\n\n\n70.9% of crimes were commited by Males in Bay Of Plenty\n\n\n\n\n\nCanterbury\n\n29.1% of crimes were commited by Females in Canterbury\n\n\n\n70.9% of crimes were commited by Males in Canterbury\n\n\n\n\n\nNorthland\n\n29.2% of crimes were commited by Females in Northland\n\n\n\n70.8% of crimes were commited by Males in Northland\n\n\n\n\n\nWaikato\n\n29.3% of crimes were commited by Females in Waikato\n\n\n\n70.7% of crimes were commited by Males in Waikato\n\n\n\n\n\nCounties/Manukau\n\n29.4% of crimes were commited by Females in Counties/Manukau\n\n\n\n70.6% of crimes were commited by Males in Counties/Manukau\n\n\n\n\n\nCentral\n\n30.2% of crimes were commited by Females in Central\n\n\n\n69.8% of crimes were commited by Males in Central\n\n\n\n\n\nEastern\n\n31.3% of crimes were commited by Females in Eastern\n\n\n\n68.7% of crimes were commited by Males in Eastern\n\n\n\n\n\n\n\n Auckland City Tasman Waitemata Wellington Southern Bay Of Plenty Canterbury Northland Waikato Counties/Manukau Central Eastern  Play\n\nOverall summary\nTo create a bar of ratios between men and women with a colored title, we write svg code using &lt;text&gt; and &lt;rect&gt; elements, making use of &lt;tspan&gt; to colors words in the title, and using viewBox and preserveAspectRatio attributes to easily use data values inside a coordinate system where we have specified a native scale.\nWe add hyperlinks using the href attribute inside an &lt;a&gt; element as parent to the &lt;text&gt; element. We add tooltips using … . Lastly, we add animation using an &lt;animation&gt; element as a child of the &lt;rect&gt; element we want to display as an animation. We can even embed a button using javascript that when pressed runs the animation.\nIn question 2, we do the same again, but here we stratify our data by police district, find values programmatically and create bars with labels inside sub-&lt;svg&gt; elements.\nIn question 3 we expand on the use of javascript by adding a selection menu of region to run the animation for.\n\n\nsvg file produced by R function\n\n\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"500\" height=\"600\"&gt;\n  &lt;svg x=\"0\" y=\"0\" width=\"500\" height=\"50\"&gt;\n    &lt;text x=\"0\" y=\"20\" font-size=\"18\" font-family=\"sans-serif\" text-anchor=\"start\"&gt;Auckland City&lt;/text&gt;\n    &lt;svg x=\"0\" y=\"25\" width=\"500\" height=\"25\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\"&gt;\n      &lt;rect width=\"0.260044660285139\" height=\"1\" fill=\"#E46C0A\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.260044660285139\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;26.0% of crimes were commited by Females in Auckland City&lt;/title&gt;\n      &lt;/rect&gt;\n      &lt;rect x=\"0.260044660285139\" width=\"0.739955339714861\" height=\"1\" fill=\"#0070C0\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.739955339714861\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;animate attributeName=\"x\" from=\"1\" to=\"0.260044660285139\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;74.0% of crimes were commited by Males in Auckland City&lt;/title&gt;\n      &lt;/rect&gt;\n    &lt;/svg&gt;\n  &lt;/svg&gt;\n  &lt;svg x=\"0\" y=\"50\" width=\"500\" height=\"50\"&gt;\n    &lt;text x=\"0\" y=\"20\" font-size=\"18\" font-family=\"sans-serif\" text-anchor=\"start\"&gt;Tasman&lt;/text&gt;\n    &lt;svg x=\"0\" y=\"25\" width=\"500\" height=\"25\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\"&gt;\n      &lt;rect width=\"0.267037948452273\" height=\"1\" fill=\"#E46C0A\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.267037948452273\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;26.7% of crimes were commited by Females in Tasman&lt;/title&gt;\n      &lt;/rect&gt;\n      &lt;rect x=\"0.267037948452273\" width=\"0.732962051547727\" height=\"1\" fill=\"#0070C0\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.732962051547727\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;animate attributeName=\"x\" from=\"1\" to=\"0.267037948452273\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;73.3% of crimes were commited by Males in Tasman&lt;/title&gt;\n      &lt;/rect&gt;\n    &lt;/svg&gt;\n  &lt;/svg&gt;\n  &lt;svg x=\"0\" y=\"100\" width=\"500\" height=\"50\"&gt;\n    &lt;text x=\"0\" y=\"20\" font-size=\"18\" font-family=\"sans-serif\" text-anchor=\"start\"&gt;Waitemata&lt;/text&gt;\n    &lt;svg x=\"0\" y=\"25\" width=\"500\" height=\"25\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\"&gt;\n      &lt;rect width=\"0.270004455519068\" height=\"1\" fill=\"#E46C0A\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.270004455519068\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;27.0% of crimes were commited by Females in Waitemata&lt;/title&gt;\n      &lt;/rect&gt;\n      &lt;rect x=\"0.270004455519068\" width=\"0.729995544480932\" height=\"1\" fill=\"#0070C0\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.729995544480932\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;animate attributeName=\"x\" from=\"1\" to=\"0.270004455519068\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;73.0% of crimes were commited by Males in Waitemata&lt;/title&gt;\n      &lt;/rect&gt;\n    &lt;/svg&gt;\n  &lt;/svg&gt;\n  &lt;svg x=\"0\" y=\"150\" width=\"500\" height=\"50\"&gt;\n    &lt;text x=\"0\" y=\"20\" font-size=\"18\" font-family=\"sans-serif\" text-anchor=\"start\"&gt;Wellington&lt;/text&gt;\n    &lt;svg x=\"0\" y=\"25\" width=\"500\" height=\"25\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\"&gt;\n      &lt;rect width=\"0.271174129064125\" height=\"1\" fill=\"#E46C0A\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.271174129064125\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;27.1% of crimes were commited by Females in Wellington&lt;/title&gt;\n      &lt;/rect&gt;\n      &lt;rect x=\"0.271174129064125\" width=\"0.728825870935875\" height=\"1\" fill=\"#0070C0\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.728825870935875\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;animate attributeName=\"x\" from=\"1\" to=\"0.271174129064125\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;72.9% of crimes were commited by Males in Wellington&lt;/title&gt;\n      &lt;/rect&gt;\n    &lt;/svg&gt;\n  &lt;/svg&gt;\n  &lt;svg x=\"0\" y=\"200\" width=\"500\" height=\"50\"&gt;\n    &lt;text x=\"0\" y=\"20\" font-size=\"18\" font-family=\"sans-serif\" text-anchor=\"start\"&gt;Southern&lt;/text&gt;\n    &lt;svg x=\"0\" y=\"25\" width=\"500\" height=\"25\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\"&gt;\n      &lt;rect width=\"0.271348261076703\" height=\"1\" fill=\"#E46C0A\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.271348261076703\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;27.1% of crimes were commited by Females in Southern&lt;/title&gt;\n      &lt;/rect&gt;\n      &lt;rect x=\"0.271348261076703\" width=\"0.728651738923297\" height=\"1\" fill=\"#0070C0\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.728651738923297\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;animate attributeName=\"x\" from=\"1\" to=\"0.271348261076703\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;72.9% of crimes were commited by Males in Southern&lt;/title&gt;\n      &lt;/rect&gt;\n    &lt;/svg&gt;\n  &lt;/svg&gt;\n  &lt;svg x=\"0\" y=\"250\" width=\"500\" height=\"50\"&gt;\n    &lt;text x=\"0\" y=\"20\" font-size=\"18\" font-family=\"sans-serif\" text-anchor=\"start\"&gt;Bay Of Plenty&lt;/text&gt;\n    &lt;svg x=\"0\" y=\"25\" width=\"500\" height=\"25\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\"&gt;\n      &lt;rect width=\"0.290506150148452\" height=\"1\" fill=\"#E46C0A\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.290506150148452\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;29.1% of crimes were commited by Females in Bay Of Plenty&lt;/title&gt;\n      &lt;/rect&gt;\n      &lt;rect x=\"0.290506150148452\" width=\"0.709493849851548\" height=\"1\" fill=\"#0070C0\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.709493849851548\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;animate attributeName=\"x\" from=\"1\" to=\"0.290506150148452\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;70.9% of crimes were commited by Males in Bay Of Plenty&lt;/title&gt;\n      &lt;/rect&gt;\n    &lt;/svg&gt;\n  &lt;/svg&gt;\n  &lt;svg x=\"0\" y=\"300\" width=\"500\" height=\"50\"&gt;\n    &lt;text x=\"0\" y=\"20\" font-size=\"18\" font-family=\"sans-serif\" text-anchor=\"start\"&gt;Canterbury&lt;/text&gt;\n    &lt;svg x=\"0\" y=\"25\" width=\"500\" height=\"25\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\"&gt;\n      &lt;rect width=\"0.290930312598201\" height=\"1\" fill=\"#E46C0A\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.290930312598201\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;29.1% of crimes were commited by Females in Canterbury&lt;/title&gt;\n      &lt;/rect&gt;\n      &lt;rect x=\"0.290930312598201\" width=\"0.709069687401799\" height=\"1\" fill=\"#0070C0\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.709069687401799\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;animate attributeName=\"x\" from=\"1\" to=\"0.290930312598201\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;70.9% of crimes were commited by Males in Canterbury&lt;/title&gt;\n      &lt;/rect&gt;\n    &lt;/svg&gt;\n  &lt;/svg&gt;\n  &lt;svg x=\"0\" y=\"350\" width=\"500\" height=\"50\"&gt;\n    &lt;text x=\"0\" y=\"20\" font-size=\"18\" font-family=\"sans-serif\" text-anchor=\"start\"&gt;Northland&lt;/text&gt;\n    &lt;svg x=\"0\" y=\"25\" width=\"500\" height=\"25\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\"&gt;\n      &lt;rect width=\"0.291545880988774\" height=\"1\" fill=\"#E46C0A\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.291545880988774\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;29.2% of crimes were commited by Females in Northland&lt;/title&gt;\n      &lt;/rect&gt;\n      &lt;rect x=\"0.291545880988774\" width=\"0.708454119011226\" height=\"1\" fill=\"#0070C0\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.708454119011226\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;animate attributeName=\"x\" from=\"1\" to=\"0.291545880988774\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;70.8% of crimes were commited by Males in Northland&lt;/title&gt;\n      &lt;/rect&gt;\n    &lt;/svg&gt;\n  &lt;/svg&gt;\n  &lt;svg x=\"0\" y=\"400\" width=\"500\" height=\"50\"&gt;\n    &lt;text x=\"0\" y=\"20\" font-size=\"18\" font-family=\"sans-serif\" text-anchor=\"start\"&gt;Waikato&lt;/text&gt;\n    &lt;svg x=\"0\" y=\"25\" width=\"500\" height=\"25\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\"&gt;\n      &lt;rect width=\"0.292708784399218\" height=\"1\" fill=\"#E46C0A\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.292708784399218\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;29.3% of crimes were commited by Females in Waikato&lt;/title&gt;\n      &lt;/rect&gt;\n      &lt;rect x=\"0.292708784399218\" width=\"0.707291215600782\" height=\"1\" fill=\"#0070C0\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.707291215600782\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;animate attributeName=\"x\" from=\"1\" to=\"0.292708784399218\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;70.7% of crimes were commited by Males in Waikato&lt;/title&gt;\n      &lt;/rect&gt;\n    &lt;/svg&gt;\n  &lt;/svg&gt;\n  &lt;svg x=\"0\" y=\"450\" width=\"500\" height=\"50\"&gt;\n    &lt;text x=\"0\" y=\"20\" font-size=\"18\" font-family=\"sans-serif\" text-anchor=\"start\"&gt;Counties/Manukau&lt;/text&gt;\n    &lt;svg x=\"0\" y=\"25\" width=\"500\" height=\"25\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\"&gt;\n      &lt;rect width=\"0.293579482258522\" height=\"1\" fill=\"#E46C0A\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.293579482258522\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;29.4% of crimes were commited by Females in Counties/Manukau&lt;/title&gt;\n      &lt;/rect&gt;\n      &lt;rect x=\"0.293579482258522\" width=\"0.706420517741478\" height=\"1\" fill=\"#0070C0\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.706420517741478\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;animate attributeName=\"x\" from=\"1\" to=\"0.293579482258522\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;70.6% of crimes were commited by Males in Counties/Manukau&lt;/title&gt;\n      &lt;/rect&gt;\n    &lt;/svg&gt;\n  &lt;/svg&gt;\n  &lt;svg x=\"0\" y=\"500\" width=\"500\" height=\"50\"&gt;\n    &lt;text x=\"0\" y=\"20\" font-size=\"18\" font-family=\"sans-serif\" text-anchor=\"start\"&gt;Central&lt;/text&gt;\n    &lt;svg x=\"0\" y=\"25\" width=\"500\" height=\"25\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\"&gt;\n      &lt;rect width=\"0.302394487048855\" height=\"1\" fill=\"#E46C0A\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.302394487048855\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;30.2% of crimes were commited by Females in Central&lt;/title&gt;\n      &lt;/rect&gt;\n      &lt;rect x=\"0.302394487048855\" width=\"0.697605512951145\" height=\"1\" fill=\"#0070C0\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.697605512951145\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;animate attributeName=\"x\" from=\"1\" to=\"0.302394487048855\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;69.8% of crimes were commited by Males in Central&lt;/title&gt;\n      &lt;/rect&gt;\n    &lt;/svg&gt;\n  &lt;/svg&gt;\n  &lt;svg x=\"0\" y=\"550\" width=\"500\" height=\"50\"&gt;\n    &lt;text x=\"0\" y=\"20\" font-size=\"18\" font-family=\"sans-serif\" text-anchor=\"start\"&gt;Eastern&lt;/text&gt;\n    &lt;svg x=\"0\" y=\"25\" width=\"500\" height=\"25\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\"&gt;\n      &lt;rect width=\"0.313027363772573\" height=\"1\" fill=\"#E46C0A\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.313027363772573\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;31.3% of crimes were commited by Females in Eastern&lt;/title&gt;\n      &lt;/rect&gt;\n      &lt;rect x=\"0.313027363772573\" width=\"0.686972636227427\" height=\"1\" fill=\"#0070C0\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.686972636227427\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;animate attributeName=\"x\" from=\"1\" to=\"0.313027363772573\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;68.7% of crimes were commited by Males in Eastern&lt;/title&gt;\n      &lt;/rect&gt;\n    &lt;/svg&gt;\n  &lt;/svg&gt;\n&lt;/svg&gt;",
    "crumbs": [
      "Lab assignments",
      "Lab 9 - SVG graphics"
    ]
  },
  {
    "objectID": "labs/lab9_answer.html#challenge",
    "href": "labs/lab9_answer.html#challenge",
    "title": "Lab 9 - SVG graphics",
    "section": "Challenge",
    "text": "Challenge\nThe svg file produces by the function above is pasted at the end of the document. We use the following code to embed a selection menu, which determines which animation to run when the button is pressed:\n\n&lt;script type=\"text/javascript\"&gt;\nfunction runAnimSelected() {\n    const div = document.getElementById(\"c\");\n    const menu = document.getElementById(\"region\");\n    const region = menu.selectedOptions[0].value;\n    const allRects = div.querySelectorAll(\"svg svg rect\");\n    const rect1 = +region * 2 - 1\n    const rect2 = rect1 - 1;\n    const anim1 = allRects[rect1].querySelectorAll(\"animate\");\n    for (const anim of anim1) {\n        anim.beginElement();\n    }\n    const anim2 = allRects[rect2].querySelectorAll(\"animate\");\n    for (const anim of anim2) {\n        anim.beginElement();\n    }\n}\n&lt;/script&gt;\n&lt;select id=\"region\"&gt;\n  &lt;option value=\"1\"&gt;Auckland City&lt;/option&gt;\n  &lt;option value=\"2\"&gt;Tasman&lt;/option&gt;\n  &lt;option value=\"3\"&gt;Waitemata&lt;/option&gt;\n  &lt;option value=\"4\"&gt;Wellington&lt;/option&gt;\n  &lt;option value=\"5\"&gt;Southern&lt;/option&gt;\n  &lt;option value=\"6\"&gt;Bay Of Plenty&lt;/option&gt;\n  &lt;option value=\"7\"&gt;Canterbury&lt;/option&gt;\n  &lt;option value=\"8\"&gt;Northland&lt;/option&gt;\n  &lt;option value=\"9\"&gt;Waikato&lt;/option&gt;\n  &lt;option value=\"10\"&gt;Counties/Manukau&lt;/option&gt;\n  &lt;option value=\"11\"&gt;Central&lt;/option&gt;\n  &lt;option value=\"12\"&gt;Eastern&lt;/option&gt;\n&lt;/select&gt;\n&lt;button id=\"button\" onclick=\"runAnimSelected()\"&gt;Play&lt;/button&gt;\n\n\nNote that since we have nested &lt;svg&gt;s, we use the line const allRects = div.querySelectorAll(\"svg svg rect\"); to fetch all &lt;rect&gt; elements in the svg file.\n\nAfterwards we find the indices of the relevant &lt;rect&gt;s corresponding to the selection of region using const rect1 = +region * 2 - 1; const rect2 = rect1 - 1;. Then, we can fetch all the &lt;animation&gt; elements within a corresponding &lt;rect&gt; element with allRects[rectXX].querySelectorAll(\"animate\") and then run the elements with the beginElement method.\n\n\n\n\nAuckland City\n\n26.0% of crimes were commited by Females in Auckland City\n\n\n\n74.0% of crimes were commited by Males in Auckland City\n\n\n\n\n\nTasman\n\n26.7% of crimes were commited by Females in Tasman\n\n\n\n73.3% of crimes were commited by Males in Tasman\n\n\n\n\n\nWaitemata\n\n27.0% of crimes were commited by Females in Waitemata\n\n\n\n73.0% of crimes were commited by Males in Waitemata\n\n\n\n\n\nWellington\n\n27.1% of crimes were commited by Females in Wellington\n\n\n\n72.9% of crimes were commited by Males in Wellington\n\n\n\n\n\nSouthern\n\n27.1% of crimes were commited by Females in Southern\n\n\n\n72.9% of crimes were commited by Males in Southern\n\n\n\n\n\nBay Of Plenty\n\n29.1% of crimes were commited by Females in Bay Of Plenty\n\n\n\n70.9% of crimes were commited by Males in Bay Of Plenty\n\n\n\n\n\nCanterbury\n\n29.1% of crimes were commited by Females in Canterbury\n\n\n\n70.9% of crimes were commited by Males in Canterbury\n\n\n\n\n\nNorthland\n\n29.2% of crimes were commited by Females in Northland\n\n\n\n70.8% of crimes were commited by Males in Northland\n\n\n\n\n\nWaikato\n\n29.3% of crimes were commited by Females in Waikato\n\n\n\n70.7% of crimes were commited by Males in Waikato\n\n\n\n\n\nCounties/Manukau\n\n29.4% of crimes were commited by Females in Counties/Manukau\n\n\n\n70.6% of crimes were commited by Males in Counties/Manukau\n\n\n\n\n\nCentral\n\n30.2% of crimes were commited by Females in Central\n\n\n\n69.8% of crimes were commited by Males in Central\n\n\n\n\n\nEastern\n\n31.3% of crimes were commited by Females in Eastern\n\n\n\n68.7% of crimes were commited by Males in Eastern\n\n\n\n\n\n\n\n Auckland City Tasman Waitemata Wellington Southern Bay Of Plenty Canterbury Northland Waikato Counties/Manukau Central Eastern  Play\n\nOverall summary\nTo create a bar of ratios between men and women with a colored title, we write svg code using &lt;text&gt; and &lt;rect&gt; elements, making use of &lt;tspan&gt; to colors words in the title, and using viewBox and preserveAspectRatio attributes to easily use data values inside a coordinate system where we have specified a native scale.\nWe add hyperlinks using the href attribute inside an &lt;a&gt; element as parent to the &lt;text&gt; element. We add tooltips using … . Lastly, we add animation using an &lt;animation&gt; element as a child of the &lt;rect&gt; element we want to display as an animation. We can even embed a button using javascript that when pressed runs the animation.\nIn question 2, we do the same again, but here we stratify our data by police district, find values programmatically and create bars with labels inside sub-&lt;svg&gt; elements.\nIn question 3 we expand on the use of javascript by adding a selection menu of region to run the animation for.\n\n\nsvg file produced by R function\n\n\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"500\" height=\"600\"&gt;\n  &lt;svg x=\"0\" y=\"0\" width=\"500\" height=\"50\"&gt;\n    &lt;text x=\"0\" y=\"20\" font-size=\"18\" font-family=\"sans-serif\" text-anchor=\"start\"&gt;Auckland City&lt;/text&gt;\n    &lt;svg x=\"0\" y=\"25\" width=\"500\" height=\"25\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\"&gt;\n      &lt;rect width=\"0.260044660285139\" height=\"1\" fill=\"#E46C0A\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.260044660285139\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;26.0% of crimes were commited by Females in Auckland City&lt;/title&gt;\n      &lt;/rect&gt;\n      &lt;rect x=\"0.260044660285139\" width=\"0.739955339714861\" height=\"1\" fill=\"#0070C0\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.739955339714861\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;animate attributeName=\"x\" from=\"1\" to=\"0.260044660285139\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;74.0% of crimes were commited by Males in Auckland City&lt;/title&gt;\n      &lt;/rect&gt;\n    &lt;/svg&gt;\n  &lt;/svg&gt;\n  &lt;svg x=\"0\" y=\"50\" width=\"500\" height=\"50\"&gt;\n    &lt;text x=\"0\" y=\"20\" font-size=\"18\" font-family=\"sans-serif\" text-anchor=\"start\"&gt;Tasman&lt;/text&gt;\n    &lt;svg x=\"0\" y=\"25\" width=\"500\" height=\"25\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\"&gt;\n      &lt;rect width=\"0.267037948452273\" height=\"1\" fill=\"#E46C0A\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.267037948452273\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;26.7% of crimes were commited by Females in Tasman&lt;/title&gt;\n      &lt;/rect&gt;\n      &lt;rect x=\"0.267037948452273\" width=\"0.732962051547727\" height=\"1\" fill=\"#0070C0\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.732962051547727\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;animate attributeName=\"x\" from=\"1\" to=\"0.267037948452273\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;73.3% of crimes were commited by Males in Tasman&lt;/title&gt;\n      &lt;/rect&gt;\n    &lt;/svg&gt;\n  &lt;/svg&gt;\n  &lt;svg x=\"0\" y=\"100\" width=\"500\" height=\"50\"&gt;\n    &lt;text x=\"0\" y=\"20\" font-size=\"18\" font-family=\"sans-serif\" text-anchor=\"start\"&gt;Waitemata&lt;/text&gt;\n    &lt;svg x=\"0\" y=\"25\" width=\"500\" height=\"25\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\"&gt;\n      &lt;rect width=\"0.270004455519068\" height=\"1\" fill=\"#E46C0A\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.270004455519068\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;27.0% of crimes were commited by Females in Waitemata&lt;/title&gt;\n      &lt;/rect&gt;\n      &lt;rect x=\"0.270004455519068\" width=\"0.729995544480932\" height=\"1\" fill=\"#0070C0\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.729995544480932\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;animate attributeName=\"x\" from=\"1\" to=\"0.270004455519068\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;73.0% of crimes were commited by Males in Waitemata&lt;/title&gt;\n      &lt;/rect&gt;\n    &lt;/svg&gt;\n  &lt;/svg&gt;\n  &lt;svg x=\"0\" y=\"150\" width=\"500\" height=\"50\"&gt;\n    &lt;text x=\"0\" y=\"20\" font-size=\"18\" font-family=\"sans-serif\" text-anchor=\"start\"&gt;Wellington&lt;/text&gt;\n    &lt;svg x=\"0\" y=\"25\" width=\"500\" height=\"25\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\"&gt;\n      &lt;rect width=\"0.271174129064125\" height=\"1\" fill=\"#E46C0A\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.271174129064125\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;27.1% of crimes were commited by Females in Wellington&lt;/title&gt;\n      &lt;/rect&gt;\n      &lt;rect x=\"0.271174129064125\" width=\"0.728825870935875\" height=\"1\" fill=\"#0070C0\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.728825870935875\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;animate attributeName=\"x\" from=\"1\" to=\"0.271174129064125\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;72.9% of crimes were commited by Males in Wellington&lt;/title&gt;\n      &lt;/rect&gt;\n    &lt;/svg&gt;\n  &lt;/svg&gt;\n  &lt;svg x=\"0\" y=\"200\" width=\"500\" height=\"50\"&gt;\n    &lt;text x=\"0\" y=\"20\" font-size=\"18\" font-family=\"sans-serif\" text-anchor=\"start\"&gt;Southern&lt;/text&gt;\n    &lt;svg x=\"0\" y=\"25\" width=\"500\" height=\"25\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\"&gt;\n      &lt;rect width=\"0.271348261076703\" height=\"1\" fill=\"#E46C0A\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.271348261076703\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;27.1% of crimes were commited by Females in Southern&lt;/title&gt;\n      &lt;/rect&gt;\n      &lt;rect x=\"0.271348261076703\" width=\"0.728651738923297\" height=\"1\" fill=\"#0070C0\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.728651738923297\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;animate attributeName=\"x\" from=\"1\" to=\"0.271348261076703\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;72.9% of crimes were commited by Males in Southern&lt;/title&gt;\n      &lt;/rect&gt;\n    &lt;/svg&gt;\n  &lt;/svg&gt;\n  &lt;svg x=\"0\" y=\"250\" width=\"500\" height=\"50\"&gt;\n    &lt;text x=\"0\" y=\"20\" font-size=\"18\" font-family=\"sans-serif\" text-anchor=\"start\"&gt;Bay Of Plenty&lt;/text&gt;\n    &lt;svg x=\"0\" y=\"25\" width=\"500\" height=\"25\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\"&gt;\n      &lt;rect width=\"0.290506150148452\" height=\"1\" fill=\"#E46C0A\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.290506150148452\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;29.1% of crimes were commited by Females in Bay Of Plenty&lt;/title&gt;\n      &lt;/rect&gt;\n      &lt;rect x=\"0.290506150148452\" width=\"0.709493849851548\" height=\"1\" fill=\"#0070C0\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.709493849851548\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;animate attributeName=\"x\" from=\"1\" to=\"0.290506150148452\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;70.9% of crimes were commited by Males in Bay Of Plenty&lt;/title&gt;\n      &lt;/rect&gt;\n    &lt;/svg&gt;\n  &lt;/svg&gt;\n  &lt;svg x=\"0\" y=\"300\" width=\"500\" height=\"50\"&gt;\n    &lt;text x=\"0\" y=\"20\" font-size=\"18\" font-family=\"sans-serif\" text-anchor=\"start\"&gt;Canterbury&lt;/text&gt;\n    &lt;svg x=\"0\" y=\"25\" width=\"500\" height=\"25\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\"&gt;\n      &lt;rect width=\"0.290930312598201\" height=\"1\" fill=\"#E46C0A\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.290930312598201\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;29.1% of crimes were commited by Females in Canterbury&lt;/title&gt;\n      &lt;/rect&gt;\n      &lt;rect x=\"0.290930312598201\" width=\"0.709069687401799\" height=\"1\" fill=\"#0070C0\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.709069687401799\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;animate attributeName=\"x\" from=\"1\" to=\"0.290930312598201\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;70.9% of crimes were commited by Males in Canterbury&lt;/title&gt;\n      &lt;/rect&gt;\n    &lt;/svg&gt;\n  &lt;/svg&gt;\n  &lt;svg x=\"0\" y=\"350\" width=\"500\" height=\"50\"&gt;\n    &lt;text x=\"0\" y=\"20\" font-size=\"18\" font-family=\"sans-serif\" text-anchor=\"start\"&gt;Northland&lt;/text&gt;\n    &lt;svg x=\"0\" y=\"25\" width=\"500\" height=\"25\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\"&gt;\n      &lt;rect width=\"0.291545880988774\" height=\"1\" fill=\"#E46C0A\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.291545880988774\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;29.2% of crimes were commited by Females in Northland&lt;/title&gt;\n      &lt;/rect&gt;\n      &lt;rect x=\"0.291545880988774\" width=\"0.708454119011226\" height=\"1\" fill=\"#0070C0\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.708454119011226\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;animate attributeName=\"x\" from=\"1\" to=\"0.291545880988774\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;70.8% of crimes were commited by Males in Northland&lt;/title&gt;\n      &lt;/rect&gt;\n    &lt;/svg&gt;\n  &lt;/svg&gt;\n  &lt;svg x=\"0\" y=\"400\" width=\"500\" height=\"50\"&gt;\n    &lt;text x=\"0\" y=\"20\" font-size=\"18\" font-family=\"sans-serif\" text-anchor=\"start\"&gt;Waikato&lt;/text&gt;\n    &lt;svg x=\"0\" y=\"25\" width=\"500\" height=\"25\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\"&gt;\n      &lt;rect width=\"0.292708784399218\" height=\"1\" fill=\"#E46C0A\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.292708784399218\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;29.3% of crimes were commited by Females in Waikato&lt;/title&gt;\n      &lt;/rect&gt;\n      &lt;rect x=\"0.292708784399218\" width=\"0.707291215600782\" height=\"1\" fill=\"#0070C0\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.707291215600782\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;animate attributeName=\"x\" from=\"1\" to=\"0.292708784399218\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;70.7% of crimes were commited by Males in Waikato&lt;/title&gt;\n      &lt;/rect&gt;\n    &lt;/svg&gt;\n  &lt;/svg&gt;\n  &lt;svg x=\"0\" y=\"450\" width=\"500\" height=\"50\"&gt;\n    &lt;text x=\"0\" y=\"20\" font-size=\"18\" font-family=\"sans-serif\" text-anchor=\"start\"&gt;Counties/Manukau&lt;/text&gt;\n    &lt;svg x=\"0\" y=\"25\" width=\"500\" height=\"25\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\"&gt;\n      &lt;rect width=\"0.293579482258522\" height=\"1\" fill=\"#E46C0A\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.293579482258522\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;29.4% of crimes were commited by Females in Counties/Manukau&lt;/title&gt;\n      &lt;/rect&gt;\n      &lt;rect x=\"0.293579482258522\" width=\"0.706420517741478\" height=\"1\" fill=\"#0070C0\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.706420517741478\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;animate attributeName=\"x\" from=\"1\" to=\"0.293579482258522\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;70.6% of crimes were commited by Males in Counties/Manukau&lt;/title&gt;\n      &lt;/rect&gt;\n    &lt;/svg&gt;\n  &lt;/svg&gt;\n  &lt;svg x=\"0\" y=\"500\" width=\"500\" height=\"50\"&gt;\n    &lt;text x=\"0\" y=\"20\" font-size=\"18\" font-family=\"sans-serif\" text-anchor=\"start\"&gt;Central&lt;/text&gt;\n    &lt;svg x=\"0\" y=\"25\" width=\"500\" height=\"25\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\"&gt;\n      &lt;rect width=\"0.302394487048855\" height=\"1\" fill=\"#E46C0A\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.302394487048855\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;30.2% of crimes were commited by Females in Central&lt;/title&gt;\n      &lt;/rect&gt;\n      &lt;rect x=\"0.302394487048855\" width=\"0.697605512951145\" height=\"1\" fill=\"#0070C0\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.697605512951145\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;animate attributeName=\"x\" from=\"1\" to=\"0.302394487048855\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;69.8% of crimes were commited by Males in Central&lt;/title&gt;\n      &lt;/rect&gt;\n    &lt;/svg&gt;\n  &lt;/svg&gt;\n  &lt;svg x=\"0\" y=\"550\" width=\"500\" height=\"50\"&gt;\n    &lt;text x=\"0\" y=\"20\" font-size=\"18\" font-family=\"sans-serif\" text-anchor=\"start\"&gt;Eastern&lt;/text&gt;\n    &lt;svg x=\"0\" y=\"25\" width=\"500\" height=\"25\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\"&gt;\n      &lt;rect width=\"0.313027363772573\" height=\"1\" fill=\"#E46C0A\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.313027363772573\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;31.3% of crimes were commited by Females in Eastern&lt;/title&gt;\n      &lt;/rect&gt;\n      &lt;rect x=\"0.313027363772573\" width=\"0.686972636227427\" height=\"1\" fill=\"#0070C0\"&gt;\n        &lt;animate attributeName=\"width\" from=\"0\" to=\"0.686972636227427\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;animate attributeName=\"x\" from=\"1\" to=\"0.313027363772573\" dur=\"1s\" fill=\"freeze\"/&gt;\n        &lt;title&gt;68.7% of crimes were commited by Males in Eastern&lt;/title&gt;\n      &lt;/rect&gt;\n    &lt;/svg&gt;\n  &lt;/svg&gt;\n&lt;/svg&gt;",
    "crumbs": [
      "Lab assignments",
      "Lab 9 - SVG graphics"
    ]
  },
  {
    "objectID": "labs/lab1_answer.html",
    "href": "labs/lab1_answer.html",
    "title": "Lab1 - Grammar of Graphics",
    "section": "",
    "text": "See the assignment description and model answer (for the source .Rmd model answer, just change “html” to “Rmd” in the link).\nLoading packages.\nlibrary(ggplot2)\nlibrary(tidyverse)",
    "crumbs": [
      "Lab assignments",
      "Lab1 - Grammar of Graphics"
    ]
  },
  {
    "objectID": "labs/lab1_answer.html#question-1",
    "href": "labs/lab1_answer.html#question-1",
    "title": "Lab1 - Grammar of Graphics",
    "section": "Question 1",
    "text": "Question 1\nWe create the bar plot below by using the geom_bar geom function to create a summary statistic of counts of the variable Age.Lower (geom_bar uses the stat stat_count behind the scenes to create the summary), which we use as out x in our aesthetic mapping for the plot. Note that we set the just argument to 0 to ensure a left-alignment of the bars (default is 0.5, which centers the bars).\n\ncrime %&gt;% \n  ggplot(aes(x = Age.Lower)) +\n  geom_bar(just = 0)\n\n\n\n\n\n\n\n\nThis plot has substantive issues in answering our questions of trend over time as well as differences between males and females as information about time and gender is not in the plot. However, the bar plot does show that the highest number of incidents across all values of a lower bound of a 5-year age band of the offender, is among incidents with a lower age band of 15 years. There are also quite a few incidents with a lower bound of 10 years, which seems to match the frequency of incidents corresponding to a lower limit of 50 years. Thus, youth offending is occurring frequently, but by accumulating the adult incidents, we see that adult offending is in general more frequent than youth offending.",
    "crumbs": [
      "Lab assignments",
      "Lab1 - Grammar of Graphics"
    ]
  },
  {
    "objectID": "labs/lab1_answer.html#question-2",
    "href": "labs/lab1_answer.html#question-2",
    "title": "Lab1 - Grammar of Graphics",
    "section": "Question 2",
    "text": "Question 2\nDoing the summary statistic of count across the different lower limits ourselves in data and then plotting, we use geom geom_col, which utilises the stat stat_identity with aesthetic mapping of x being Var1 (our lower bound of ages) and y being Freq (our frequency of incidents for the corresponding lower bound of age).\n\ncrimeTab &lt;- as.data.frame(table(crime$Age.Lower))\ncrimeTab %&gt;% \n  ggplot(aes(x = Var1, y = Freq)) +\n  geom_col(just = 0)",
    "crumbs": [
      "Lab assignments",
      "Lab1 - Grammar of Graphics"
    ]
  },
  {
    "objectID": "labs/lab1_answer.html#question-3",
    "href": "labs/lab1_answer.html#question-3",
    "title": "Lab1 - Grammar of Graphics",
    "section": "Question 3",
    "text": "Question 3\nWe create the plot as we did in question 1 with geom_bar geom function (which uses stat_count as stat) with aesthetic mapping of Age.Lower as our x. However, in this case, we add aesthetic mappings of fill = SEX, which fills the bars with colors based on the observations’ value of SEX in the data set. The default value of position in geom_bar is \"stack\", so by the default behavior of the geom, we produce this stacked plot.\n\ncrime %&gt;% \n  ggplot(aes(x = Age.Lower, fill = SEX)) +\n  geom_bar(just = 0)\n\n\n\n\n\n\n\n\nThis new plot does not provide new information in regards to our question of youth vs. adult offending, compared to the plot in question 1, so we could say all the same to that question. The time trend question is still not answerable by this plot due to the substantive issue of missing information about time.\nHowever, this plot does help us get an idea of differences between female and male offenders. The plot shows immediately that there are more male offenders than female offenders. It looks like the ratio is quite similar across different lower bounds of age, though it’s hard to judge whether this is exactly or just approximately correct from this plot.",
    "crumbs": [
      "Lab assignments",
      "Lab1 - Grammar of Graphics"
    ]
  },
  {
    "objectID": "labs/lab1_answer.html#question-4",
    "href": "labs/lab1_answer.html#question-4",
    "title": "Lab1 - Grammar of Graphics",
    "section": "Question 4",
    "text": "Question 4\n\ncrime %&gt;% \n  ggplot(aes(x = Age.Lower, fill = SEX)) +\n  geom_bar(just = 0, position = \"dodge\")\n\n\n\n\n\n\n\ncrime %&gt;% \n  ggplot(aes(x = Age.Lower, fill = SEX)) +\n  geom_bar(just = 0, position = \"identity\")\n\n\n\n\n\n\n\ncrime %&gt;% \n  ggplot(aes(x = Age.Lower, fill = SEX)) +\n  geom_bar(just = 0, position = \"fill\")\n\n\n\n\n\n\n\n\nThe plot with position = \"fill\" cannot help us answer the question about youth vs. adult offending (or the time trend). However, it does a great job at trying to answer the question about differences between male and female offending, as it is essentially plotting the ratio of male and female offenders as its response on the y-axis. For the plot in question 3, I said it looked like the ratio was approximately the same across different lower bounds of age. This plot shows more clearly that the ratios are quite similar, but there are subtle differences. The biggest difference is seen from the very lowest ages, where a higher proportion of males is present, which takes a big drop at lower bound of age 10.\nThe plot with position = \"dodge\" shows incidence rates individually for each combination of gender and lower bound of age, compared to the position = \"stack\", which showed cumulative incidence rates within age groups. In my opinion, position = \"stack\" does a better job of answering the question of youth vs. adult offending by providing cumulative rates while still giving an idea of gender differences, and the position = \"fill\" plot does a better job of answering the question about gender differences.\nThe plot with position = \"identity\" does not provide any position adjustment, thus positioning the bar for females behind the bar for males, thus making the plot not provide any information about gender differences, though that was the whole point of coloring the bars by gender. Biggest possible substantive issue in answering the question of gender differences; no information is available.",
    "crumbs": [
      "Lab assignments",
      "Lab1 - Grammar of Graphics"
    ]
  },
  {
    "objectID": "labs/lab1_answer.html#question-5",
    "href": "labs/lab1_answer.html#question-5",
    "title": "Lab1 - Grammar of Graphics",
    "section": "Question 5",
    "text": "Question 5\nTo create a line plot, we can use the geom_line geom. We use the stat_identity stat to display the data as is, as we have already ourselves created the summary statistic of frequency across time that we are interested in. Thus, we just use aesthetic mappings of x = Date and y = Freq to plot the values in data.\n\ncrimeTrend &lt;- as.data.frame(table(crime$Date))\ncrimeTrend$Date &lt;- as.Date(crimeTrend$Var1)\n\ncrimeTrend %&gt;% \n  ggplot(aes(x = Date, y = Freq)) +\n  geom_line()\n\n\n\n\n\n\n\n\nThis plot has substantive issues in answering the questions we previously discussed, as it does not contain information on age or gender. However, it can be used to answer the question about time trend. The plot shows that there has been an overall downwards trend in incidence rates of crime from 2014 to 2022 with natural variability in data. However, we do notice some peaks that seem to have larger variance than other places in data during year 2016 and at the start of 2020. Furthermore, the downwards trend seems to reverse at the start of 2022, with incidence rates that seem to start increasing.",
    "crumbs": [
      "Lab assignments",
      "Lab1 - Grammar of Graphics"
    ]
  },
  {
    "objectID": "labs/lab1_answer.html#question-6",
    "href": "labs/lab1_answer.html#question-6",
    "title": "Lab1 - Grammar of Graphics",
    "section": "Question 6",
    "text": "Question 6\nWe use the geom_line geom with stat_identity stat and with aesthetic mappings of x = Date, y = Freq, color = Var2 and linewidth = 1.4. Note however that we use the aesthetic linewidth outside aes() because it is not associated with any variable but rather we just want to change it statically for all lines in the plot. If we wished to change the linewidth for different values of SEX, we could put it inside aes(). Note also that we change the default colors assigned to the different gender by using scale_color_manual to tell exactly what colors we would like for the different values.\n\ncrimeTrendSex &lt;- as.data.frame(table(crime$Date, crime$SEX))\ncrimeTrendSex$Date &lt;- as.Date(crimeTrendSex$Var1)\n\ncrimeTrendSex %&gt;% \n  ggplot(aes(x = Date, y = Freq, color = Var2)) +\n  geom_line(linewidth = 1.4) +\n  scale_color_manual(values = c(Female = \"pink\", Male = 4))\n\n\n\n\n\n\n\n\nThe plot shows the exact same as we commented in the previous question about the time trend. Overall a downward trend is seen with some larger peaks in a couple location, and a sudden rise in incidence is seen from the start of 2022.\nThis plot, however, can also help answer the question about gender differences, as we can see from the plot that there are quite a few more male offenders than female offenders. It does a good job if trying to answer a questions specific to absolute incidence rates for males and females across years. If seeking to answer a question about the ratio of female and male offenders, a new response variable consisting of this ratio and plotting against time would be benefitial.",
    "crumbs": [
      "Lab assignments",
      "Lab1 - Grammar of Graphics"
    ]
  },
  {
    "objectID": "labs/lab1_answer.html#question-7",
    "href": "labs/lab1_answer.html#question-7",
    "title": "Lab1 - Grammar of Graphics",
    "section": "Question 7",
    "text": "Question 7\nWe use the geom_line geom with stat_identity stat and with aesthetic mappings of x = Date, y = Freq, group = Age, color = Age and linewidth = 1. The use of group = Age is to ensure that only points inside each group are connected to form a line. Without this aesthetic mapping, the plot would be a complete mess (more than it is…)\n\ncrimeTrendAge &lt;- as.data.frame(table(crime$Date, crime$Age.Lower))\ncrimeTrendAge$Date &lt;- as.Date(crimeTrendAge$Var1)\ncrimeTrendAge$Age &lt;- as.numeric(as.character(crimeTrendAge$Var2))\n\ncrimeTrendAge %&gt;% \n  ggplot(aes(x = Date, y = Freq, group = Age, color = Age)) +\n  geom_line(linewidth = 1)\n\n\n\n\n\n\n\n\nIn my opinion, this plot does a bad job of trying to answer any of the questions. It tries to help answer the question about trend over time while trying to show differences between youth and adult offending. However, the plot is trying too much, leading the reader unable to derive any meaning from it.\nIt’s possible to sense a form of downward trend over time, but it’s hard to see and is much better answered using one of the previous plots. In regards to youth vs. adult offending, the reader is unable to identify the age corresponding to a color due to the small difference in colors between many groups, possibly creating perceptual issues as a color might seem darker or lighter than it actually is if surrounded by a color on the “opposite side”.",
    "crumbs": [
      "Lab assignments",
      "Lab1 - Grammar of Graphics"
    ]
  },
  {
    "objectID": "labs/lab1_answer.html#question-8",
    "href": "labs/lab1_answer.html#question-8",
    "title": "Lab1 - Grammar of Graphics",
    "section": "Question 8",
    "text": "Question 8\nThe geom is again geom_line with stat stat_identityand x = Date, y = Freq and linewidth = 1 as aesthetic mappings and facet by values of Age.\n\ncrimeTrendAge %&gt;% \n  ggplot(aes(x = Date, y = Freq)) +\n  geom_line(linewidth = 1) +\n  facet_wrap(~ Age)\n\n\n\n\n\n\n\n\nThis plot helps us answer a question of trends over time of youth vs. adult offending. So the plot does not help answering the “overall/general/individual” questions posed at the start but rather helps answer this “combined question”. On previous plots we saw a downward trend across time, and we saw the highest frequency of incidents for the age group with lower bound of 15 years.\nThis plot shows that the downward trend is actually more dramatic for this specific age group that showed the highest incidence. Other age groups also show a downward trend, but much more slightly, and it thus looks like the downward trend overall is dominated by the downward trend of younger groups.",
    "crumbs": [
      "Lab assignments",
      "Lab1 - Grammar of Graphics"
    ]
  },
  {
    "objectID": "labs/lab1_answer.html#question-9",
    "href": "labs/lab1_answer.html#question-9",
    "title": "Lab1 - Grammar of Graphics",
    "section": "Question 9",
    "text": "Question 9\nThis plot is created as in question 1 but with facets on the new Year variable. That is, we use geom_bar as the geom (with stat_count as the stat) and aesthetic mapping of x = Age.Lower.\n\ncrime$Year &lt;- as.POSIXlt(crime$Date)$year + 1900\n\ncrime %&gt;% \n  ggplot(aes(x = Age.Lower)) +\n  geom_bar(just = 0) +\n  facet_wrap(~ Year)\n\n\n\n\n\n\n\n\nThe plot helps answer the same question as the previous question, i.e. trend over time of offending across age groups. The plot supports our explanation from above, seeing that youth offending is on a more dramatic downward trend compared to the older age groups. This is the main strength of the plot. We can also see that the overall frequency is decreasing, but other plots have been better at showing that.",
    "crumbs": [
      "Lab assignments",
      "Lab1 - Grammar of Graphics"
    ]
  },
  {
    "objectID": "labs/lab1_answer.html#question-10",
    "href": "labs/lab1_answer.html#question-10",
    "title": "Lab1 - Grammar of Graphics",
    "section": "Question 10",
    "text": "Question 10\nI notice this plot does a reordering of the levels of the factor with divisions, ensures line break in the legend, removes text, ticks and titles from the x- and y-axis to increase the data-to-ink ratio and manual choosing of colors to make neighboring groups more distinct than the default color choice.\n\ncrimeTrendDivision &lt;- as.data.frame(table(crime$Age.Lower, crime$ANZSOC.Division))\ncrimeTrendDivision$Age &lt;- crimeTrendDivision$Var1\ncrimeTrendDivision$Division &lt;- stringr::str_wrap(crimeTrendDivision$Var2, 30)\n\nord_div &lt;- crimeTrendDivision %&gt;% \n  dplyr::filter(Age == 15) %&gt;% \n  dplyr::arrange(desc(Freq)) %&gt;% \n  dplyr::pull(Division) %&gt;% \n  as.character()\ncrimeTrendDivision$ANZSOC.Division &lt;- factor(crimeTrendDivision$Division,\n                                              levels = ord_div)\ncolors &lt;- rep(as.character(paletteer::paletteer_d(\"ggthemes::colorblind\")), 2) %&gt;% \n  setNames(levels(crimeTrendDivision$ANZSOC.Division))\n\ncrimeTrendDivision %&gt;% \n  ggplot(aes(x = ANZSOC.Division, y = Freq,\n             group = ANZSOC.Division, fill = ANZSOC.Division)) +\n  geom_col(just = 0, position = \"dodge\") +\n  facet_wrap(~ Age) +\n  scale_fill_manual(values = colors) +\n  theme(axis.text = element_blank(),\n        axis.ticks = element_blank(),\n        axis.title = element_blank(),\n        legend.key.width = unit(0.3, \"cm\"),\n        legend.key.height = unit(0.9, \"cm\"),\n        legend.key.spacing.y = unit(0.1, \"cm\"),\n        legend.text = element_text(size = 8))",
    "crumbs": [
      "Lab assignments",
      "Lab1 - Grammar of Graphics"
    ]
  },
  {
    "objectID": "labs/lab2_answer.html",
    "href": "labs/lab2_answer.html",
    "title": "Lab2 - The grid Graphics System",
    "section": "",
    "text": "See the assignment description and model answer (for the source .Rmd model answer, just change “html” to “Rmd” in the link).\nLoading packages.\nlibrary(ggplot2)\nlibrary(grid)\nlibrary(tidyverse)",
    "crumbs": [
      "Lab assignments",
      "Lab2 - The `grid` Graphics System"
    ]
  },
  {
    "objectID": "labs/lab2_answer.html#question-1",
    "href": "labs/lab2_answer.html#question-1",
    "title": "Lab2 - The grid Graphics System",
    "section": "Question 1",
    "text": "Question 1\n\nyouthSex &lt;- table(youth$SEX)/nrow(youth)\nfemale &lt;- \"#E46C0A\"\nmale &lt;- \"#0070C0\"\n\nWe solve this task by creating a function for generating a grobTree using information from data. The function is made to help produce plots in questions 3, 5 and 8 as well (we need a grob(Tree) for the implementation in the challenge question 8).\n\nyouthSexData &lt;- as.data.frame(youthSex) %&gt;% \n  setNames(c(\"sex\", \"rate\"))\n\nbarRatio_grobTree &lt;- function(\n    data = youthSexData,\n    bar_height = unit(1, \"cm\"),\n    cols = list(female = female, male = male)) {\n  data &lt;- data %&gt;% \n    dplyr::mutate(\n      label = c(paste0(sex, \" \", round(rate * 100), \"%\"))\n    )\n  femaleData &lt;- data %&gt;% \n    dplyr::filter(sex == \"Female\")\n  maleData &lt;- data %&gt;% \n    dplyr::filter(sex == \"Male\")\n  \n  fbar &lt;- rectGrob(x = 0,\n                   hjust = 0,\n                   width = unit(femaleData$rate, \"npc\"),\n                   height = bar_height,\n                   gp = gpar(col = cols$female, fill = cols$female))\n  mbar &lt;- rectGrob(x = 1,\n                   hjust = 1,\n                   width = unit(maleData$rate, \"npc\"),\n                   height = bar_height,\n                   gp = gpar(col = cols$male, fill = cols$male))\n  \n  ftext &lt;- textGrob(x = unit(2, \"mm\"),\n                    label = femaleData$label,\n                    hjust = 0,\n                    gp = gpar(fontface = \"bold\"))\n  mtext &lt;- textGrob(x = unit(1, \"npc\") - unit(2, \"mm\"),\n                    label = maleData$label,\n                    hjust = 1,\n                    gp = gpar(fontface = \"bold\"))\n  \n  grobTree(fbar, mbar, ftext, mtext)\n}\n\nProduce the plot using the function.\n\ngrid.draw(barRatio_grobTree())",
    "crumbs": [
      "Lab assignments",
      "Lab2 - The `grid` Graphics System"
    ]
  },
  {
    "objectID": "labs/lab2_answer.html#question-2",
    "href": "labs/lab2_answer.html#question-2",
    "title": "Lab2 - The grid Graphics System",
    "section": "Question 2",
    "text": "Question 2\nTo solve this task, we just use the barRatio_grobTree function inside a viewport of appropriate size.\n\npushViewport(viewport(width = unit(1, \"npc\") - unit(2, \"cm\")))\ngrid.draw(barRatio_grobTree())\nupViewport()",
    "crumbs": [
      "Lab assignments",
      "Lab2 - The `grid` Graphics System"
    ]
  },
  {
    "objectID": "labs/lab2_answer.html#question-3",
    "href": "labs/lab2_answer.html#question-3",
    "title": "Lab2 - The grid Graphics System",
    "section": "Question 3",
    "text": "Question 3\nWe define a data set similar to in question 1 but in long format with a pair of rows for females and males for each year. We then create the plot using the barRatio_grobTree function defined in question 1 within appropriate viewports.\n\nyouthSexYear &lt;- t(apply(table(substr(youth$Date, 1, 4), youth$SEX), 1, \n                        function(x) x/sum(x)))\n\n## Creating data in long format\nyouthSexYearData &lt;- as.data.frame(t(youthSexYear)) %&gt;%\n  dplyr::mutate(sex = row.names(.)) %&gt;% \n  tidyr::pivot_longer(cols = num_range(prefix = \"\", range = 2014:2022),\n                      names_to = \"year\",\n                      values_to = \"rate\") %&gt;% \n  dplyr::arrange(desc(year)) %&gt;%\n  dplyr::mutate(id_year = dplyr::cur_group_id(), .by = year)\n\nplot9bars &lt;- function(data = youthSexYearData) {\n  id_years &lt;- unique(data$id_year)\n  num_years &lt;- length(id_years)\n  \n  grid.newpage()\n  pushViewport(\n    viewport(\n      layout = grid.layout(nrow = num_years),\n      width = unit(1, \"npc\") - unit(1, \"in\") - unit(1, \"cm\"),\n      x = unit(1, \"in\"),\n      height = unit(1, \"npc\") - unit(2, \"cm\"),\n      y = unit(1, \"cm\"),\n      just = c(\"left\", \"bottom\")\n    )\n  )\n  \n  for (i in id_years) {\n    data_1year &lt;- data %&gt;%\n      dplyr::filter(id_year == i)\n    bar &lt;- barRatio_grobTree(\n      data = data_1year,\n      bar_height = convertHeight(unit(.08, \"npc\"), \"inches\")\n    )\n    pushViewport(\n      viewport(\n        layout.pos.col=1, layout.pos.row=i\n      )\n    )\n    grid.draw(bar)\n    upViewport()\n  }\n  popViewport(0)\n  \n  pushViewport(\n    viewport(\n      layout = grid.layout(nrow = num_years),\n      width = unit(1, \"in\"),\n      x = unit(1, \"in\") - unit(2, \"mm\"),\n      height = unit(1, \"npc\") - unit(2, \"cm\"),\n      y = unit(1, \"cm\"),\n      just = c(\"right\", \"bottom\")\n    )\n  )\n  for (i in id_years) {\n    year &lt;- data %&gt;%\n      dplyr::filter(id_year == i) %&gt;% \n      dplyr::pull(year) %&gt;% \n      unique()\n    pushViewport(viewport(layout.pos.col=1, layout.pos.row=i))\n    grid.text(year, x = 1, hjust = 1)\n    upViewport()\n  }\n  popViewport(0)\n}\n\nGenerate plots with default and specified fig.height/width respectively, using the new plot9bars function.\n\nplot9bars()\n\n\n\n\n\n\n\n\n\nplot9bars()\n\n\n\n\n\n\n\n\nThis plot gives us information about our first question of interest about the ratio of female and male offenders across time. The bars show that the proportion of female offenders has been monotonically decreasing in the years 2018-2022, where the proportion of females went from 29% of offenders to 24%.",
    "crumbs": [
      "Lab assignments",
      "Lab2 - The `grid` Graphics System"
    ]
  },
  {
    "objectID": "labs/lab2_answer.html#question-4",
    "href": "labs/lab2_answer.html#question-4",
    "title": "Lab2 - The grid Graphics System",
    "section": "Question 4",
    "text": "Question 4\nDefine the data given in the assignment.\n\nyouth$Abbrev &lt;- \n  gsub(\",\", \"\",\n       unlist(lapply(strsplit(as.character(youth$ANZSOC.Division), \" \"),\n                     function(x) x[1])))\nyouthTrendType &lt;- as.data.frame(table(youth$Date, youth$Abbrev))\nyouthTrendType$Date &lt;- as.Date(youthTrendType$Var1)\n## Order crime types\ntypes &lt;- table(youth$Abbrev)\nnewlevels &lt;- names(types)[order(types, decreasing=TRUE)]\nyouthTrendType$Type &lt;- factor(youthTrendType$Var2, levels=newlevels)\n\nabb &lt;- unique(youth[c(\"Abbrev\", \"ANZSOC.Division\")])\n\nWe create the facetted line plot using ggplot2.\n\nfacet_plot &lt;- function(data = youthTrendType, scales = \"fixed\", ...) {\n  data %&gt;% \n    ggplot(aes(x = Date, y = Freq, ...)) +\n    geom_line(show.legend = FALSE) +\n    facet_wrap(~ Type, scales = scales)\n}\nfacet_plot()\n\n\n\n\n\n\n\n\nThis plot tells nothing about gender differences in crime offence. However, the plot shows time trends for different crime types. It seems that for almost all types of crime, there is a downward trend in the frequency of offences. The only type of crime that is clearly not on a downward trend is the “Dangerous” (Dangerous or Negligent Acts Endangering Persons) crimes.\nHowever, this plot does have an issue since the facet_wrap uses scales = \"fixed\", meaning that the y-axis scale is the same for all crime types. This makes it hard to see what is happening with the crime types that are not as frequent as fx. theft. To investigate further, we could explore the use of scales = \"free\".",
    "crumbs": [
      "Lab assignments",
      "Lab2 - The `grid` Graphics System"
    ]
  },
  {
    "objectID": "labs/lab2_answer.html#question-5",
    "href": "labs/lab2_answer.html#question-5",
    "title": "Lab2 - The grid Graphics System",
    "section": "Question 5",
    "text": "Question 5\nTo solve this exercise, we can simply create viewports to plot inside. We can assign the ggplot object as a value in our environment and then plot it inside the viewport with newpage = FALSE. Then, we can plot the bar with ratios on top. A viewport is not strictly necessary here, but makes the function I created earlier work with default behavior.\n\nfac &lt;- facet_plot()\npushViewport(\n  viewport(\n    height = unit(1, \"npc\") - unit(1, \"cm\"),\n    y = 0,\n    just = c(\"centre\", \"bottom\")\n  )\n)\nplot(fac, newpage = FALSE)\nupViewport()\n\npushViewport(\n  viewport(\n    height = unit(1, \"cm\"),\n    y = unit(1, \"npc\"),\n    just = c(\"centre\", \"top\")\n  )\n)\ngrid.draw(barRatio_grobTree())\nupViewport()",
    "crumbs": [
      "Lab assignments",
      "Lab2 - The `grid` Graphics System"
    ]
  },
  {
    "objectID": "labs/lab2_answer.html#question-6",
    "href": "labs/lab2_answer.html#question-6",
    "title": "Lab2 - The grid Graphics System",
    "section": "Question 6",
    "text": "Question 6\nWe use the grid package to define a grob (graphical object) using the xGrob functions. In this case, we create a transparent blue box with rectGrob and then add it to each facet of the ggplot using the grid_panel function from gggrid, which adds the grob to each facet.\n\ntransBlueBox &lt;- rectGrob(\n  width = unit(.15, \"npc\"),\n  x = 1,\n  hjust = 1,\n  gp = gpar(col = male, fill = male, alpha = 0.35))\n\nfacet_plot() +\n  gggrid::grid_panel(transBlueBox)",
    "crumbs": [
      "Lab assignments",
      "Lab2 - The `grid` Graphics System"
    ]
  },
  {
    "objectID": "labs/lab2_answer.html#question-7",
    "href": "labs/lab2_answer.html#question-7",
    "title": "Lab2 - The grid Graphics System",
    "section": "Question 7",
    "text": "Question 7\nTo solve this task, we can make use of the fact that gggrid::grid_panel can take a function producing a grob rather than a static grob as input. In this case, since we want to color the part of the graph from 2022, we create a data set consisting of only values from this period. We then create a function which creates a rectGrob as a function of input data, using ranges to define the size of the rectangle. We then input this function add_bar in gggrid::grid_panel, which uses the function within each panel. Thus, within each panel, data will consist of observation only from year 2022 and that type of crime. We can then simply find the ranges of the x- and y- values to define the area of the rectangle.\n\nyouthTrendType2022 &lt;- youthTrendType %&gt;% \n  dplyr::filter(lubridate::year(Date) &gt;= 2022)\n\nadd_bar &lt;- function(data, coords) {\n  max_y &lt;- max(coords$y)\n  min_y &lt;- min(coords$y)\n  \n  max_x &lt;- max(coords$x)\n  min_x &lt;- min(coords$x)\n  diff_x &lt;- max_x - min_x\n  \n  rectGrob(\n    x = min_x,\n    width = diff_x,\n    hjust = 0,\n    y = min(coords$y),\n    height = max_y - min_y,\n    vjust = 0,\n    gp = gpar(col = male, fill = male, alpha = .35)\n  )\n}\n\nfacet_plot() +\n  gggrid::grid_panel(add_bar,\n                     data = youthTrendType2022)\n\n\n\n\n\n\n\n\nThis plot, like in question 4 and 6 does not help us answer questions regarding gender differences in offending. In question 4 we discussed how the plot can be used to identify a downward trend over time for most crime types except for “Dangerous” (Dangerous or Negligent Acts Endangering Persons) crimes.\nThis plot however highlights data from year 2022, which makes us notice an upward trend in data from this year alone for all crime types. This is something that was not easily “catchable” in the plot from question 4. So this plot does help us understand what is happening from year 2022 and onward.\nThe plot still suffers from the fact that not-so-frequent crime types are hard to see, so below I have made the same plot but with scales = \"free_y\" to better be able to investigate the low-frequency crime types.\n\nfacet_plot(scales = \"free_y\") +\n  gggrid::grid_panel(add_bar,\n                     data = youthTrendType2022)\n\n\n\n\n\n\n\n\nThis plot shows that even for the low-frequency crime types there is the same downward trend in most of data but with a small increase from year 2022 and onwards.",
    "crumbs": [
      "Lab assignments",
      "Lab2 - The `grid` Graphics System"
    ]
  },
  {
    "objectID": "labs/lab2_answer.html#challenge",
    "href": "labs/lab2_answer.html#challenge",
    "title": "Lab2 - The grid Graphics System",
    "section": "Challenge",
    "text": "Challenge\nDefine data as in assignment to use for plot:\n\nyouthTrendTypeSex &lt;- as.data.frame(table(youth$Date, youth$Abbrev,\n                                         youth$SEX))\nyouthTrendTypeSex$Date &lt;- as.Date(youthTrendTypeSex$Var1)\nyouthTrendTypeSex$Type &lt;- factor(youthTrendTypeSex$Var2, levels=newlevels)\nyouthTrendTypeSex$Sex &lt;- factor(youthTrendTypeSex$Var3)\n\nLike in question 7, we create a function with arguments data and coords that we input to gggrid::grid_panel. In this case, we create a summary of the proportion of female and male offenders within each panel (crime type) and use these summaries to create bars on the right to visualise this. We also add white horizontal lines at break points 0.1 to 0.5 to make it more easy to see the distribution of men vs. women in each panel.\nTo create such a collection of grobs (2 rectangles to form the bar with proportions and a segment with white lines), we use the gTree function and specify all 3 grobs as children using a gList.\nTo also add a bar with the overall proportions to the right of the plot, we simply utilise viewports as in question 5, but now using the angle argument to create a vertical bar. We also extract the colors used as a default from ggplot to color our groups and use them for our bar.\n\nadd_rate &lt;- function(data, coords) {\n  rateData &lt;- data %&gt;%\n    summarise(offences = sum(y), .by = colour) %&gt;%\n    mutate(rate = offences / sum(offences))\n  \n  bar1 &lt;- rectGrob(\n    x = 1,\n    width = unit(1, \"mm\"),\n    hjust = 1,\n    y = 0,\n    height = rateData[1, ]$rate,\n    vjust = 0,\n    gp = gpar(col = rateData[1, ]$colour,\n              fill = rateData[1, ]$colour)\n  )\n  bar2 &lt;- rectGrob(\n    x = 1,\n    width = unit(1, \"mm\"),\n    hjust = 1,\n    y = 1,\n    height = rateData[2, ]$rate,\n    vjust = 1,\n    gp = gpar(col = rateData[2, ]$colour,\n              fill = rateData[2, ]$colour)\n  )\n  lines &lt;- segmentsGrob(x0 = unit(1, \"npc\"), x1 = unit(1, \"npc\") - unit(1, \"mm\"),\n                        y0 = seq(0.1, 0.5, 0.1), y1 = seq(0.1, 0.5, 0.1),\n                        gp = gpar(col = \"white\", fill = \"white\"))\n  gTree(children = gList(bar1, bar2, lines))\n}\n\nsexFacetPlot &lt;- function(data = youthTrendTypeSex, scales = \"fixed\") {\n  grid.newpage()\n  p &lt;- facet_plot(data = data,\n                  color = Sex,\n                  scales = scales) +\n    gggrid::grid_panel(add_rate)\n  \n  pushViewport(\n    viewport(\n      x = 0,\n      just = c(0, .5),\n      width = unit(.9, \"npc\")\n    )\n  )\n  plot(p, newpage = FALSE)\n  upViewport()\n  \n  cols_in_plot &lt;- scales::pal_hue()(2)\n  cols_as_list &lt;- as.list(cols_in_plot) %&gt;% setNames(c(\"female\", \"male\"))\n  \n  pushViewport(\n    viewport(\n      x = unit(1, \"npc\") - unit(.1, \"npc\") / 2,\n      height = unit(.1, \"npc\"),\n      width = convertUnit(\n        unit(0.7, \"npc\"),\n        unitTo = \"in\",\n        axisFrom = \"y\",\n        axisTo = \"x\"),\n      angle = 90\n    )\n  )\n  grid.draw(barRatio_grobTree(cols = cols_as_list,\n                             bar_height = unit(6.5, \"mm\")))\n  upViewport()\n}\n\nUse the new function to create the plot:\n\nsexFacetPlot()\n\n\n\n\n\n\n\n\nThis plot now helps us answer all questions of interest. Again, using free scales in the facets, I think we gain more insight in what is happening:\n\nsexFacetPlot(scales = \"free_y\")",
    "crumbs": [
      "Lab assignments",
      "Lab2 - The `grid` Graphics System"
    ]
  },
  {
    "objectID": "labs/lab2_answer.html#the-grid-package",
    "href": "labs/lab2_answer.html#the-grid-package",
    "title": "Lab2 - The grid Graphics System",
    "section": "The grid package",
    "text": "The grid package\nThe grid package allows total customisation in creating grobs (graphical objects). They can either be drawn directly using grid::grid.xx functions or created as grobs with grid::xxGrob functions to be drawn later (with grid::grid.draw). This enables us to gather different grobs in a grob tree with grid::gTree and specifying grobs with a grid::gList as the children argument (alternatively use grid::grobTree when all components are grobs). See more in question 1.\n\nUsing viewports\nWe can use grid::viewport with grid::pushViewport to draw whatever we want inside a certain area of our “full plotting area” and then go to a parent viewport with grid::upViewport (grid::popViewport navigates to parent viewport AND deletes the current viewport from the viewport tree). See questions 2, 3, 5 and 8.\nAdditional takeaways about viewports:\n\nNote this also works with ggplot2 by assigning the ggplot object a value (fx. p) and then plotting it “inside the viewport” with plot(p, newpage = FALSE). See questions 5 and 8.\nWe can use the grid::convertUnit function to change the axis we are referencing (useful fx. when creating a viewport with angle = 90/270). See question 8.\nA strong way of using viewports is using xscale and/or yscale parameters in the grid::viewport function and the using the grid::unit function with units = \"native\" specified to make your grobs relate to the scale of the viewport.\nUse of grid::grid.layout as in question 3 can help with many situations.\n\nNote that ggplot2 is built on grid. ggplot2 uses viewports from grid. Fx. on a simple plot, it uses (nested) viewports for the background, axis text, axis ticks, etc. etc.",
    "crumbs": [
      "Lab assignments",
      "Lab2 - The `grid` Graphics System"
    ]
  },
  {
    "objectID": "labs/lab2_answer.html#combining-grid-and-ggplot2---the-gggrid-package",
    "href": "labs/lab2_answer.html#combining-grid-and-ggplot2---the-gggrid-package",
    "title": "Lab2 - The grid Graphics System",
    "section": "Combining grid and ggplot2 - The gggrid package",
    "text": "Combining grid and ggplot2 - The gggrid package\nAs mentioned above, viewports and ggplots integrate nicely using just grid and ggplot2. However, it’s easy to combine elements of grid to ggplots to create overlays on each facet/panel with gggrid::grid_panel or for each group using gggrid::grid_group.\nThese functions either take a static grob or a function that will create a grob (or a tree of grobs) within each panel/group. The function takes data and coords as an argument, and it will then use this function to draw using the function on only the data in that panel (stratified data). Note that the coords are transformed values of x and y (from the aesthetic mapping) to scale 0-1, so it can be plotted correctly in the scale of the viewport. data contains the untransformed data and includes columns of other aesthetics (fx. colour).\nSee more in questions 6, 7 and 8.",
    "crumbs": [
      "Lab assignments",
      "Lab2 - The `grid` Graphics System"
    ]
  },
  {
    "objectID": "labs/lab2_answer.html#answering-questions-of-interest",
    "href": "labs/lab2_answer.html#answering-questions-of-interest",
    "title": "Lab2 - The grid Graphics System",
    "section": "Answering questions of interest",
    "text": "Answering questions of interest\nThe proportion of female vs. male offenders is on a downward trend with the proportion of female offenders monotonically decreasing from 29% in 2018 to 24% in 2022, which is visible from the plot in question 3.\nFrom question 4 (and 5) we see an overall downward in frequency of offences. We do however see an increase for a single crime type “Dangerous” (Dangerous or Negligent Acts Endangering Persons). Looking at the plot in question 6, it becomes apparent that across all crime types, there seems to be an increase from the start of 2022. This is further highlighted in question 7, where we use a more precise, data-driven method to show the increase from start of year 2022.\nLooking at the plot from the challenge, we can comment on some of the same things as in the other plots, but those plots are more “specific” and perhaps a bit better at answering each question. This plot however gives an overview of both the proportion of female vs. male offenders through time as well as overall frequency across time and crime types. The plot also provides information not previously available by showing the proportions for each crime type.",
    "crumbs": [
      "Lab assignments",
      "Lab2 - The `grid` Graphics System"
    ]
  },
  {
    "objectID": "labs/lab7_answer.html",
    "href": "labs/lab7_answer.html",
    "title": "Lab7 - Interactive Graphics",
    "section": "",
    "text": "See the assignment description and model answer (for the source .Rmd model answer, just change “html” to “Rmd” in the link).\nLoading packages.\nlibrary(tidyverse)\nlibrary(grid)\nlibrary(plotly)\nlibrary(plotscaper)",
    "crumbs": [
      "Lab assignments",
      "Lab7 - Interactive Graphics"
    ]
  },
  {
    "objectID": "labs/lab7_answer.html#questions-of-interest",
    "href": "labs/lab7_answer.html#questions-of-interest",
    "title": "Lab7 - Interactive Graphics",
    "section": "Questions of interest",
    "text": "Questions of interest\n\nHow do the trends over time differ between types of crime?\nAre all crime types decreasing in frequency?\nAre there any unusual patterns for any crime types?",
    "crumbs": [
      "Lab assignments",
      "Lab7 - Interactive Graphics"
    ]
  },
  {
    "objectID": "labs/lab7_answer.html#question-1",
    "href": "labs/lab7_answer.html#question-1",
    "title": "Lab7 - Interactive Graphics",
    "section": "Question 1",
    "text": "Question 1\nWe create the interactive plot by using the plotly::ggplotly function on our created plot, where we take advantage of the unofficial aesthetic text supported by plotly to create tooltips to ensure we get the entire crime type label on the tooltip.\n\nplotly::ggplotly(\n  ggplot(counts, aes(x = Month, y = Freq, group = Abbrev, color = Abbrev)) + \n    geom_line(aes(text = Type)),\n  tooltip = c(\"x\", \"y\", \"text\")\n)\n\n\n\n\n\nWe can zoom in the interactive plot and save to png directly in the interface to investigate and capture things in data.\n\n\n\nFigure 1: Zoomed picture\n\n\nWe can choose interactively what groups to include in the plot by simply clicking them in the legend.\n\n\n\nFigure 2: Crime type chosen by legend\n\n\n\nAswering questions\nUsing tooltip, we see that the sudden dip for Dangerous or Negligent Acts occured in April of 2020 as shown on the below screenshot.\n\n\n\nFigure 3: Sudden dip for Dangerous or Negligent Acts occured in April of 2020\n\n\n\nIn the same month that Dangerous or Negligent Acts takes a big dip, Offences Against Justice Procedures, Govt Sec and Govt Ops and Miscellaneous Offences has very big spikes. Some of the spike for Miscellaneous Offences is visible on one of the above screenshots.\nThe trends in Public Order Offences and Dangerous or Negligent Acts are complete opposite as the latter is on an upward trend throughout the period, whereas the former is on a steep downward trend. Can be seen from earlier screenshot.\nFx. Theft and Related Offences is on a downward trend except for increasing from year 2022 onward, as is true for other categories as well. However, for Offences Against Justice Procedures, Govt Sec and Govt Ops this is not true. Except for a big spike, the frequency of crimes for this crime type is close to constant, but does see a bit of a decrease from about 2022. See figure 4.\nSexual Assault and Related Offences and Prohibited and Regulated Weapons and Explosives Offences have very similar trends across time with white noise around a quite static mean. However, both around year 2020 and 2022 Sexual… dips a bit while Prohibited… increases. See figure 5.\n\n\n\n\nFigure 4: Downward trend from before 2022 for Offences Against Justice Procedures, Govt Sec and Govt Ops\n\n\n\n\n\nFigure 5: Similar but differing trends around 2020",
    "crumbs": [
      "Lab assignments",
      "Lab7 - Interactive Graphics"
    ]
  },
  {
    "objectID": "labs/lab7_answer.html#question-2",
    "href": "labs/lab7_answer.html#question-2",
    "title": "Lab7 - Interactive Graphics",
    "section": "Question 2",
    "text": "Question 2\nLimit the data to be only from 2021 onwards\n\ncrimeRecent &lt;- subset(crime, Year &gt;= 2021)\n\nCreate the linked interactive plots with plotscaper with the correct layout by creating a schema with create_schema and using the set_layout function to control the placement of the figures.\n\nschema &lt;- crimeRecent %&gt;%\n  create_schema() %&gt;% \n  add_barplot(\"Type\") %&gt;% \n  add_histogram(\"Age.Lower\") %&gt;% \n  add_barplot(\"Date\")\n\nlayout &lt;- matrix(c(\n  1, 2,\n  3, 3\n), ncol = 2, byrow = TRUE)\n\nschema %&gt;% \n  set_layout(layout) %&gt;% \n  render()\n\n\n\n\n\n\nUsing tooltips\nWe use the “query mode” with the keybind “q” and then hover over the bars to get tooltips. We see that the month with the highest crime count is March of 2021 with a crime count of 7712.\n\n\n\nFigure 6: Highest crime count\n\n\n\n\nInvestigating youth offending\nWe can drag the mouse to choose the groups with Age.Lower at 15 or less.\n\n\n\nFigure 7: Distribution for Age.Lower at or below 15\n\n\nIt is a bit hard to inspect the crime count for youth offenders just from a visual inspection, but we can use the query mode to inspect the numbers.\n\n\n\n\n\nCrime count for youth offenders at 3 different time points\n\n\n\n\n\n\n\nCrime count for youth offenders at 3 different time points\n\n\n\n\n\n\n\nCrime count for youth offenders at 3 different time points\n\n\n\n\nWe see quite a big increase in youth offending from January 2022 to August 2022 from the figure. An increase during the first half of 2022 does happen, but the highest count at all for youth offending is the count shown for August 2022. The second-highest count is shown from March 2021, where it’s seen that the total count is also quite a bit higher, meaning that youth offending is quite a bit more prevalent relative to other age groups in the second half of 2022.\n\n\nDistribution of crime types\nWe see that the distribution of crime types are quite different for Age.Lower = 15 and Age.Lower = 20. We need to use the tooltips to identify the crime types. Below we look at the two crime types that are some of the most frequent and with differences between the age groups.\nAge.Lower = 15 is in the top row, and Age.Lower = 20 in the bottom.\n\n\n\n\n\nFigure 8: Crime count for youth offenders at 3 different time points\n\n\n\n\n\n\n\nFigure 8: Crime count for youth offenders at 3 different time points\n\n\n\n\n\n\n\nFigure 8: Crime count for youth offenders at 3 different time points\n\n\n\n\n\n\n\nFigure 8: Crime count for youth offenders at 3 different time points\n\n\n\n\nWe see the largest difference for Theft and related offences, where the count is 1916 for age group 20 and 3448 for age group 15, being the highest of all age groups. The opposite is true for Traffic and Vehicle Regulatory Offences, where age group 20 has the highest count of any age group with 3884 versus 3263 for age group 15.",
    "crumbs": [
      "Lab assignments",
      "Lab7 - Interactive Graphics"
    ]
  },
  {
    "objectID": "labs/lab8_answer.html",
    "href": "labs/lab8_answer.html",
    "title": "Lab8 - Maps",
    "section": "",
    "text": "See the assignment description and model answer (for the source .Rmd model answer, just change “html” to “Rmd” in the link).",
    "crumbs": [
      "Lab assignments",
      "Lab8 - Maps"
    ]
  },
  {
    "objectID": "labs/lab8_answer.html#crime-data",
    "href": "labs/lab8_answer.html#crime-data",
    "title": "Lab8 - Maps",
    "section": "Crime data",
    "text": "Crime data\nData shows rows of incidents handled by the Police.\n\ncrime &lt;- read.csv(\"nzpolice-proceedings.csv\")\n\nCreate Month as a Date, Year as a POSIXlt and alter Police.District a bit.\n\ncrime$Month &lt;- as.Date(crime$Date)\ncrime$Year &lt;- as.POSIXlt(crime$Date)$year + 1900\ncrime$Police.District &lt;- gsub(\"Of\", \"of\", crime$Police.District)\n\nDrop year with partial data\n\ncrime &lt;- subset(crime, Year &gt;= 2015)\n\nGenerate totals counts pr. police district.\n\ncrimePerDistrict &lt;- count(crime, Police.District)\n\nGenerate totals counts each year pr. police district.\n\ncrimeYearPerDistrict &lt;- count(crime, Police.District, Year)\n\nCounts for each crime type pr. police district.\n\ncrimeTypePerDistrict &lt;- count(crime, Police.District, ANZSOC.Division)",
    "crumbs": [
      "Lab assignments",
      "Lab8 - Maps"
    ]
  },
  {
    "objectID": "labs/lab8_answer.html#map-data",
    "href": "labs/lab8_answer.html#map-data",
    "title": "Lab8 - Maps",
    "section": "Map data",
    "text": "Map data\n\nlibrary(sf)\n\nMap data for the Police Districts was obtained from Koordinates.\n\ndistricts &lt;- st_read(\"nz-police-district-boundaries-29-april-2021.shp\")\n\nAdd centroids.\n\ncentroids &lt;- st_coordinates(st_centroid(st_geometry(districts)))\ndistricts$X &lt;- centroids[,1]\ndistricts$Y &lt;- centroids[,2]",
    "crumbs": [
      "Lab assignments",
      "Lab8 - Maps"
    ]
  },
  {
    "objectID": "labs/lab8_answer.html#combined-data",
    "href": "labs/lab8_answer.html#combined-data",
    "title": "Lab8 - Maps",
    "section": "Combined data",
    "text": "Combined data\nCombine the crime and map data.\n\ncrimeDistricts &lt;- inner_join(districts, crimePerDistrict,\n                             by=join_by(DISTRICT_N == Police.District))\n\ncrimeTypeDistricts &lt;- inner_join(districts, crimeTypePerDistrict,\n                                 by=join_by(DISTRICT_N == Police.District))\n\ncrimeYearDistricts &lt;- inner_join(districts, crimeYearPerDistrict,\n                                 by=join_by(DISTRICT_N == Police.District))",
    "crumbs": [
      "Lab assignments",
      "Lab8 - Maps"
    ]
  },
  {
    "objectID": "labs/lab8_answer.html#questions-of-interest",
    "href": "labs/lab8_answer.html#questions-of-interest",
    "title": "Lab8 - Maps",
    "section": "Questions of interest",
    "text": "Questions of interest\nQuestions of interest are:\n\nWhich Police Districts have the most incidents?\nHow does the number of incidents change over time in each District?\nWhat types of crime are more common than others in each District?\nAre there obvious differences between North Island and South Island crime?",
    "crumbs": [
      "Lab assignments",
      "Lab8 - Maps"
    ]
  },
  {
    "objectID": "labs/lab8_answer.html#question-1",
    "href": "labs/lab8_answer.html#question-1",
    "title": "Lab8 - Maps",
    "section": "Question 1",
    "text": "Question 1\nWe create the map plot with labels for districts simply by running geom_sf() to create the map, and then calling geom_sf_text to layer text on top of the map.\nWe use hjust as an aesthetic, where we center the text label of the district according to its position on the map when it’s not overlapping with another district. Where districts are overlapping, we ensure right-alignment of the text of left-most district, and left-alignment of the text of the right-most district to avoid overlapping text labels.\n\nadd_hjust &lt;- function(data = districts, close_prox = 5*1e4) {\n  Yclose_pairs &lt;- which(\n    as.matrix(dist(districts$Y)) &lt; close_prox,\n    arr.ind = TRUE\n  ) %&gt;% \n    as.data.frame() %&gt;% \n    filter(row != col) %&gt;% \n    slice_head(n = nrow(.)/2)\n  \n  res &lt;- data %&gt;% \n    mutate(hjust = .5)\n  \n  for (i in 1:nrow(Yclose_pairs)) {\n    Yclose_pair &lt;- as.numeric(Yclose_pairs[i, ])\n    res[Yclose_pair, ] &lt;- res[Yclose_pair, ] %&gt;% \n      mutate(hjust = case_when(X &lt; lag(X) ~ 1,\n                               X &lt; lead(X) ~ 1,\n                               TRUE ~ 0))\n  }\n  return(res)\n}\n\nggplot(add_hjust(districts)) +\n  geom_sf() +\n  geom_sf_text(aes(label = DISTRICT_N, hjust = hjust), size = 3)",
    "crumbs": [
      "Lab assignments",
      "Lab8 - Maps"
    ]
  },
  {
    "objectID": "labs/lab8_answer.html#question-2",
    "href": "labs/lab8_answer.html#question-2",
    "title": "Lab8 - Maps",
    "section": "Question 2",
    "text": "Question 2\nTo produce this plot, we simply use the joined data containing information needed for the map as well as information about the incidence rate of crimes in each district. We can then create the map with geom_sf and specify the incidence rate n as the fill aesthetic.\n\nggplot(crimeDistricts) +\n  geom_sf(aes(fill = n))\n\n\nQuestions of interest\nThis map can be used to identify which Police Districts have the most incidents but does not show anything about number of incidents dependent on crime type or year. In regards to answering the “simple” question of which district has the most incidents, this plot can help answer it, but if the reader is not familiar with New Zealand police districts, one could argue there is a substantive issue with the plot due to missing labels.\nHowever, no matter if you know the districts or not, it is apparent from the plot that there is more crime on the northern island.\n\n\nMajor substantive problem\nThe major substantive problem however with this plot is that incidents are shown in absolute numbers and are not adjusted according to the population within the police district.\n\n\nVisual channel\nAccording to Kieran Healy’s list of visual channels ordered by effectiveness, color luminance is not a very effective visual channel for continuous data. However, when plotting maps, position, length and tilt/angle are not not viable visual channels, meaning we don’t have many options. Decoding values exactly is impossible task from this plot, but it does give quite a good idea the relative differences between police districts.",
    "crumbs": [
      "Lab assignments",
      "Lab8 - Maps"
    ]
  },
  {
    "objectID": "labs/lab8_answer.html#question-3",
    "href": "labs/lab8_answer.html#question-3",
    "title": "Lab8 - Maps",
    "section": "Question 3",
    "text": "Question 3\nWe create this plot by adding points with the location of the centroids by simply layering them on top with geom_point, using the centroids’ X- and Y-positions as the x and y aesthetic, specifying the incidence rate n as the size aesthetic and making the points semitransparent through the alpha argument.\n\nggplot(crimeDistricts) +\n  geom_sf() +\n  geom_point(aes(x = X, y = Y, size = n), fill = \"black\", alpha = 0.5)\n\nThis plot says the same about the questions of interest as above, just utilising area as a visual channel rather than color luminance. In Kieran Healy’s scale of visual channels for continuous data, this should be better than color, but since we are just displaying a quite small point inside a region on a map, I think the colour visual channel works better in this case.",
    "crumbs": [
      "Lab assignments",
      "Lab8 - Maps"
    ]
  },
  {
    "objectID": "labs/lab8_answer.html#question-4",
    "href": "labs/lab8_answer.html#question-4",
    "title": "Lab8 - Maps",
    "section": "Question 4",
    "text": "Question 4\nWe create the animation with gganimate by switching states between years with the transition_states function. We add a title showing the current state by utilising the glue syntax.\n\nlibrary(gganimate)\n\nggplot(crimeYearDistricts) +\n  geom_sf(aes(fill = n)) +\n  transition_states(Year, transition_length = 0) +\n  labs(title = \"Year: {closest_state}\")\n\nThe animation shows a general trend that crime is decreasing within all police districts by seeing that the regions become darker throughout time. By keeping an open eye, we can see a few cases of an increase from year to the next before it then decreases again afterwards. This looks to be true fx. for Auckland between years 2018 and 2019. However, these kinds of animation are much better at showing the general downward trend across police districts than trying to “catch” single-year differences.",
    "crumbs": [
      "Lab assignments",
      "Lab8 - Maps"
    ]
  },
  {
    "objectID": "labs/lab8_answer.html#question-5",
    "href": "labs/lab8_answer.html#question-5",
    "title": "Lab8 - Maps",
    "section": "Question 5",
    "text": "Question 5\nWe create the simple line plot.\n\nggplot(crimeYearPerDistrict, aes(x = Year, y = n, color = Police.District)) +\n  geom_line()\n\nThis plot makes it easier to see nuances in the general downward trend that was visible in the animation. We can see small increases fx. for Auckland from 2018 to 2019, from Counties/Manukau from 2015 to 2016, etc.\nHowever, this plot makes it much harder to identify the police districts. According to Kieran Healy’s scale of effective visual channels to decode categorical data, position in space is more effective than color hue. In addition to this being generally true, we here have 12 police districts, meaning we have 12 different hues. According to Wilke, a rule of thumb is to be careful with using more than 5 different color hues to identify categorical variables.\nThe animation and (a variation of) the plot can works in unison.",
    "crumbs": [
      "Lab assignments",
      "Lab8 - Maps"
    ]
  },
  {
    "objectID": "labs/lab8_answer.html#question-6",
    "href": "labs/lab8_answer.html#question-6",
    "title": "Lab8 - Maps",
    "section": "Question 6",
    "text": "Question 6\nIdeas for color scale?\n\nscale_fill_viridis_c might be nicer and easier to see. However, still does not fix problem of many being very dark and showing no nuance. Could also do individual scales for each. But then it’s not possible to relate numbers from each crime type…\n\n\nggplot(crimeTypeDistricts) +\n  geom_sf(aes(fill = n), show.legend = FALSE) +\n  facet_wrap(~ ANZSOC.Division, nrow = 3) +\n  theme(axis.ticks = element_blank(),\n        axis.text = element_blank(),\n        strip.text = element_text(hjust = 0))\n\n\nQuestions of interest\nThis plot attempts to answer the question about distribution of crime types across different police districts. However, it does a poor job of this, as we have facetted by crime type, meaning we have to compare the colour of a certain position in each facet. This is the nature of the map plot that we cannot facet by police district rather than crime type to get the values next to each other.\nComparing values across facets is hard enough as it is, but then we also have to do the comparison based on a continuous colour luminance scale, where especially low incidence crime types are just all dark, and it’s hard to spot any differences.",
    "crumbs": [
      "Lab assignments",
      "Lab8 - Maps"
    ]
  },
  {
    "objectID": "labs/lab8_answer.html#question-7",
    "href": "labs/lab8_answer.html#question-7",
    "title": "Lab8 - Maps",
    "section": "Question 7",
    "text": "Question 7\n\nCompare hights within crime type\nDirect labelling:\n\nlibrary(grid)\n\nadd_label &lt;- function(data, coords) {\n  textGrob(data$label,\n           x = coords$x,\n           y = unit(coords$y, \"npc\") + unit(2, \"mm\"),\n           gp = gpar(fontsize = 10),\n           rot = 60, hjust = 0)\n}\n\nggplot(crimeTypePerDistrict, aes(x = Police.District, y = n)) +\n  geom_col(color = \"black\", fill = \"white\", show.legend = FALSE) +\n  facet_wrap(~ ANZSOC.Division, ncol = 1) +\n  gggrid::grid_panel(add_label, aes(label = Police.District)) +\n  scale_y_continuous(expand = expansion(add = c(0, 14.5*1e3))) +\n  theme(axis.text.x = element_blank(),\n        axis.ticks.x = element_blank())\n\nColor and a legend:\n\nlibrary(grid)\n\n\nggplot(crimeTypePerDistrict, aes(x = Police.District, y = n, fill = Police.District)) +\n  geom_col() +\n  facet_wrap(~ ANZSOC.Division, ncol = 1) +\n  theme(axis.text.x = element_blank(),\n        axis.ticks.x = element_blank(),\n        axis.title = element_blank(),\n        legend.position = \"top\") +\n  guides(fill = guide_legend(nrow = 1))\n\n\n\nCompare hights within each district\nColoring\n\nlibrary(grid)\nggplot(crimeTypePerDistrict, aes(x = ANZSOC.Division, y = n, fill = ANZSOC.Division)) +\n  geom_col() +\n  facet_wrap(~ Police.District, ncol = 1) +\n  theme(axis.text.x = element_blank(),\n        axis.ticks.x = element_blank(),\n        axis.title = element_blank(),\n        legend.position = \"top\") +\n  guides(fill = guide_legend(nrow = 2)) +\n  labs(fill = \"\")\n\nAnimation\n\nanim &lt;- ggplot(crimeTypePerDistrict, aes(x = ANZSOC.Division, y = n, group = Police.District)) +\n  geom_col(color = \"black\", fill = \"white\") +\n  coord_flip() +\n  # gggrid::grid_panel(add_label, aes(label = ANZSOC.Division)) +\n  transition_states(Police.District, transition_length = 0) +\n  labs(title = \"Police District: {closest_state}\") +\n  theme(axis.ticks.x = element_blank(),\n        axis.title = element_blank())\n\nanimate(anim, fps = 1)\n\n\n\nQuestions of interest\nThe map plots are better at answering the questions about differences between crime in the northern island and southern island, as those are mapped by position in the map plots. Since we have nothing indicating whether or not the police district is in the northern or southern island in this histogram, it’s practically impossible to answer that question.\nHowever, I do think this plot does a better job of showing the differences in showing what types of crimes are more common within each district, as we can more easily decode the incidence rates from the histogram that uses visual channel of position/length versus the visual channel of colour luminance on the map plot. Especially for the low incidence crime types, it’s almost impossible to spot any differences in the map plot. It’s still hard to see on the histogram, but it’s at least possible to spot differences.",
    "crumbs": [
      "Lab assignments",
      "Lab8 - Maps"
    ]
  },
  {
    "objectID": "labs/lab8_answer.html#challenge",
    "href": "labs/lab8_answer.html#challenge",
    "title": "Lab8 - Maps",
    "section": "Challenge",
    "text": "Challenge\nWe create the plot by using grid_group from gggrid.\n\nlibrary(gggrid)\n\nmap_boxes &lt;- function(box_side = unit(1.3, \"cm\"), data = crimeYearDistricts) {\n  \n  freq_diff &lt;- max(data$n)\n  year_diff &lt;- max(data$Year) - min(data$Year)\n  \n  add_district &lt;- function(data, coords) {\n    x_pos &lt;- unique(coords$x)\n    y_pos &lt;- unique(coords$y)\n    \n    label &lt;- textGrob(\n      data$label, x = x_pos,\n      y = unit(y_pos, \"npc\") + unit(1, \"mm\"),\n      just = c(0, 0)\n    )\n    \n    rect &lt;- rectGrob(\n      x = unit(x_pos, \"npc\"),\n      y = unit(y_pos, \"npc\"),\n      width = box_side,\n      height = box_side,\n      just = c(0, 1)\n    )\n    \n    rect_bot &lt;- unit(y_pos, \"npc\") - box_side\n    rect_height_npc &lt;- unit(y_pos, \"npc\") - rect_bot\n    npc_pr_freq &lt;- rect_height_npc / freq_diff\n    y_line_npc &lt;- rect_bot + data$y_line * npc_pr_freq\n    \n    rect_right &lt;- unit(x_pos, \"npc\") + box_side\n    rect_width_npc &lt;- rect_right - unit(x_pos, \"npc\")\n    npc_pr_year &lt;- rect_width_npc / year_diff\n    x_line_npc &lt;- unit(x_pos, \"npc\") + (data$x_line - min(data$x_line)) * npc_pr_year\n    \n    lines &lt;- linesGrob(x = x_line_npc, y = y_line_npc)\n    \n    grobTree(label, rect, lines)\n  }\n  \n  p &lt;- ggplot(crimeYearDistricts, aes(group = DISTRICT_N, x = X, y = Y)) +\n    geom_sf() +\n    grid_group(add_district,\n               aes(label = DISTRICT_N,\n                   x_line = Year, y_line = n))\n  \n  return(p)\n}\n\nmap_boxes(unit(1, \"cm\"))\n\nThis plot does a much better job of answering questions of interest. It combines plots from Q4 and Q5 and employs position as the visual channel both for the categorical variable of police district as well as for the incidence rate. Amazing plot!",
    "crumbs": [
      "Lab assignments",
      "Lab8 - Maps"
    ]
  },
  {
    "objectID": "labs/lab3_answer.html",
    "href": "labs/lab3_answer.html",
    "title": "Lab3 - Effective Data Visualisations",
    "section": "",
    "text": "See the assignment description and model answer (for the source .Rmd model answer, just change “html” to “Rmd” in the link).\nLoading packages.\nlibrary(tidyverse)",
    "crumbs": [
      "Lab assignments",
      "Lab3 - Effective Data Visualisations"
    ]
  },
  {
    "objectID": "labs/lab3_answer.html#questions-of-interest",
    "href": "labs/lab3_answer.html#questions-of-interest",
    "title": "Lab3 - Effective Data Visualisations",
    "section": "Questions of interest",
    "text": "Questions of interest\nWe want to investigate the distribution of incidents of each crime type across age groups.\nWe want to investigate what types of crime are most common and how distributions of age groups compare between crime types.",
    "crumbs": [
      "Lab assignments",
      "Lab3 - Effective Data Visualisations"
    ]
  },
  {
    "objectID": "labs/lab3_answer.html#question-1",
    "href": "labs/lab3_answer.html#question-1",
    "title": "Lab3 - Effective Data Visualisations",
    "section": "Question 1",
    "text": "Question 1\n\nggplot(crimeAgeType) +\n  geom_col(aes(Age, Freq, color=Var2, fill=Var2), position=\"identity\",\n           just=0)\n\n\n\n\n\n\n\n\nAnswering all our questions of interest from this plot is quite difficult.\nCommenting on what types of crime are the most common, it’s hard to give a general answer due to the breakdown on age groups. Trying to comment on the most common types of crimes within each age group is, however, also difficult. It’s hard to distinguish the categories apart based on the colors. If we were able to distinguish the categories, the use of position = \"identity\" means the bars are placed “in front” of each other, meaning we could see the most frequent crime type by identifying the color of the tallest bar. This way of displaying the data, however, gives many problems.\nTrying to investigate the distribution of crime types across age groups, the same problems as described above apply. Colors and positions of bars makes it very difficult to see what is going on from the plot. However, we can sort of make out a distribution for each crime type by seeing “sub-histograms” in each color. All distributions look to be unimodal with peaks that differ a bit between age groups from 15-19 to 25-29.\n\nOverplotting is an issue in this plot, as the bars in the plot is overlapping. One might think initially that this plot is showing stacked bars, but actually the bars are “blocking” each other. Fx. by inspecting data, we know that there are observations of type “Theft and Related Offences” in age groups 20-24, but this is not at all shown, as the “previous” crime type by order of our factor variable is taller and thus hiding it completely. This makes it impossible to answer any questions regarding the distribution of crime types, as the plot has substantive issues with representing the data.\nColour use is horrible to say the least. In the reading by Wilke, he writes: “As a rule of thumb, qualitative color scales work best when there are three to five different categories that need to be colored. Once we reach eight to ten different categories or more, the task of matching colors to categories becomes too burdensome to be useful, even if the colors remain sufficiently different to be distinguishable in principle.”. Here, we are coloring a variable with 16 levels, overstepping the guideline by Wilke massively. At the same time, the color scale does not effectively enable us to distinguish the categories. Practically, this makes the plot almost entirely unusable as a tool in answering the questions of interest.\nText labels on the histogram are okay. “Freq” or “Count” are standard for histograms, and one could add “Age (years)” to the x-axis title to have the unit. However, an argument could be made that this is not necessary as it is clear from the context that age is measured in years. On the other hand, the legend title and labels need some work. The legend title of “Var2” is non-informative, and it actually inhibits us from answering questions of interest. The reader might be able to deduce it has something to do with crime type from the values of the variable, but the reader will not be certain what they are seeing. The legend labels could be formatted nicer with line breaks. Unless figure width is scaled up, it makes the figure harder to see and thus harder to interpret.\nThe principal of proportional ink is not satisfied in this plot. The height of each bar does not encode the frequency of that crime but rather the difference from the “previous” crime type. As noted earlier, in some cases, data is even “hidden” behind other bars.",
    "crumbs": [
      "Lab assignments",
      "Lab3 - Effective Data Visualisations"
    ]
  },
  {
    "objectID": "labs/lab3_answer.html#question-2",
    "href": "labs/lab3_answer.html#question-2",
    "title": "Lab3 - Effective Data Visualisations",
    "section": "Question 2",
    "text": "Question 2\nTo introduce semitransparency, I specify the alpha argument in geom_col.\n\nggplot(crimeAgeType) +\n  geom_col(aes(Age, Freq, color=Var2, fill=Var2), position=\"identity\",\n           just=0, alpha = .3)\n\n\n\n\n\n\n\n\nThis has not helped the visualisation at all. The plot is even more confusing, as the colors are harder to distinguish from each other. The point of this plot would be to make the bars “hiding” behind others visible, but in this case the bar is a mix of all the colors and not identifiable anyway.\nTo introduce “jitter” in the data, I use position = \"dodge\" which uses position_dodge to make horizontal adjustment of bars within groups. Using position = \"jitter\" in this case creates chaos.\n\nggplot(crimeAgeType) +\n  geom_col(aes(Age, Freq, color=Var2, fill=Var2), position=\"dodge\")\n\n\n\n\n\n\n\n\nThis plot helps us identify a bar for each crime type rather than having some hidden behind each other. This does improve the plot’s ability to help us answer our questions of interest regarding the distribution of crime types across age groups. However, the plot still suffers from problems with colors, and the bars in this plot are so thin that it makes it really hard to see them.\nTo create a plot with another geom, we create a line plot. Changing only one “parameter” at a time, we would keep position = \"idenity\" in an area plot, which leads to exactly the same issue as with the bars where some of the area of some categories would hide behind other categories (though it would be a bit more clear that is what is happening with area than bars).\nWe create the line plot by simply changing the geom to geom_line and making sure to remove fill as an aesthetic as that is not used for line plots.\n\nggplot(crimeAgeType) +\n  geom_line(aes(Age, Freq, color=Var2))\n\n\n\n\n\n\n\n\nThe line plot does help answer the questions of interest. As noted above where we used position = \"dodge\", categories are no longer hidden behind other. Furthermore, due to the amount of bars in the previous plot which made it difficult to see, I would judge this plot to be the best at answering both questions of interest in regards to the most common crime type as well as distribution of crime type across age groups. Though it’s definitely still not good…",
    "crumbs": [
      "Lab assignments",
      "Lab3 - Effective Data Visualisations"
    ]
  },
  {
    "objectID": "labs/lab3_answer.html#question-3",
    "href": "labs/lab3_answer.html#question-3",
    "title": "Lab3 - Effective Data Visualisations",
    "section": "Question 3",
    "text": "Question 3\nFirst, I make sure to create ANZSOC.Division as a factor using the newlabels defined in the assignment, which makes sure to create line breaks every 30 characters and makes all crime types take up 3 lines of text, so they are all top-aligned. With this new variable in data, I re-create crimeAgeType.\nIn my plotting code, I simply label the aesthetics that are used for the legend using the labs function to label both color and fill as “Crime type”. I also add the unit “years” to my x-axis title as well as added a title, which I made bold and with bigger size using the argument plot.title in the theme function.\n\ncrime$ANZSOC.Division &lt;- factor(\n  crime$ANZSOC.Division,\n  levels=newlevels,\n  labels = newlabels\n  )\n\ncrimeAgeType &lt;- as.data.frame(table(crime$Age.Lower, crime$ANZSOC.Division))\ncrimeAgeType$Age &lt;- as.numeric(as.character(crimeAgeType$Var1))\ncrimeAgeType$Crime &lt;- crimeAgeType$Var2\n\nggplot(crimeAgeType) +\n  geom_histogram(aes(x = Age))\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nggplot(crimeAgeType) +\n  geom_col(aes(Age, Freq, color=Crime, fill=Crime), position=\"identity\",\n           just=0) +\n  theme(plot.title = element_text(face = \"bold\", size = 18)) +\n  labs(x = \"Age (years)\", title = \"Criminal offending in New Zealand (2014-2022)\",\n       color = \"Crime type\", fill = \"Crime type\")\n\n\n\n\n\n\n\n\nThe plot now has a title, which according to Wilke should be at the top of the plot when creating a standalone figure, or as the first thing in the caption of a figure. The x-axis provides a unit to remove all doubt. The legend is now much more clear, as we provide information about what the grouping variable is in the title, and the line breaks in the keys make then easier to read and give more room to the figure.\nThis modification does help understand what data is being displayed better, meaning it would be easier to try and interpret it and answer questions of interest. However, only marginally as the plot still has substantive problems in answering questions of interest due to the issues mentioned in question 1.",
    "crumbs": [
      "Lab assignments",
      "Lab3 - Effective Data Visualisations"
    ]
  },
  {
    "objectID": "labs/lab3_answer.html#question-4",
    "href": "labs/lab3_answer.html#question-4",
    "title": "Lab3 - Effective Data Visualisations",
    "section": "Question 4",
    "text": "Question 4\nIn the plot we use facet_wrap to create a plot with small multiples with facets for each crime type. In addition to this, we remove the coloring on crime type, as it is redundant now that we have facets for each crime type. This is in accordance with Wilkes guidelines in section 19.1 where he notes that:\n\n“A second common problem is coloring for the sake of coloring, without having a clear purpose for the colors.”\n\n\nggplot(crimeAgeType) +\n  geom_col(aes(Age, Freq), just=0, fill = \"dodgerblue\") +\n  facet_wrap(~ Crime) +\n  theme(plot.title = element_text(face = \"bold\", size = 18)) +\n  labs(x = \"Age (years)\", title = \"Criminal offending in New Zealand (2014-2022)\") +\n  theme(strip.text = element_text(hjust = 0))\n\n\n\n\n\n\n\n\nAnswering the question about most common type of crime is actually not that easy to do from this plot. The plot is still better than the previous plots, and we have made sure to satisfy the principle of proportional ink by making sure that bars start from 0 and that we have the same scale for all the facets. However, it can still be difficult to fx. whether the overall frequency of “Theft…” or “Traffic…” is highest.\nCommenting on individual distributions of crime types is much easier. We clearly see unimodal distributions for all crime types that are quite heavily right-skewed. The mode is not the exact same for all, as it ranges from being at 15-19 years to either 25-29 or 30-34 for some distributions (though it’s hard to see exactly what is the peak).",
    "crumbs": [
      "Lab assignments",
      "Lab3 - Effective Data Visualisations"
    ]
  },
  {
    "objectID": "labs/lab3_answer.html#question-5",
    "href": "labs/lab3_answer.html#question-5",
    "title": "Lab3 - Effective Data Visualisations",
    "section": "Question 5",
    "text": "Question 5\nIn order to maximise the data-ink ratio, we should remove any ink that does not show or explain data. Thus, we\n\nRemove the grey background of the facet title strips using strip.background in ggplot2::theme.\nRemove all background from the plot using a combination of ggplot2::theme_minimal and the panel.grid argument in ggplot2::theme.\nChange the histogram to use a ggplot2::geom_segment, which only draws the top of the bars. This is the biggest ink saver, and it allows us to visually see the data value from the placement of the bar without needing the area of a bar to judge data values.\n\n\nggplot(crimeAgeType) +\n  geom_segment(aes(x = Age, y = Freq, xend = Age + 4)) +\n  facet_wrap(~ Crime) +\n  theme(plot.title = element_text(face = \"bold\", size = 18)) +\n  labs(x = \"Age (years)\", title = \"Criminal offending in New Zealand (2014-2022)\") +\n  theme_minimal() +\n  theme(strip.text = element_text(hjust = 0),\n        strip.background = element_blank(),\n        panel.grid = element_blank())\n\n\n\n\n\n\n\n\nComparing this plot to the one in question 4, I am not completely on team Tufte. I prefer the previous visualisation though more ink has been used in that plot. I think the area of the bars help give a better overview of the data. That said, I do like the removal of facet strip background and grid lines that are not needed.\nSo in my opinion this does not help answer questions of interest, but I do recognise we have the same ability to answer them using this plot, given enough time to adjust our glasses.",
    "crumbs": [
      "Lab assignments",
      "Lab3 - Effective Data Visualisations"
    ]
  },
  {
    "objectID": "labs/lab3_answer.html#question-6",
    "href": "labs/lab3_answer.html#question-6",
    "title": "Lab3 - Effective Data Visualisations",
    "section": "Question 6",
    "text": "Question 6\n\nWe create the labels “on the plot” rather than have them in strips from ggplot2::facet_wrap by\n\nremoving the strips entirely with by setting strip.background and strip.text in ggplot2::theme to element_blank().\nadding labels with gggrid::grid_panel. We get access to the labels by mapping them as an aesthetic, so it’s available in the data inside our function that creates the textGrob.\n\nI tried doing the grid lines by just setting panel.grid.major.x to element_blank(), but that did not work, so I removed all grid with panel.grid to element_blank() and then adding panel.grid.major.y as white lines.\n\n\nggplot(crimeAgeType, aes(Age, Freq, group = Crime)) +\n  geom_col(just=0, fill = \"dodgerblue\", alpha = .7) +\n  facet_wrap(~ Crime) +\n  gggrid::grid_panel(\n    function(data, coords) {\n      grid::textGrob(\n        label = data$label,\n        x = grid::unit(2, \"mm\"),\n        y = grid::unit(1, \"npc\") - grid::unit(2, \"mm\"),\n        just = c(\"left\", \"top\")\n      )\n    },\n    aes(label = Crime)\n  ) +\n  theme(plot.title = element_text(face = \"bold\", size = 18)) +\n  labs(x = \"Age (years)\", title = \"Criminal offending in New Zealand (2014-2022)\") +\n  theme(strip.background = element_blank(),\n        strip.text = element_blank(),\n        panel.grid = element_blank(),\n        panel.grid.major.y = element_line(\"white\"))\n\n\n\n\n\n\n\n\nThe plot is basically the same as in question 4, so I have the same comments comparing it to previous plots. This plot does have an addition of only y-grid lines, which I think help read the data more accurately. A way to keep the grid lines but increase the data-ink ratio would be to have a white background and light grey grid lines rather than the other way around.",
    "crumbs": [
      "Lab assignments",
      "Lab3 - Effective Data Visualisations"
    ]
  }
]