[
  {
    "objectID": "labs/lab3_answer.html",
    "href": "labs/lab3_answer.html",
    "title": "Lab3 - Effective Data Visualisations",
    "section": "",
    "text": "Loading packages.\nlibrary(tidyverse)",
    "crumbs": [
      "Lab assignments",
      "Lab3 - Effective Data Visualisations"
    ]
  },
  {
    "objectID": "labs/lab3_answer.html#questions-of-interest",
    "href": "labs/lab3_answer.html#questions-of-interest",
    "title": "Lab3 - Effective Data Visualisations",
    "section": "Questions of interest",
    "text": "Questions of interest\nWe want to investigate the distribution of incidents of each crime type across age groups.\nWe want to investigate what types of crime are most common and how distributions of age groups compare between crime types.",
    "crumbs": [
      "Lab assignments",
      "Lab3 - Effective Data Visualisations"
    ]
  },
  {
    "objectID": "labs/lab3_answer.html#question-1",
    "href": "labs/lab3_answer.html#question-1",
    "title": "Lab3 - Effective Data Visualisations",
    "section": "Question 1",
    "text": "Question 1\n\nggplot(crimeAgeType) +\n  geom_col(aes(Age, Freq, color=Var2, fill=Var2), position=\"identity\",\n           just=0)\n\n\n\n\n\n\n\n\nAnswering all our questions of interest from this plot is quite difficult.\nCommenting on what types of crime are the most common, it’s hard to give a general answer due to the breakdown on age groups. Trying to comment on the most common types of crimes within each age group is, however, also difficult. It’s hard to distinguish the categories apart based on the colors. If we were able to distinguish the categories, the use of position = \"identity\" means the bars are placed “in front” of each other, meaning we could see the most frequent crime type by identifying the color of the tallest bar. This way of displaying the data, however, gives many problems.\nTrying to investigate the distribution of crime types across age groups, the same problems as described above apply. Colors and positions of bars makes it very difficult to see what is going on from the plot. However, we can sort of make out a distribution for each crime type by seeing “sub-histograms” in each color. All distributions look to be unimodal with peaks that differ a bit between age groups from 15-19 to 25-29.\n\nOverplotting is an issue in this plot, as the bars in the plot is overlapping. One might think initially that this plot is showing stacked bars, but actually the bars are “blocking” each other. Fx. by inspecting data, we know that there are observations of type “Theft and Related Offences” in age groups 20-24, but this is not at all shown, as the “previous” crime type by order of our factor variable is taller and thus hiding it completely. This makes it impossible to answer any questions regarding the distribution of crime types, as the plot has substantive issues with representing the data.\nColour use is horrible to say the least. In the reading by Wilke, he writes: “As a rule of thumb, qualitative color scales work best when there are three to five different categories that need to be colored. Once we reach eight to ten different categories or more, the task of matching colors to categories becomes too burdensome to be useful, even if the colors remain sufficiently different to be distinguishable in principle.”. Here, we are coloring a variable with 16 levels, overstepping the guideline by Wilke massively. At the same time, the color scale does not effectively enable us to distinguish the categories. Practically, this makes the plot almost entirely unusable as a tool in answering the questions of interest.\nText labels on the histogram are okay. “Freq” or “Count” are standard for histograms, and one could add “Age (years)” to the x-axis title to have the unit. However, an argument could be made that this is not necessary as it is clear from the context that age is measured in years. On the other hand, the legend title and labels need some work. The legend title of “Var2” is non-informative, and it actually inhibits us from answering questions of interest. The reader might be able to deduce it has something to do with crime type from the values of the variable, but the reader will not be certain what they are seeing. The legend labels could be formatted nicer with line breaks. Unless figure width is scaled up, it makes the figure harder to see and thus harder to interpret.\nThe principal of proportional ink is not satisfied in this plot. The height of each bar does not encode the frequency of that crime but rather the difference from the “previous” crime type. As noted earlier, in some cases, data is even “hidden” behind other bars.",
    "crumbs": [
      "Lab assignments",
      "Lab3 - Effective Data Visualisations"
    ]
  },
  {
    "objectID": "labs/lab3_answer.html#question-2",
    "href": "labs/lab3_answer.html#question-2",
    "title": "Lab3 - Effective Data Visualisations",
    "section": "Question 2",
    "text": "Question 2\nTo introduce semitransparency, I specify the alpha argument in geom_col.\n\nggplot(crimeAgeType) +\n  geom_col(aes(Age, Freq, color=Var2, fill=Var2), position=\"identity\",\n           just=0, alpha = .3)\n\n\n\n\n\n\n\n\nThis has not helped the visualisation at all. The plot is even more confusing, as the colors are harder to distinguish from each other. The point of this plot would be to make the bars “hiding” behind others visible, but in this case the bar is a mix of all the colors and not identifiable anyway.\nTo introduce “jitter” in the data, I use position = \"dodge\" which uses position_dodge to make horizontal adjustment of bars within groups. Using position = \"jitter\" in this case creates chaos.\n\nggplot(crimeAgeType) +\n  geom_col(aes(Age, Freq, color=Var2, fill=Var2), position=\"dodge\")\n\n\n\n\n\n\n\n\nThis plot helps us identify a bar for each crime type rather than having some hidden behind each other. This does improve the plot’s ability to help us answer our questions of interest regarding the distribution of crime types across age groups. However, the plot still suffers from problems with colors, and the bars in this plot are so thin that it makes it really hard to see them.\nTo create a plot with another geom, we create a line plot. Changing only one “parameter” at a time, we would keep position = \"idenity\" in an area plot, which leads to exactly the same issue as with the bars where some of the area of some categories would hide behind other categories (though it would be a bit more clear that is what is happening with area than bars).\nWe create the line plot by simply changing the geom to geom_line and making sure to remove fill as an aesthetic as that is not used for line plots.\n\nggplot(crimeAgeType) +\n  geom_line(aes(Age, Freq, color=Var2))\n\n\n\n\n\n\n\n\nThe line plot does help answer the questions of interest. As noted above where we used position = \"dodge\", categories are no longer hidden behind other. Furthermore, due to the amount of bars in the previous plot which made it difficult to see, I would judge this plot to be the best at answering both questions of interest in regards to the most common crime type as well as distribution of crime type across age groups. Though it’s definitely still not good…",
    "crumbs": [
      "Lab assignments",
      "Lab3 - Effective Data Visualisations"
    ]
  },
  {
    "objectID": "labs/lab3_answer.html#question-3",
    "href": "labs/lab3_answer.html#question-3",
    "title": "Lab3 - Effective Data Visualisations",
    "section": "Question 3",
    "text": "Question 3\nFirst, I make sure to create ANZSOC.Division as a factor using the newlabels defined in the assignment, which makes sure to create line breaks every 30 characters and makes all crime types take up 3 lines of text, so they are all top-aligned. With this new variable in data, I re-create crimeAgeType.\nIn my plotting code, I simply label the aesthetics that are used for the legend using the labs function to label both color and fill as “Crime type”. I also add the unit “years” to my x-axis title as well as added a title, which I made bold and with bigger size using the argument plot.title in the theme function.\n\ncrime$ANZSOC.Division &lt;- factor(\n  crime$ANZSOC.Division,\n  levels=newlevels,\n  labels = newlabels\n  )\n\ncrimeAgeType &lt;- as.data.frame(table(crime$Age.Lower, crime$ANZSOC.Division))\ncrimeAgeType$Age &lt;- as.numeric(as.character(crimeAgeType$Var1))\ncrimeAgeType$Crime &lt;- crimeAgeType$Var2\n\nggplot(crimeAgeType) +\n  geom_histogram(aes(x = Age))\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nggplot(crimeAgeType) +\n  geom_col(aes(Age, Freq, color=Crime, fill=Crime), position=\"identity\",\n           just=0) +\n  theme(plot.title = element_text(face = \"bold\", size = 18)) +\n  labs(x = \"Age (years)\", title = \"Criminal offending in New Zealand (2014-2022)\",\n       color = \"Crime type\", fill = \"Crime type\")\n\n\n\n\n\n\n\n\nThe plot now has a title, which according to Wilke should be at the top of the plot when creating a standalone figure, or as the first thing in the caption of a figure. The x-axis provides a unit to remove all doubt. The legend is now much more clear, as we provide information about what the grouping variable is in the title, and the line breaks in the keys make then easier to read and give more room to the figure.\nThis modification does help understand what data is being displayed better, meaning it would be easier to try and interpret it and answer questions of interest. However, only marginally as the plot still has substantive problems in answering questions of interest due to the issues mentioned in question 1.",
    "crumbs": [
      "Lab assignments",
      "Lab3 - Effective Data Visualisations"
    ]
  },
  {
    "objectID": "labs/lab3_answer.html#question-4",
    "href": "labs/lab3_answer.html#question-4",
    "title": "Lab3 - Effective Data Visualisations",
    "section": "Question 4",
    "text": "Question 4\nIn the plot we use facet_wrap to create a plot with small multiples with facets for each crime type. In addition to this, we remove the coloring on crime type, as it is redundant now that we have facets for each crime type. This is in accordance with Wilkes guidelines in section 19.1 where he notes that:\n\n“A second common problem is coloring for the sake of coloring, without having a clear purpose for the colors.”\n\n\nggplot(crimeAgeType) +\n  geom_col(aes(Age, Freq), just=0, fill = \"dodgerblue\") +\n  facet_wrap(~ Crime) +\n  theme(plot.title = element_text(face = \"bold\", size = 18)) +\n  labs(x = \"Age (years)\", title = \"Criminal offending in New Zealand (2014-2022)\") +\n  theme(strip.text = element_text(hjust = 0))\n\n\n\n\n\n\n\n\nAnswering the question about most common type of crime is actually not that easy to do from this plot. The plot is still better than the previous plots, and we have made sure to satisfy the principle of proportional ink by making sure that bars start from 0 and that we have the same scale for all the facets. However, it can still be difficult to fx. whether the overall frequency of “Theft…” or “Traffic…” is highest.\nCommenting on individual distributions of crime types is much easier. We clearly see unimodal distributions for all crime types that are quite heavily right-skewed. The mode is not the exact same for all, as it ranges from being at 15-19 years to either 25-29 or 30-34 for some distributions (though it’s hard to see exactly what is the peak).",
    "crumbs": [
      "Lab assignments",
      "Lab3 - Effective Data Visualisations"
    ]
  },
  {
    "objectID": "labs/lab3_answer.html#question-5",
    "href": "labs/lab3_answer.html#question-5",
    "title": "Lab3 - Effective Data Visualisations",
    "section": "Question 5",
    "text": "Question 5\nIn order to maximise the data-ink ratio, we should remove any ink that does not show or explain data. Thus, we\n\nRemove the grey background of the facet title strips using strip.background in ggplot2::theme.\nRemove all background from the plot using a combination of ggplot2::theme_minimal and the panel.grid argument in ggplot2::theme.\nChange the histogram to use a ggplot2::geom_segment, which only draws the top of the bars. This is the biggest ink saver, and it allows us to visually see the data value from the placement of the bar without needing the area of a bar to judge data values.\n\n\nggplot(crimeAgeType) +\n  geom_segment(aes(x = Age, y = Freq, xend = Age + 4)) +\n  facet_wrap(~ Crime) +\n  theme(plot.title = element_text(face = \"bold\", size = 18)) +\n  labs(x = \"Age (years)\", title = \"Criminal offending in New Zealand (2014-2022)\") +\n  theme_minimal() +\n  theme(strip.text = element_text(hjust = 0),\n        strip.background = element_blank(),\n        panel.grid = element_blank())\n\n\n\n\n\n\n\n\nComparing this plot to the one in question 4, I am not completely on team Tufte. I prefer the previous visualisation though more ink has been used in that plot. I think the area of the bars help give a better overview of the data. That said, I do like the removal of facet strip background and grid lines that are not needed.\nSo in my opinion this does not help answer questions of interest, but I do recognise we have the same ability to answer them using this plot, given enough time to adjust our glasses.",
    "crumbs": [
      "Lab assignments",
      "Lab3 - Effective Data Visualisations"
    ]
  },
  {
    "objectID": "labs/lab3_answer.html#question-6",
    "href": "labs/lab3_answer.html#question-6",
    "title": "Lab3 - Effective Data Visualisations",
    "section": "Question 6",
    "text": "Question 6\n\nWe create the labels “on the plot” rather than have them in strips from ggplot2::facet_wrap by\n\nremoving the strips entirely with by setting strip.background and strip.text in ggplot2::theme to element_blank().\nadding labels with gggrid::grid_panel. We get access to the labels by mapping them as an aesthetic, so it’s available in the data inside our function that creates the textGrob.\n\nI tried doing the grid lines by just setting panel.grid.major.x to element_blank(), but that did not work, so I removed all grid with panel.grid to element_blank() and then adding panel.grid.major.y as white lines.\n\n\nggplot(crimeAgeType, aes(Age, Freq, group = Crime)) +\n  geom_col(just=0, fill = \"dodgerblue\", alpha = .7) +\n  facet_wrap(~ Crime) +\n  gggrid::grid_panel(\n    function(data, coords) {\n      grid::textGrob(\n        label = data$label,\n        x = grid::unit(2, \"mm\"),\n        y = grid::unit(1, \"npc\") - grid::unit(2, \"mm\"),\n        just = c(\"left\", \"top\")\n      )\n    },\n    aes(label = Crime)\n  ) +\n  theme(plot.title = element_text(face = \"bold\", size = 18)) +\n  labs(x = \"Age (years)\", title = \"Criminal offending in New Zealand (2014-2022)\") +\n  theme(strip.background = element_blank(),\n        strip.text = element_blank(),\n        panel.grid = element_blank(),\n        panel.grid.major.y = element_line(\"white\"))\n\n\n\n\n\n\n\n\nThe plot is basically the same as in question 4, so I have the same comments comparing it to previous plots. This plot does have an addition of only y-grid lines, which I think help read the data more accurately. A way to keep the grid lines but increase the data-ink ratio would be to have a white background and light grey grid lines rather than the other way around.",
    "crumbs": [
      "Lab assignments",
      "Lab3 - Effective Data Visualisations"
    ]
  },
  {
    "objectID": "labs/lab2_answer.html",
    "href": "labs/lab2_answer.html",
    "title": "Lab2 - The grid Graphics System",
    "section": "",
    "text": "Loading packages.\n\nlibrary(ggplot2)\nlibrary(grid)\nlibrary(tidyverse)",
    "crumbs": [
      "Lab assignments",
      "Lab2 - The `grid` Graphics System"
    ]
  },
  {
    "objectID": "labs/lab2_answer.html#question-1",
    "href": "labs/lab2_answer.html#question-1",
    "title": "Lab2 - The grid Graphics System",
    "section": "Question 1",
    "text": "Question 1\n\nyouthSex &lt;- table(youth$SEX)/nrow(youth)\nfemale &lt;- \"#E46C0A\"\nmale &lt;- \"#0070C0\"\n\nWe solve this task by creating a function for generating a grobTree using information from data. The function is made to help produce plots in questions 3, 5 and 8 as well (we need a grob(Tree) for the implementation in the challenge question 8).\n\nyouthSexData &lt;- as.data.frame(youthSex) %&gt;% \n  setNames(c(\"sex\", \"rate\"))\n\nbarRatio_grobTree &lt;- function(\n    data = youthSexData,\n    bar_height = unit(1, \"cm\"),\n    cols = list(female = female, male = male)) {\n  data &lt;- data %&gt;% \n    dplyr::mutate(\n      label = c(paste0(sex, \" \", round(rate * 100), \"%\"))\n    )\n  femaleData &lt;- data %&gt;% \n    dplyr::filter(sex == \"Female\")\n  maleData &lt;- data %&gt;% \n    dplyr::filter(sex == \"Male\")\n  \n  fbar &lt;- rectGrob(x = 0,\n                   hjust = 0,\n                   width = unit(femaleData$rate, \"npc\"),\n                   height = bar_height,\n                   gp = gpar(col = cols$female, fill = cols$female))\n  mbar &lt;- rectGrob(x = 1,\n                   hjust = 1,\n                   width = unit(maleData$rate, \"npc\"),\n                   height = bar_height,\n                   gp = gpar(col = cols$male, fill = cols$male))\n  \n  ftext &lt;- textGrob(x = unit(2, \"mm\"),\n                    label = femaleData$label,\n                    hjust = 0,\n                    gp = gpar(fontface = \"bold\"))\n  mtext &lt;- textGrob(x = unit(1, \"npc\") - unit(2, \"mm\"),\n                    label = maleData$label,\n                    hjust = 1,\n                    gp = gpar(fontface = \"bold\"))\n  \n  grobTree(fbar, mbar, ftext, mtext)\n}\n\nProduce the plot using the function.\n\ngrid.draw(barRatio_grobTree())",
    "crumbs": [
      "Lab assignments",
      "Lab2 - The `grid` Graphics System"
    ]
  },
  {
    "objectID": "labs/lab2_answer.html#question-2",
    "href": "labs/lab2_answer.html#question-2",
    "title": "Lab2 - The grid Graphics System",
    "section": "Question 2",
    "text": "Question 2\nTo solve this task, we just use the barRatio_grobTree function inside a viewport of appropriate size.\n\npushViewport(viewport(width = unit(1, \"npc\") - unit(2, \"cm\")))\ngrid.draw(barRatio_grobTree())\nupViewport()",
    "crumbs": [
      "Lab assignments",
      "Lab2 - The `grid` Graphics System"
    ]
  },
  {
    "objectID": "labs/lab2_answer.html#question-3",
    "href": "labs/lab2_answer.html#question-3",
    "title": "Lab2 - The grid Graphics System",
    "section": "Question 3",
    "text": "Question 3\nWe define a data set similar to in question 1 but in long format with a pair of rows for females and males for each year. We then create the plot using the barRatio_grobTree function defined in question 1 within appropriate viewports.\n\nyouthSexYear &lt;- t(apply(table(substr(youth$Date, 1, 4), youth$SEX), 1, \n                        function(x) x/sum(x)))\n\n## Creating data in long format\nyouthSexYearData &lt;- as.data.frame(t(youthSexYear)) %&gt;%\n  dplyr::mutate(sex = row.names(.)) %&gt;% \n  tidyr::pivot_longer(cols = num_range(prefix = \"\", range = 2014:2022),\n                      names_to = \"year\",\n                      values_to = \"rate\") %&gt;% \n  dplyr::arrange(desc(year)) %&gt;%\n  dplyr::mutate(id_year = dplyr::cur_group_id(), .by = year)\n\nplot9bars &lt;- function(data = youthSexYearData) {\n  id_years &lt;- unique(data$id_year)\n  num_years &lt;- length(id_years)\n  \n  grid.newpage()\n  pushViewport(\n    viewport(\n      layout = grid.layout(nrow = num_years),\n      width = unit(1, \"npc\") - unit(1, \"in\") - unit(1, \"cm\"),\n      x = unit(1, \"in\"),\n      height = unit(1, \"npc\") - unit(2, \"cm\"),\n      y = unit(1, \"cm\"),\n      just = c(\"left\", \"bottom\")\n    )\n  )\n  \n  for (i in id_years) {\n    data_1year &lt;- data %&gt;%\n      dplyr::filter(id_year == i)\n    bar &lt;- barRatio_grobTree(\n      data = data_1year,\n      bar_height = convertHeight(unit(.08, \"npc\"), \"inches\")\n    )\n    pushViewport(\n      viewport(\n        layout.pos.col=1, layout.pos.row=i\n      )\n    )\n    grid.draw(bar)\n    upViewport()\n  }\n  popViewport(0)\n  \n  pushViewport(\n    viewport(\n      layout = grid.layout(nrow = num_years),\n      width = unit(1, \"in\"),\n      x = unit(1, \"in\") - unit(2, \"mm\"),\n      height = unit(1, \"npc\") - unit(2, \"cm\"),\n      y = unit(1, \"cm\"),\n      just = c(\"right\", \"bottom\")\n    )\n  )\n  for (i in id_years) {\n    year &lt;- data %&gt;%\n      dplyr::filter(id_year == i) %&gt;% \n      dplyr::pull(year) %&gt;% \n      unique()\n    pushViewport(viewport(layout.pos.col=1, layout.pos.row=i))\n    grid.text(year, x = 1, hjust = 1)\n    upViewport()\n  }\n  popViewport(0)\n}\n\nGenerate plots with default and specified fig.height/width respectively, using the new plot9bars function.\n\nplot9bars()\n\n\n\n\n\n\n\n\n\nplot9bars()\n\n\n\n\n\n\n\n\nThis plot gives us information about our first question of interest about the ratio of female and male offenders across time. The bars show that the proportion of female offenders has been monotonically decreasing in the years 2018-2022, where the proportion of females went from 29% of offenders to 24%.",
    "crumbs": [
      "Lab assignments",
      "Lab2 - The `grid` Graphics System"
    ]
  },
  {
    "objectID": "labs/lab2_answer.html#question-4",
    "href": "labs/lab2_answer.html#question-4",
    "title": "Lab2 - The grid Graphics System",
    "section": "Question 4",
    "text": "Question 4\nDefine the data given in the assignment.\n\nyouth$Abbrev &lt;- \n  gsub(\",\", \"\",\n       unlist(lapply(strsplit(as.character(youth$ANZSOC.Division), \" \"),\n                     function(x) x[1])))\nyouthTrendType &lt;- as.data.frame(table(youth$Date, youth$Abbrev))\nyouthTrendType$Date &lt;- as.Date(youthTrendType$Var1)\n## Order crime types\ntypes &lt;- table(youth$Abbrev)\nnewlevels &lt;- names(types)[order(types, decreasing=TRUE)]\nyouthTrendType$Type &lt;- factor(youthTrendType$Var2, levels=newlevels)\n\nabb &lt;- unique(youth[c(\"Abbrev\", \"ANZSOC.Division\")])\n\nWe create the facetted line plot using ggplot2.\n\nfacet_plot &lt;- function(data = youthTrendType, scales = \"fixed\", ...) {\n  data %&gt;% \n    ggplot(aes(x = Date, y = Freq, ...)) +\n    geom_line(show.legend = FALSE) +\n    facet_wrap(~ Type, scales = scales)\n}\nfacet_plot()\n\n\n\n\n\n\n\n\nThis plot tells nothing about gender differences in crime offence. However, the plot shows time trends for different crime types. It seems that for almost all types of crime, there is a downward trend in the frequency of offences. The only type of crime that is clearly not on a downward trend is the “Dangerous” (Dangerous or Negligent Acts Endangering Persons) crimes.\nHowever, this plot does have an issue since the facet_wrap uses scales = \"fixed\", meaning that the y-axis scale is the same for all crime types. This makes it hard to see what is happening with the crime types that are not as frequent as fx. theft. To investigate further, we could explore the use of scales = \"free\".",
    "crumbs": [
      "Lab assignments",
      "Lab2 - The `grid` Graphics System"
    ]
  },
  {
    "objectID": "labs/lab2_answer.html#question-5",
    "href": "labs/lab2_answer.html#question-5",
    "title": "Lab2 - The grid Graphics System",
    "section": "Question 5",
    "text": "Question 5\nTo solve this exercise, we can simply create viewports to plot inside. We can assign the ggplot object as a value in our environment and then plot it inside the viewport with newpage = FALSE. Then, we can plot the bar with ratios on top. A viewport is not strictly necessary here, but makes the function I created earlier work with default behavior.\n\nfac &lt;- facet_plot()\npushViewport(\n  viewport(\n    height = unit(1, \"npc\") - unit(1, \"cm\"),\n    y = 0,\n    just = c(\"centre\", \"bottom\")\n  )\n)\nplot(fac, newpage = FALSE)\nupViewport()\n\npushViewport(\n  viewport(\n    height = unit(1, \"cm\"),\n    y = unit(1, \"npc\"),\n    just = c(\"centre\", \"top\")\n  )\n)\ngrid.draw(barRatio_grobTree())\nupViewport()",
    "crumbs": [
      "Lab assignments",
      "Lab2 - The `grid` Graphics System"
    ]
  },
  {
    "objectID": "labs/lab2_answer.html#question-6",
    "href": "labs/lab2_answer.html#question-6",
    "title": "Lab2 - The grid Graphics System",
    "section": "Question 6",
    "text": "Question 6\nWe use the grid package to define a grob (graphical object) using the xGrob functions. In this case, we create a transparent blue box with rectGrob and then add it to each facet of the ggplot using the grid_panel function from gggrid, which adds the grob to each facet.\n\ntransBlueBox &lt;- rectGrob(\n  width = unit(.15, \"npc\"),\n  x = 1,\n  hjust = 1,\n  gp = gpar(col = male, fill = male, alpha = 0.35))\n\nfacet_plot() +\n  gggrid::grid_panel(transBlueBox)",
    "crumbs": [
      "Lab assignments",
      "Lab2 - The `grid` Graphics System"
    ]
  },
  {
    "objectID": "labs/lab2_answer.html#question-7",
    "href": "labs/lab2_answer.html#question-7",
    "title": "Lab2 - The grid Graphics System",
    "section": "Question 7",
    "text": "Question 7\nTo solve this task, we can make use of the fact that gggrid::grid_panel can take a function producing a grob rather than a static grob as input. In this case, since we want to color the part of the graph from 2022, we create a data set consisting of only values from this period. We then create a function which creates a rectGrob as a function of input data, using ranges to define the size of the rectangle. We then input this function add_bar in gggrid::grid_panel, which uses the function within each panel. Thus, within each panel, data will consist of observation only from year 2022 and that type of crime. We can then simply find the ranges of the x- and y- values to define the area of the rectangle.\n\nyouthTrendType2022 &lt;- youthTrendType %&gt;% \n  dplyr::filter(lubridate::year(Date) &gt;= 2022)\n\nadd_bar &lt;- function(data, coords) {\n  max_y &lt;- max(coords$y)\n  min_y &lt;- min(coords$y)\n  \n  max_x &lt;- max(coords$x)\n  min_x &lt;- min(coords$x)\n  diff_x &lt;- max_x - min_x\n  \n  rectGrob(\n    x = min_x,\n    width = diff_x,\n    hjust = 0,\n    y = min(coords$y),\n    height = max_y - min_y,\n    vjust = 0,\n    gp = gpar(col = male, fill = male, alpha = .35)\n  )\n}\n\nfacet_plot() +\n  gggrid::grid_panel(add_bar,\n                     data = youthTrendType2022)\n\n\n\n\n\n\n\n\nThis plot, like in question 4 and 6 does not help us answer questions regarding gender differences in offending. In question 4 we discussed how the plot can be used to identify a downward trend over time for most crime types except for “Dangerous” (Dangerous or Negligent Acts Endangering Persons) crimes.\nThis plot however highlights data from year 2022, which makes us notice an upward trend in data from this year alone for all crime types. This is something that was not easily “catchable” in the plot from question 4. So this plot does help us understand what is happening from year 2022 and onward.\nThe plot still suffers from the fact that not-so-frequent crime types are hard to see, so below I have made the same plot but with scales = \"free_y\" to better be able to investigate the low-frequency crime types.\n\nfacet_plot(scales = \"free_y\") +\n  gggrid::grid_panel(add_bar,\n                     data = youthTrendType2022)\n\n\n\n\n\n\n\n\nThis plot shows that even for the low-frequency crime types there is the same downward trend in most of data but with a small increase from year 2022 and onwards.",
    "crumbs": [
      "Lab assignments",
      "Lab2 - The `grid` Graphics System"
    ]
  },
  {
    "objectID": "labs/lab2_answer.html#challenge",
    "href": "labs/lab2_answer.html#challenge",
    "title": "Lab2 - The grid Graphics System",
    "section": "Challenge",
    "text": "Challenge\nDefine data as in assignment to use for plot:\n\nyouthTrendTypeSex &lt;- as.data.frame(table(youth$Date, youth$Abbrev,\n                                         youth$SEX))\nyouthTrendTypeSex$Date &lt;- as.Date(youthTrendTypeSex$Var1)\nyouthTrendTypeSex$Type &lt;- factor(youthTrendTypeSex$Var2, levels=newlevels)\nyouthTrendTypeSex$Sex &lt;- factor(youthTrendTypeSex$Var3)\n\nLike in question 7, we create a function with arguments data and coords that we input to gggrid::grid_panel. In this case, we create a summary of the proportion of female and male offenders within each panel (crime type) and use these summaries to create bars on the right to visualise this. We also add white horizontal lines at break points 0.1 to 0.5 to make it more easy to see the distribution of men vs. women in each panel.\nTo create such a collection of grobs (2 rectangles to form the bar with proportions and a segment with white lines), we use the gTree function and specify all 3 grobs as children using a gList.\nTo also add a bar with the overall proportions to the right of the plot, we simply utilise viewports as in question 5, but now using the angle argument to create a vertical bar. We also extract the colors used as a default from ggplot to color our groups and use them for our bar.\n\nadd_rate &lt;- function(data, coords) {\n  rateData &lt;- data %&gt;%\n    summarise(offences = sum(y), .by = colour) %&gt;%\n    mutate(rate = offences / sum(offences))\n  \n  bar1 &lt;- rectGrob(\n    x = 1,\n    width = unit(1, \"mm\"),\n    hjust = 1,\n    y = 0,\n    height = rateData[1, ]$rate,\n    vjust = 0,\n    gp = gpar(col = rateData[1, ]$colour,\n              fill = rateData[1, ]$colour)\n  )\n  bar2 &lt;- rectGrob(\n    x = 1,\n    width = unit(1, \"mm\"),\n    hjust = 1,\n    y = 1,\n    height = rateData[2, ]$rate,\n    vjust = 1,\n    gp = gpar(col = rateData[2, ]$colour,\n              fill = rateData[2, ]$colour)\n  )\n  lines &lt;- segmentsGrob(x0 = unit(1, \"npc\"), x1 = unit(1, \"npc\") - unit(1, \"mm\"),\n                        y0 = seq(0.1, 0.5, 0.1), y1 = seq(0.1, 0.5, 0.1),\n                        gp = gpar(col = \"white\", fill = \"white\"))\n  gTree(children = gList(bar1, bar2, lines))\n}\n\nsexFacetPlot &lt;- function(data = youthTrendTypeSex, scales = \"fixed\") {\n  grid.newpage()\n  p &lt;- facet_plot(data = data,\n                  color = Sex,\n                  scales = scales) +\n    gggrid::grid_panel(add_rate)\n  \n  pushViewport(\n    viewport(\n      x = 0,\n      just = c(0, .5),\n      width = unit(.9, \"npc\")\n    )\n  )\n  plot(p, newpage = FALSE)\n  upViewport()\n  \n  cols_in_plot &lt;- scales::pal_hue()(2)\n  cols_as_list &lt;- as.list(cols_in_plot) %&gt;% setNames(c(\"female\", \"male\"))\n  \n  pushViewport(\n    viewport(\n      x = unit(1, \"npc\") - unit(.1, \"npc\") / 2,\n      height = unit(.1, \"npc\"),\n      width = convertUnit(\n        unit(0.7, \"npc\"),\n        unitTo = \"in\",\n        axisFrom = \"y\",\n        axisTo = \"x\"),\n      angle = 90\n    )\n  )\n  grid.draw(barRatio_grobTree(cols = cols_as_list,\n                             bar_height = unit(6.5, \"mm\")))\n  upViewport()\n}\n\nUse the new function to create the plot:\n\nsexFacetPlot()\n\n\n\n\n\n\n\n\nThis plot now helps us answer all questions of interest. Again, using free scales in the facets, I think we gain more insight in what is happening:\n\nsexFacetPlot(scales = \"free_y\")",
    "crumbs": [
      "Lab assignments",
      "Lab2 - The `grid` Graphics System"
    ]
  },
  {
    "objectID": "labs/lab2_answer.html#the-grid-package",
    "href": "labs/lab2_answer.html#the-grid-package",
    "title": "Lab2 - The grid Graphics System",
    "section": "The grid package",
    "text": "The grid package\nThe grid package allows total customisation in creating grobs (graphical objects). They can either be drawn directly using grid::grid.xx functions or created as grobs with grid::xxGrob functions to be drawn later (with grid::grid.draw). This enables us to gather different grobs in a grob tree with grid::gTree and specifying grobs with a grid::gList as the children argument (alternatively use grid::grobTree when all components are grobs). See more in question 1.\n\nUsing viewports\nWe can use grid::viewport with grid::pushViewport to draw whatever we want inside a certain area of our “full plotting area” and then go to a parent viewport with grid::upViewport (grid::popViewport navigates to parent viewport AND deletes the current viewport from the viewport tree). See questions 2, 3, 5 and 8.\nAdditional takeaways about viewports:\n\nNote this also works with ggplot2 by assigning the ggplot object a value (fx. p) and then plotting it “inside the viewport” with plot(p, newpage = FALSE). See questions 5 and 8.\nWe can use the grid::convertUnit function to change the axis we are referencing (useful fx. when creating a viewport with angle = 90/270). See question 8.\nA strong way of using viewports is using xscale and/or yscale parameters in the grid::viewport function and the using the grid::unit function with units = \"native\" specified to make your grobs relate to the scale of the viewport.\nUse of grid::grid.layout as in question 3 can help with many situations.\n\nNote that ggplot2 is built on grid. ggplot2 uses viewports from grid. Fx. on a simple plot, it uses (nested) viewports for the background, axis text, axis ticks, etc. etc.",
    "crumbs": [
      "Lab assignments",
      "Lab2 - The `grid` Graphics System"
    ]
  },
  {
    "objectID": "labs/lab2_answer.html#combining-grid-and-ggplot2---the-gggrid-package",
    "href": "labs/lab2_answer.html#combining-grid-and-ggplot2---the-gggrid-package",
    "title": "Lab2 - The grid Graphics System",
    "section": "Combining grid and ggplot2 - The gggrid package",
    "text": "Combining grid and ggplot2 - The gggrid package\nAs mentioned above, viewports and ggplots integrate nicely using just grid and ggplot2. However, it’s easy to combine elements of grid to ggplots to create overlays on each facet/panel with gggrid::grid_panel or for each group using gggrid::grid_group.\nThese functions either take a static grob or a function that will create a grob (or a tree of grobs) within each panel/group. The function takes data and coords as an argument, and it will then use this function to draw using the function on only the data in that panel (stratified data). Note that the coords are transformed values of x and y (from the aesthetic mapping) to scale 0-1, so it can be plotted correctly in the scale of the viewport. data contains the untransformed data and includes columns of other aesthetics (fx. colour).\nSee more in questions 6, 7 and 8.",
    "crumbs": [
      "Lab assignments",
      "Lab2 - The `grid` Graphics System"
    ]
  },
  {
    "objectID": "labs/lab2_answer.html#answering-questions-of-interest",
    "href": "labs/lab2_answer.html#answering-questions-of-interest",
    "title": "Lab2 - The grid Graphics System",
    "section": "Answering questions of interest",
    "text": "Answering questions of interest\nThe proportion of female vs. male offenders is on a downward trend with the proportion of female offenders monotonically decreasing from 29% in 2018 to 24% in 2022, which is visible from the plot in question 3.\nFrom question 4 (and 5) we see an overall downward in frequency of offences. We do however see an increase for a single crime type “Dangerous” (Dangerous or Negligent Acts Endangering Persons). Looking at the plot in question 6, it becomes apparent that across all crime types, there seems to be an increase from the start of 2022. This is further highlighted in question 7, where we use a more precise, data-driven method to show the increase from start of year 2022.\nLooking at the plot from the challenge, we can comment on some of the same things as in the other plots, but those plots are more “specific” and perhaps a bit better at answering each question. This plot however gives an overview of both the proportion of female vs. male offenders through time as well as overall frequency across time and crime types. The plot also provides information not previously available by showing the proportions for each crime type.",
    "crumbs": [
      "Lab assignments",
      "Lab2 - The `grid` Graphics System"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "STATS 787: Data Visualisation lab assignments",
    "section": "",
    "text": "This Quarto website is home to assignment lab answers in the course STATS 787: Data Visualisation at UoA (University of Auckland) held by the author of the grid package Paul Murrell.\n\n\n\n Back to top"
  },
  {
    "objectID": "labs/lab1_answer.html",
    "href": "labs/lab1_answer.html",
    "title": "Lab1 - Grammar of Graphics",
    "section": "",
    "text": "Loading packages.\nlibrary(ggplot2)\nlibrary(tidyverse)",
    "crumbs": [
      "Lab assignments",
      "Lab1 - Grammar of Graphics"
    ]
  },
  {
    "objectID": "labs/lab1_answer.html#question-1",
    "href": "labs/lab1_answer.html#question-1",
    "title": "Lab1 - Grammar of Graphics",
    "section": "Question 1",
    "text": "Question 1\nWe create the bar plot below by using the geom_bar geom function to create a summary statistic of counts of the variable Age.Lower (geom_bar uses the stat stat_count behind the scenes to create the summary), which we use as out x in our aesthetic mapping for the plot. Note that we set the just argument to 0 to ensure a left-alignment of the bars (default is 0.5, which centers the bars).\n\ncrime %&gt;% \n  ggplot(aes(x = Age.Lower)) +\n  geom_bar(just = 0)\n\n\n\n\n\n\n\n\nThis plot has substantive issues in answering our questions of trend over time as well as differences between males and females as information about time and gender is not in the plot. However, the bar plot does show that the highest number of incidents across all values of a lower bound of a 5-year age band of the offender, is among incidents with a lower age band of 15 years. There are also quite a few incidents with a lower bound of 10 years, which seems to match the frequency of incidents corresponding to a lower limit of 50 years. Thus, youth offending is occurring frequently, but by accumulating the adult incidents, we see that adult offending is in general more frequent than youth offending.",
    "crumbs": [
      "Lab assignments",
      "Lab1 - Grammar of Graphics"
    ]
  },
  {
    "objectID": "labs/lab1_answer.html#question-2",
    "href": "labs/lab1_answer.html#question-2",
    "title": "Lab1 - Grammar of Graphics",
    "section": "Question 2",
    "text": "Question 2\nDoing the summary statistic of count across the different lower limits ourselves in data and then plotting, we use geom geom_col, which utilises the stat stat_identity with aesthetic mapping of x being Var1 (our lower bound of ages) and y being Freq (our frequency of incidents for the corresponding lower bound of age).\n\ncrimeTab &lt;- as.data.frame(table(crime$Age.Lower))\ncrimeTab %&gt;% \n  ggplot(aes(x = Var1, y = Freq)) +\n  geom_col(just = 0)",
    "crumbs": [
      "Lab assignments",
      "Lab1 - Grammar of Graphics"
    ]
  },
  {
    "objectID": "labs/lab1_answer.html#question-3",
    "href": "labs/lab1_answer.html#question-3",
    "title": "Lab1 - Grammar of Graphics",
    "section": "Question 3",
    "text": "Question 3\nWe create the plot as we did in question 1 with geom_bar geom function (which uses stat_count as stat) with aesthetic mapping of Age.Lower as our x. However, in this case, we add aesthetic mappings of fill = SEX, which fills the bars with colors based on the observations’ value of SEX in the data set. The default value of position in geom_bar is \"stack\", so by the default behavior of the geom, we produce this stacked plot.\n\ncrime %&gt;% \n  ggplot(aes(x = Age.Lower, fill = SEX)) +\n  geom_bar(just = 0)\n\n\n\n\n\n\n\n\nThis new plot does not provide new information in regards to our question of youth vs. adult offending, compared to the plot in question 1, so we could say all the same to that question. The time trend question is still not answerable by this plot due to the substantive issue of missing information about time.\nHowever, this plot does help us get an idea of differences between female and male offenders. The plot shows immediately that there are more male offenders than female offenders. It looks like the ratio is quite similar across different lower bounds of age, though it’s hard to judge whether this is exactly or just approximately correct from this plot.",
    "crumbs": [
      "Lab assignments",
      "Lab1 - Grammar of Graphics"
    ]
  },
  {
    "objectID": "labs/lab1_answer.html#question-4",
    "href": "labs/lab1_answer.html#question-4",
    "title": "Lab1 - Grammar of Graphics",
    "section": "Question 4",
    "text": "Question 4\n\ncrime %&gt;% \n  ggplot(aes(x = Age.Lower, fill = SEX)) +\n  geom_bar(just = 0, position = \"dodge\")\n\n\n\n\n\n\n\ncrime %&gt;% \n  ggplot(aes(x = Age.Lower, fill = SEX)) +\n  geom_bar(just = 0, position = \"identity\")\n\n\n\n\n\n\n\ncrime %&gt;% \n  ggplot(aes(x = Age.Lower, fill = SEX)) +\n  geom_bar(just = 0, position = \"fill\")\n\n\n\n\n\n\n\n\nThe plot with position = \"fill\" cannot help us answer the question about youth vs. adult offending (or the time trend). However, it does a great job at trying to answer the question about differences between male and female offending, as it is essentially plotting the ratio of male and female offenders as its response on the y-axis. For the plot in question 3, I said it looked like the ratio was approximately the same across different lower bounds of age. This plot shows more clearly that the ratios are quite similar, but there are subtle differences. The biggest difference is seen from the very lowest ages, where a higher proportion of males is present, which takes a big drop at lower bound of age 10.\nThe plot with position = \"dodge\" shows incidence rates individually for each combination of gender and lower bound of age, compared to the position = \"stack\", which showed cumulative incidence rates within age groups. In my opinion, position = \"stack\" does a better job of answering the question of youth vs. adult offending by providing cumulative rates while still giving an idea of gender differences, and the position = \"fill\" plot does a better job of answering the question about gender differences.\nThe plot with position = \"identity\" does not provide any position adjustment, thus positioning the bar for females behind the bar for males, thus making the plot not provide any information about gender differences, though that was the whole point of coloring the bars by gender. Biggest possible substantive issue in answering the question of gender differences; no information is available.",
    "crumbs": [
      "Lab assignments",
      "Lab1 - Grammar of Graphics"
    ]
  },
  {
    "objectID": "labs/lab1_answer.html#question-5",
    "href": "labs/lab1_answer.html#question-5",
    "title": "Lab1 - Grammar of Graphics",
    "section": "Question 5",
    "text": "Question 5\nTo create a line plot, we can use the geom_line geom. We use the stat_identity stat to display the data as is, as we have already ourselves created the summary statistic of frequency across time that we are interested in. Thus, we just use aesthetic mappings of x = Date and y = Freq to plot the values in data.\n\ncrimeTrend &lt;- as.data.frame(table(crime$Date))\ncrimeTrend$Date &lt;- as.Date(crimeTrend$Var1)\n\ncrimeTrend %&gt;% \n  ggplot(aes(x = Date, y = Freq)) +\n  geom_line()\n\n\n\n\n\n\n\n\nThis plot has substantive issues in answering the questions we previously discussed, as it does not contain information on age or gender. However, it can be used to answer the question about time trend. The plot shows that there has been an overall downwards trend in incidence rates of crime from 2014 to 2022 with natural variability in data. However, we do notice some peaks that seem to have larger variance than other places in data during year 2016 and at the start of 2020. Furthermore, the downwards trend seems to reverse at the start of 2022, with incidence rates that seem to start increasing.",
    "crumbs": [
      "Lab assignments",
      "Lab1 - Grammar of Graphics"
    ]
  },
  {
    "objectID": "labs/lab1_answer.html#question-6",
    "href": "labs/lab1_answer.html#question-6",
    "title": "Lab1 - Grammar of Graphics",
    "section": "Question 6",
    "text": "Question 6\nWe use the geom_line geom with stat_identity stat and with aesthetic mappings of x = Date, y = Freq, color = Var2 and linewidth = 1.4. Note however that we use the aesthetic linewidth outside aes() because it is not associated with any variable but rather we just want to change it statically for all lines in the plot. If we wished to change the linewidth for different values of SEX, we could put it inside aes(). Note also that we change the default colors assigned to the different gender by using scale_color_manual to tell exactly what colors we would like for the different values.\n\ncrimeTrendSex &lt;- as.data.frame(table(crime$Date, crime$SEX))\ncrimeTrendSex$Date &lt;- as.Date(crimeTrendSex$Var1)\n\ncrimeTrendSex %&gt;% \n  ggplot(aes(x = Date, y = Freq, color = Var2)) +\n  geom_line(linewidth = 1.4) +\n  scale_color_manual(values = c(Female = \"pink\", Male = 4))\n\n\n\n\n\n\n\n\nThe plot shows the exact same as we commented in the previous question about the time trend. Overall a downward trend is seen with some larger peaks in a couple location, and a sudden rise in incidence is seen from the start of 2022.\nThis plot, however, can also help answer the question about gender differences, as we can see from the plot that there are quite a few more male offenders than female offenders. It does a good job if trying to answer a questions specific to absolute incidence rates for males and females across years. If seeking to answer a question about the ratio of female and male offenders, a new response variable consisting of this ratio and plotting against time would be benefitial.",
    "crumbs": [
      "Lab assignments",
      "Lab1 - Grammar of Graphics"
    ]
  },
  {
    "objectID": "labs/lab1_answer.html#question-7",
    "href": "labs/lab1_answer.html#question-7",
    "title": "Lab1 - Grammar of Graphics",
    "section": "Question 7",
    "text": "Question 7\nWe use the geom_line geom with stat_identity stat and with aesthetic mappings of x = Date, y = Freq, group = Age, color = Age and linewidth = 1. The use of group = Age is to ensure that only points inside each group are connected to form a line. Without this aesthetic mapping, the plot would be a complete mess (more than it is…)\n\ncrimeTrendAge &lt;- as.data.frame(table(crime$Date, crime$Age.Lower))\ncrimeTrendAge$Date &lt;- as.Date(crimeTrendAge$Var1)\ncrimeTrendAge$Age &lt;- as.numeric(as.character(crimeTrendAge$Var2))\n\ncrimeTrendAge %&gt;% \n  ggplot(aes(x = Date, y = Freq, group = Age, color = Age)) +\n  geom_line(linewidth = 1)\n\n\n\n\n\n\n\n\nIn my opinion, this plot does a bad job of trying to answer any of the questions. It tries to help answer the question about trend over time while trying to show differences between youth and adult offending. However, the plot is trying too much, leading the reader unable to derive any meaning from it.\nIt’s possible to sense a form of downward trend over time, but it’s hard to see and is much better answered using one of the previous plots. In regards to youth vs. adult offending, the reader is unable to identify the age corresponding to a color due to the small difference in colors between many groups, possibly creating perceptual issues as a color might seem darker or lighter than it actually is if surrounded by a color on the “opposite side”.",
    "crumbs": [
      "Lab assignments",
      "Lab1 - Grammar of Graphics"
    ]
  },
  {
    "objectID": "labs/lab1_answer.html#question-8",
    "href": "labs/lab1_answer.html#question-8",
    "title": "Lab1 - Grammar of Graphics",
    "section": "Question 8",
    "text": "Question 8\nThe geom is again geom_line with stat stat_identityand x = Date, y = Freq and linewidth = 1 as aesthetic mappings and facet by values of Age.\n\ncrimeTrendAge %&gt;% \n  ggplot(aes(x = Date, y = Freq)) +\n  geom_line(linewidth = 1) +\n  facet_wrap(~ Age)\n\n\n\n\n\n\n\n\nThis plot helps us answer a question of trends over time of youth vs. adult offending. So the plot does not help answering the “overall/general/individual” questions posed at the start but rather helps answer this “combined question”. On previous plots we saw a downward trend across time, and we saw the highest frequency of incidents for the age group with lower bound of 15 years.\nThis plot shows that the downward trend is actually more dramatic for this specific age group that showed the highest incidence. Other age groups also show a downward trend, but much more slightly, and it thus looks like the downward trend overall is dominated by the downward trend of younger groups.",
    "crumbs": [
      "Lab assignments",
      "Lab1 - Grammar of Graphics"
    ]
  },
  {
    "objectID": "labs/lab1_answer.html#question-9",
    "href": "labs/lab1_answer.html#question-9",
    "title": "Lab1 - Grammar of Graphics",
    "section": "Question 9",
    "text": "Question 9\nThis plot is created as in question 1 but with facets on the new Year variable. That is, we use geom_bar as the geom (with stat_count as the stat) and aesthetic mapping of x = Age.Lower.\n\ncrime$Year &lt;- as.POSIXlt(crime$Date)$year + 1900\n\ncrime %&gt;% \n  ggplot(aes(x = Age.Lower)) +\n  geom_bar(just = 0) +\n  facet_wrap(~ Year)\n\n\n\n\n\n\n\n\nThe plot helps answer the same question as the previous question, i.e. trend over time of offending across age groups. The plot supports our explanation from above, seeing that youth offending is on a more dramatic downward trend compared to the older age groups. This is the main strength of the plot. We can also see that the overall frequency is decreasing, but other plots have been better at showing that.",
    "crumbs": [
      "Lab assignments",
      "Lab1 - Grammar of Graphics"
    ]
  },
  {
    "objectID": "labs/lab1_answer.html#question-10",
    "href": "labs/lab1_answer.html#question-10",
    "title": "Lab1 - Grammar of Graphics",
    "section": "Question 10",
    "text": "Question 10\nI notice this plot does a reordering of the levels of the factor with divisions, ensures line break in the legend, removes text, ticks and titles from the x- and y-axis to increase the data-to-ink ratio and manual choosing of colors to make neighboring groups more distinct than the default color choice.\n\ncrimeTrendDivision &lt;- as.data.frame(table(crime$Age.Lower, crime$ANZSOC.Division))\ncrimeTrendDivision$Age &lt;- crimeTrendDivision$Var1\ncrimeTrendDivision$Division &lt;- stringr::str_wrap(crimeTrendDivision$Var2, 30)\n\nord_div &lt;- crimeTrendDivision %&gt;% \n  dplyr::filter(Age == 15) %&gt;% \n  dplyr::arrange(desc(Freq)) %&gt;% \n  dplyr::pull(Division) %&gt;% \n  as.character()\ncrimeTrendDivision$ANZSOC.Division &lt;- factor(crimeTrendDivision$Division,\n                                              levels = ord_div)\ncolors &lt;- rep(as.character(paletteer::paletteer_d(\"ggthemes::colorblind\")), 2) %&gt;% \n  setNames(levels(crimeTrendDivision$ANZSOC.Division))\n\ncrimeTrendDivision %&gt;% \n  ggplot(aes(x = ANZSOC.Division, y = Freq,\n             group = ANZSOC.Division, fill = ANZSOC.Division)) +\n  geom_col(just = 0, position = \"dodge\") +\n  facet_wrap(~ Age) +\n  scale_fill_manual(values = colors) +\n  theme(axis.text = element_blank(),\n        axis.ticks = element_blank(),\n        axis.title = element_blank(),\n        legend.key.width = unit(0.3, \"cm\"),\n        legend.key.height = unit(0.9, \"cm\"),\n        legend.key.spacing.y = unit(0.1, \"cm\"),\n        legend.text = element_text(size = 8))",
    "crumbs": [
      "Lab assignments",
      "Lab1 - Grammar of Graphics"
    ]
  },
  {
    "objectID": "labs/lab4_answer.html",
    "href": "labs/lab4_answer.html",
    "title": "Lab4 - Visual Perception",
    "section": "",
    "text": "Loading packages.\nlibrary(tidyverse)\nlegend_text_size &lt;- 6",
    "crumbs": [
      "Lab assignments",
      "Lab4 - Visual Perception"
    ]
  },
  {
    "objectID": "labs/lab4_answer.html#questions-of-interest",
    "href": "labs/lab4_answer.html#questions-of-interest",
    "title": "Lab4 - Visual Perception",
    "section": "Questions of interest",
    "text": "Questions of interest\nFor the data set of youth crimes (having filtered data to include only those ages 15-19), we want to investigate:\n\nWhat is the most and least common types of crimes?\nHow do the three most common types of crime compare?\nCompare “Public Order Offences” and “Dangerous or Negligent Acts Endangering Persons” crime types",
    "crumbs": [
      "Lab assignments",
      "Lab4 - Visual Perception"
    ]
  },
  {
    "objectID": "labs/lab4_answer.html#question-1",
    "href": "labs/lab4_answer.html#question-1",
    "title": "Lab4 - Visual Perception",
    "section": "Question 1",
    "text": "Question 1\nWe create the plot using geom_col combined with coord_polar.\n\nggplot(youthType, aes(x = \"\", y = Freq, fill = Var1)) +\n  geom_col() +\n  coord_polar(theta = \"y\") +\n  labs(x = \"\", y = \"\", fill = \"ANZSOC.Divison\", title = \"Overall Number of Incidents\") +\n  theme(legend.text = element_text(size = legend_text_size))\n\n\n\n\n\n\n\n\n\nQuestions of interest\nIt’s clear that “Theft and related offences” is the most common type of crime. We see that “Homicide and related offences” is the least common type of crime, but mostly we deduce that from the label, as it is hard to see on the pie chart.\nIt looks like the most common crime type “Theft and related offences” is slightly more common than “Acts intended to cause injury”, which is only very slightly more common than “Traffic and vehicle regulatory offences”.\n“Public Order Offences” and “Dangerous or Negligent Acts Endangering Persons” are not differentiable from the pie chart, only due to the label. We cannot comment on time trend between these crime types.\n\n\nVisual channels and perception\nAngle is used as a channel to represent the data value (frequency of crime). The area can also be used to identify the data value, making it a channel as well. Colour is used as a channel for the crime types.\nThe plot presents an issue that is unavoidable with pie charts. Healy writes that “… our visual system is trying to construct a representation of what it is looking at based more on relative differences…”. For pie charts, judging the angle and area in a pie chart, differences are almost always judged smaller than they actually are. In the plot, it’s not obvious that the frequency of “Theft and related offences” is almost 50% more than “Acts intended to cause injury”.\nWe create a new plot with white lines between the areas.\n\nggplot(youthType, aes(x = \"\", y = Freq, fill = Var1)) +\n  geom_col(color = \"white\") +\n  coord_polar(theta = \"y\") +\n  labs(x = \"\", y = \"\", fill = \"ANZSOC.Divison\", title = \"Overall Number of Incidents\") +\n  theme(legend.text = element_text(size = legend_text_size))\n\n\n\n\n\n\n\n\nPersonlly, I think the difference between the most common and 2nd most common crime type looks bigger in this plot than the previous. So it does help a bit, but not as much as using length as a channel ranger than area and angle.",
    "crumbs": [
      "Lab assignments",
      "Lab4 - Visual Perception"
    ]
  },
  {
    "objectID": "labs/lab4_answer.html#question-2",
    "href": "labs/lab4_answer.html#question-2",
    "title": "Lab4 - Visual Perception",
    "section": "Question 2",
    "text": "Question 2\n\nBetter\nAs noted at the end of the previous section, a bar plot would do a better job of showing the data values, using length as a channel. Wilke notes that “… if a data value is encoded entirely as a distance, as is the case with the length of a bar, we perceive it more accurately than when the data value is encoded through a combination of two or more distances that jointly create an area.”.\n\nggplot(youthType, aes(x = Var1, y = Freq, fill = Var1)) +\n  geom_col() + \n  labs(fill = \"ANZSOC.Divison\", title = \"Overall Number of Incidents\") +\n  theme(axis.ticks.x = element_blank(),\n        axis.title.x = element_blank(),\n        axis.text.x = element_blank(),\n        legend.text = element_text(size = legend_text_size))\n\n\n\n\n\n\n\n\n\n\nWorse\nA channel that can be used beside area or length is position on unaligned scales, which in this case combined with small multiples gives a plot that should rather just be a table, as the visual representation gives us no relative differences in terms of anything other than numbers on the y-axis.\n\nggplot(youthType, aes(x = Var1, y = Freq, color = Var1)) +\n  geom_point() +\n  facet_wrap(~ Var1, scales = \"free\") +\n  labs(y = \"\", color = \"ANZSOC.Divison\", title = \"Overall Number of Incidents\") +\n  theme(axis.ticks.x = element_blank(),\n        axis.title.x = element_blank(),\n        axis.text.x = element_blank())",
    "crumbs": [
      "Lab assignments",
      "Lab4 - Visual Perception"
    ]
  },
  {
    "objectID": "labs/lab4_answer.html#question-3",
    "href": "labs/lab4_answer.html#question-3",
    "title": "Lab4 - Visual Perception",
    "section": "Question 3",
    "text": "Question 3\nTo re-create the plot, I create a data set only containing the crime types that we want to draw a white line for. We then create the white line using geom_line with this filtered data as the data as well as run geom_line again to make sure that the white and colored line of highlighted categories are layered on top of the other lines.\n\nobsWithCat &lt;- grepl(\"^(Public|Dangerous)\", youthMonthType$Var2)\nyouthMonthType$highlightCat &lt;- ifelse(obsWithCat, 1, 0)\nyouthMonthTypeHighlightCat &lt;- youthMonthType %&gt;% \n  dplyr::filter(highlightCat == 1)\n\nggplot(youthMonthType, aes(x = Month, y = Freq, color = Var2, group = Var2)) +\n  geom_line() +\n  geom_line(data = youthMonthTypeHighlightCat, color = \"white\", lwd = 4) +\n  geom_line(data = youthMonthTypeHighlightCat) +\n  labs(x = \"\", y = \"\", title = \"Number of Incidents per Month\", color = \"ANZSOC.Division\") +\n  theme(legend.text = element_text(size = legend_text_size))\n\n\n\n\n\n\n\n\n\nQuestions of interest\nFrom this line plot, we can see that same regarding most and least common crime types. “Theft and related offences” is clearly the most common (atleast until about 2020), and the least common is hard to see, but we can judge by the legend. Here it becomes easier to see, however, that the difference between the third most common crime types diminishes with time. In 2014 “Theft and related offences” is almost double as frequent as the 2nd most common “Acts intended to cause injury”, but at around 2020, the 3 most common crime types are about the same frequency.\nRegarding the categories “Public Order Offences” and “Dangerous or Negligent Acts Endangering Persons”, we see that the latter is on an increasing trend, whereas all other crime types seem to be on a downward trend. It increased from a frequency of just under 100 per month in 2014 to almost 150 per month in 2022. Comparing this to “Public Order Offences”, this is the crime type with the biggest decrease, going from a frequency above 200 in 2014 to a frequency just above 50 in 2022.\n\n\nPreattentive pop out and Gestalt Rules\nWhat “pops out” immediately is the coloring of the lines according to crime types as well as the highlighted lines with a white background\nGestalt rules - Connection: The lines are coloured within each crime type, making a connection between the data points that make out each line - Figure and Ground: We use the fact that our plot is layered to have a grey background and then use the contrast of white to highlight our colored lines - Common fate: Almost all of the lines are moving downward (except the one we commented on above), meaning we quickly associate the same trend to almost all crime types - Proximity: When the lines are close, we know immediately that the frequencies of crimes are similar",
    "crumbs": [
      "Lab assignments",
      "Lab4 - Visual Perception"
    ]
  },
  {
    "objectID": "labs/lab4_answer.html#question-4",
    "href": "labs/lab4_answer.html#question-4",
    "title": "Lab4 - Visual Perception",
    "section": "Question 4",
    "text": "Question 4\nDefault colour palette used in ggplot2 is generated by scales::pal_hue(). To desaturate the colors for some of the categories, we can use colorspace::desaturate.\nWe create the plot by mapping aesthetics of color and linewidth to the crime type variable Var2 and then scaling colors and linewidths such that our highlighted groups are not saturated and have a bigger linewidth. Note we do a separate call to geom_line with a subset of data with only the highlighted categories to make them go “on top”.\n\nmonthLabels &lt;- levels(youthMonthType$Var2)\nhighlightCats &lt;- grepl(\"^(Public|Dangerous)\", monthLabels)\ncolors &lt;- scales::pal_hue()(length(monthLabels))\ncolors[!highlightCats] &lt;- sapply(\n  colors[!highlightCats], colorspace::desaturate, amount = 0.8\n)\n\nlwds &lt;- setNames(rep(0.6, length(monthLabels)), monthLabels)\nlwds[highlightCats] &lt;- 1.2\n\nggplot(youthMonthType,\n       aes(x = Month, y = Freq, color = Var2, group = Var2, linewidth = Var2)) +\n  geom_line() +\n  geom_line(data = youthMonthTypeHighlightCat) +\n  scale_color_manual(name = \"ANZSOC.Division\", values = colors) +\n  scale_linewidth_manual(name = \"ANZSOC.Division\", values = lwds) +\n  labs(x = \"\", y = \"\", title = \"Number of Incidents per Month\") +\n  theme(legend.text = element_text(size = legend_text_size))\n\n\n\n\n\n\n\n\nHere we use the same visual channels as above by using color, but instead of drawing a background of white to highlight certain lines, we highlight the lines by making them thicker, thus also using a visual channel of thickness/area. We adjust the saturation (or chroma) of the other lines to not be as saturated as the highlighted lines, making the vibrant colors “pop out” more.\n\nAnother solution using a bit more “hidden” functionalities in ggplot2\nNot using linewidth as an aesthetic but fixing it in a geom, if the data contains the same column as is colored by, it will automatically include linewidth as a column.\n\nggplot(youthMonthType,\n       aes(x = Month, y = Freq, color = Var2, group = Var2)) +\n  geom_line() +\n  geom_line(data = youthMonthTypeHighlightCat, linewidth = 2) +\n  scale_color_manual(name = \"ANZSOC.Division\", values = colors) +\n  labs(x = \"\", y = \"\", title = \"Number of Incidents per Month\") +\n  theme(legend.text = element_text(size = legend_text_size))",
    "crumbs": [
      "Lab assignments",
      "Lab4 - Visual Perception"
    ]
  },
  {
    "objectID": "labs/lab4_answer.html#question-5",
    "href": "labs/lab4_answer.html#question-5",
    "title": "Lab4 - Visual Perception",
    "section": "Question 5",
    "text": "Question 5\nWe use the colorspace::deutan function to transform the colors to what a person with deuteranomaly would see and scale our colors to use this new palette.\n\ncolors_deutan &lt;- colorspace::deutan(\n  colors\n)\nggplot(youthMonthType,\n       aes(x = Month, y = Freq, color = Var2, group = Var2, linewidth = Var2)) +\n  geom_line() +\n  geom_line(data = youthMonthTypeHighlightCat) +\n  scale_color_manual(name = \"ANZSOC.Division\", values = colors_deutan) +\n  scale_linewidth_manual(name = \"ANZSOC.Division\", values = lwds) +\n  labs(x = \"\", y = \"\", title = \"Number of Incidents per Month\") +\n  theme(legend.text = element_text(size = legend_text_size))\n\n\n\n\n\n\n\n\nAlmost all colors look exactly alike. We see a blob of blue-ish lines close to the bottom, and then we have the yellow line that stands out. But otherwise, we just see a mess of grey-ish lines that are indistinguishable.",
    "crumbs": [
      "Lab assignments",
      "Lab4 - Visual Perception"
    ]
  },
  {
    "objectID": "labs/lab4_answer.html#question-6",
    "href": "labs/lab4_answer.html#question-6",
    "title": "Lab4 - Visual Perception",
    "section": "Question 6",
    "text": "Question 6\nTo add grey lines for highlighted categories on each facet, we add a call to geom_line using a subset of the data containing only the highlighted categories, where we make sure to rename the facetting variable to something else, so it appears on all facets. To customise the x-axis, we use scale_x_date with a label specification being a function to allow us to change the display to year without century for years that are not 2022.\n\nyouthMonthTypeHighlightCatRenamed &lt;- youthMonthTypeHighlightCat %&gt;% \n  dplyr::rename(crimeType = Var2)\n\nggplot(youthMonthType, aes(x = Month, y = Freq, group = Var2, color = Var2)) +\n  geom_line(aes(group = crimeType),\n            data = youthMonthTypeHighlightCatRenamed,\n            color = \"grey\") +\n  geom_line() +\n  facet_wrap(~ Var2) +\n  labs(x = \"\", y = \"\",\n       title = \"Number of Incidents per Month\",\n       colour = \"ANZSOC.Division\") +\n  theme(legend.text = element_text(size = legend_text_size),\n        strip.background = element_blank(),\n        strip.text = element_blank()) +\n  scale_x_date(labels = function(x)\n    strftime(x, ifelse(names(x) == 2022, \"%Y\", \"%y\"))\n  )\n\n\n\n\n\n\n\n\nWe can see that the most common type of crime is “Theft…”, and like the other plots, the least common is very hard to identify from the plots, but the label in the legend can help us identify this, though with no gauge of how big the difference is between the least common types of crime.\nIn general the drawing of the 2 highlighted crime types lets us more easily compare between panels. We see that the most common crime type is much more common than the 2nd most common at the start of the data range, but ends up being very similar around 2022. The 3rd most common starts out almost as common as the 2nd, but decreases very rapidly and end up being much less common than the 1st and 2nd.\nRegarding the highlighted categories, exactly the same comments as in Questions of interest in question 3 applies.\nThus, I think this plot actually does a pretty good job of letting us answer all the questions of interest.",
    "crumbs": [
      "Lab assignments",
      "Lab4 - Visual Perception"
    ]
  }
]